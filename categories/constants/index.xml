<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Constants on BennuGD</title><link>https://divhub.github.io/bennugd-website/categories/constants/</link><description>Recent content in Constants on BennuGD</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://divhub.github.io/bennugd-website/categories/constants/index.xml" rel="self" type="application/rss+xml"/><item><title>Alignment Mode Constants</title><link>https://divhub.github.io/bennugd-website/docs/constants/alignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/alignment/</guid><description> Alignment modes are modes which indicate how a graphic or text will be aligned relative to its center.
List Constant Value ALIGN_TOP_LEFT 0 ALIGN_TOP 1 ALIGN_TOP_RIGHT 2 ALIGN_CENTER_LEFT 3 ALIGN_CENTER 4 ALIGN_CENTER_RIGHT 5 ALIGN_BOTTOM_LEFT 6 ALIGN_BOTTOM 7 ALIGN_BOTTOM_RIGHT 8</description></item><item><title>Blit Flags</title><link>https://divhub.github.io/bennugd-website/docs/constants/blit_flags/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/blit_flags/</guid><description>Blit flags are bit flags which can be passed to some map functions, to specify a certain effect when blitting a graphic. These functions are:
xput() map_xput() map_xputnp() They can also be used to specify a certain effect for the blitting of the graphic of a process, by assigning blit flags to its local variable flags.
List Constant Value Description B_HMIRROR 1 Blit the graph horizontally mirrored.</description></item><item><title>Blur Modes</title><link>https://divhub.github.io/bennugd-website/docs/constants/blur/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/blur/</guid><description>Blur modes are used to specify the mode of blurring in the blur().
List Constant Value Description BLUR_NORMAL 0 single pixel: considers pixels located to the left and above of each pixel. BLUR_3X3 1 3x3: considers all 8 adjacent pixels. BLUR_5X5 2 5x5: considers the 24 pixels that surrounds each pixel. BLUR_5X5_MAP 3 5x5 with additional map: Just as the previous one but using a temporary map.</description></item><item><title>CD Status Codes</title><link>https://divhub.github.io/bennugd-website/docs/constants/cd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/cd/</guid><description> CD statuscodes are status codes returned by the function cd_status(), to specify the current status of a CD drive.
List Constant Value Description CD_ERROR -1 Error. CD_TRAYEMPTY 0 The CD tray is empty. CD_STOPPED 1 The CD is stopped. CD_PLAYING 2 The CD is playing. CD_PAUSED 3 The CD is paused.</description></item><item><title>Color Depths</title><link>https://divhub.github.io/bennugd-website/docs/constants/color_depths/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/color_depths/</guid><description>Color depths are used to specify the color depth of the screen, by passing one of them to the function set_mode() as the depth parameter.
See also Graph Modes.
List Constant Value Description MODE_8BITS 8 Use a color depth of 8bit. Also called MODE_8BPP. MODE_16BITS 16 Use a color depth of 16bit. Also called MODE_16BPP. MODE_32BITS 32 Use a color depth of 32bit.</description></item><item><title>Coordinate Numbers Flags</title><link>https://divhub.github.io/bennugd-website/docs/constants/coordinate_numbers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/coordinate_numbers/</guid><description>Coordinatenumber flags are used to set which scroll or mode_7 coordinate system should display a process, by assigning them to the local variable cnumber of that process. This only has influence on scrolls or mode_7 coordinate systems, not on the screen&amp;rsquo;s coordinate system.
How to change the used coordinate system, see ctype and its constants. Coordinate Types.
List Constant Value Description 0 Display the process in all scroll/mode_7-views (default).</description></item><item><title>Coordinate Types</title><link>https://divhub.github.io/bennugd-website/docs/constants/coordinate_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/coordinate_types/</guid><description>Coordinatetype modes are used to set the type of coordinatesytem to be used, by assigning them to the local variable ctype. Different coordinatesystems have different ways of interpreting the coordinates of a process. There&amp;rsquo;s another local variable which influences the interpretation of a process&amp;rsquo; coordinate, which is resolution.
How to change in which individual scroll or Mode7-view the process is visible, see cnumber and its constants. Coordinate Numbers.
List Constant Value Description C_SCREEN 0 The screen&amp;rsquo;s top left corner, coordinate (0,0).</description></item><item><title>FALSE</title><link>https://divhub.github.io/bennugd-website/docs/constants/false/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/false/</guid><description>Definition INT FALSE FALSE is a constant integer, equal to the value 0. It is used to state that something is false and not true.
Checking whether a variable is false, is the same as checking if it&amp;rsquo;s zero.
Example Program example; Private int b = false; Begin // comparison with the constant FALSE if(b == false) say(&amp;quot;b was FALSE! so b==0&amp;quot;); else say(&amp;quot;b was not FALSE! so b!</description></item><item><title>Graph Modes</title><link>https://divhub.github.io/bennugd-website/docs/constants/graph_modes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/graph_modes/</guid><description>Graph modes are used to specify the color depth of the screen and the mode of rendering, by assigning them to the global variable graph_mode. This is also achieved by passing them to the parameters depth and flags in the function set_mode(), which is a pretty tidy solution.
List Color Depths constants:
Constant Value Description MODE_8BITS 8 Use a color depth of 8bit.</description></item><item><title>Graphical Infotypes</title><link>https://divhub.github.io/bennugd-website/docs/constants/graphical_infotypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/graphical_infotypes/</guid><description>Graphical infotypes are used in graphic_info(), to specify what information about a graph is wanted.
List Constant Value Description G_WIDTH 0 Width in pixels. G_WIDE is equivalent, but deprecated. G_HEIGHT 1 Height in pixels. G_X_CENTER 2 X-axis center. Also called G_CENTER_X G_Y_CENTER 3 Y-axis center. Also called G_CENTER_Y G_PITCH 4 Width in bytes. G_DEPTH 5 Color depth in bits per pixel.</description></item><item><title>Joystick Constants</title><link>https://divhub.github.io/bennugd-website/docs/constants/joystick/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/joystick/</guid><description>Joystick constants are constants used with joysticks.
List Constant Value Description JOY_HAT_CENTERED 0 The hat is centered. JOY_HAT_UP 1 The hat is moved up. JOY_HAT_RIGHT 2 The hat is moved right. JOY_HAT_DOWN 4 The hat is moved down. JOY_HAT_LEFT 8 The hat is moved left. JOY_HAT_RIGHTUP 3 The hat is moved right and up.</description></item><item><title>NULL</title><link>https://divhub.github.io/bennugd-website/docs/constants/null/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/null/</guid><description> Definition NULL is a pointer, pointing to nothing. In programming it points to 0x00000000, or just plain 0.
Example The following check is the same as checking if a pointer variable is NULL:
if(my_pointer) end</description></item><item><title>OS Codes</title><link>https://divhub.github.io/bennugd-website/docs/constants/os_codes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/os_codes/</guid><description>OS codes are codes used for the global variable os_id, to specify the current platform BGDI is running on.
OS codes 1000 and above are used for unofficial ports and may not be available in the official Bennu version.
List Constant Value Description OS_WIN32 0 Microsoft Windows. OS_LINUX 1 Linux. OS_BEOS 2 Be Operating System. OS_MACOS 3 Mac Operating System.</description></item><item><title>PI</title><link>https://divhub.github.io/bennugd-website/docs/constants/pi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/pi/</guid><description> Definition INT PI == 180000 The equivalent to the mathematical pi (3.14159265&amp;hellip;), in thousandths of a degree.
It can be used to define angles, like assigning one to the local variable angle, or passing one to the function xadvance().
Example angle = PI/2; // 90000 (90 degrees) xadvance(-PI/4,10); // -45000 (-45 degrees)</description></item><item><title>Predefined Graphcodes</title><link>https://divhub.github.io/bennugd-website/docs/constants/predefined_graphcodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/predefined_graphcodes/</guid><description> Predefined graphcodes can be used as GraphID&amp;rsquo;s in some cases.
Functions using graphics is the most common case.
List Constant Value Description BACKGROUND 0 The graphic of the background (local variable graph of a process won&amp;rsquo;t work with this). SCREEN -1 The graphic of the screen (its center is (0,0)).</description></item><item><title>Process statuscodes</title><link>https://divhub.github.io/bennugd-website/docs/constants/process_statuscodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/process_statuscodes/</guid><description>Process statuscodes are status codes used for the local variable Reserved.status, to specify the current status of a process.
List Constant Value Description STATUS_DEAD 0 The process is dead. STATUS_KILLED 1 The process is killed. STATUS_RUNNING 2 The process is running. STATUS_SLEEPING 3 The process is sleeping. STATUS_FROZEN 4 The process is frozen. STATUS_WAITING 7 The process is waiting.</description></item><item><title>Render Flags</title><link>https://divhub.github.io/bennugd-website/docs/constants/render_flags/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/render_flags/</guid><description>Render flags are bit flags used to specify the mode of rendering, by passing them to the function set_mode() as the flags parameter. Multiple render flags can be specified using &amp;ldquo;|&amp;rdquo; (pipe character) for separation.
See also Graph Modes.
List Constant Value Description MODE_WINDOW 0 Enables window view. MODE_2XSCALE 256 Doubles the resolution. Edges get smoothed. MODE_FULLSCREEN 512 Enables fullscreen view.</description></item><item><title>Scale Modes</title><link>https://divhub.github.io/bennugd-website/docs/constants/scale_modes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/scale_modes/</guid><description>Scale modes are used to set the mode of scaling, by assigning one of them to the global variable scale_mode.
List Constant Value Description SCALE_NONE 0 No scale. SCALE_SCALE2X 1 Scale two times; use some filter. Looks like MODE_2XSCALE. SCALE_HQ2X 2 Scale two times; use HQ filter. Looks nice, runs slower. SCALE_SCANLINE2X 3 Scale two times; use scanline filter.</description></item><item><title>Scancodes</title><link>https://divhub.github.io/bennugd-website/docs/constants/scancodes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/scancodes/</guid><description> Scancodes are used to identify keys. This is used in the function key() and the global variable scan_code.
Note that the global variable ascii is very different from this.
List Constant Value _ESC 1 _1 2 _2 3 _3 4 _4 5 _5 6 _6 7 _7 8 _8 9 _9 10 _0 11 _MINUS 12 _PLUS 13 _BACKSPACE 14 _TAB 15 _Q 16 _W 17 _E 18 _R 19 _T 20 _Y 21 _U 22 _I 23 _O 24 _P 25 _L_BRACHET 26 _R_BRACHET 27 _ENTER 28 _C_ENTER 28 _CONTROL 29 _A 30 _S 31 _D 32 _F 33 _G 34 _H 35 _J 36 _K 37 _L 38 _SEMICOLON 39 _APOSTROPHE 40 _WAVE 41 _L_SHIFT 42 _BACKSLASH 43 _Z 44 _X 45 _C 46 _V 47 _B 48 _N 49 _M 50 _COMMA 51 _POINT 52 _SLASH 53 _C_BACKSLASH 53 _R_SHIFT 54 _C_ASTERISK 55 _PRN_SCR 55 _ALT 56 _SPACE 57 _CAPS_LOCK 58 _F1 59 _F2 60 _F3 61 _F4 62 _F5 63 _F6 64 _F7 65 _F8 66 _F9 67 _F10 68 _NUM_LOCK 69 _SCROLL_LOCK 70 _HOME 71 _C_HOME 71 _UP 72 _C_UP 72 _PGUP 73 _C_PGUP 73 _C_MINUS 74 _LEFT 75 _C_LEFT 75 _C_CENTER 76 _RIGHT 77 _C_RIGHT 77 _C_PLUS 78 _END 79 _C_END 79 _DOWN 80 _C_DOWN 80 _PGDN 81 _C_PGDN 81 _INS 82 _C_INS 82 _DEL 83 _C_DEL 83 _F11 87 _F12 88 _LESS 89 _EQUALS 90 _GREATER 91 _ASTERISK 92 _R_ALT 93 _R_CONTROL 94 _L_ALT 95 _L_CONTROL 96 _MENU 97 _L_WINDOWS 98 _R_WINDOWS 99</description></item><item><title>Sound Modes</title><link>https://divhub.github.io/bennugd-website/docs/constants/sound_modes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/sound_modes/</guid><description> Sound modes are used to set the sound mode, by assigning one of them to the global variable sound_mode.
Currently the choice is between monotone sound and stereo sound.
List Constant Value Description MODE_MONO 0 Use monotone sound. MODE_STEREO 1 Use stereo sound.</description></item><item><title>TRUE</title><link>https://divhub.github.io/bennugd-website/docs/constants/true/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/true/</guid><description>Definition INT TRUE TRUE is a constant integer, equal to the value 1. It is used to state that something is true and not false.
Checking whether a variable is true, is the same as checking if it&amp;rsquo;s nonzero.
Example Program example; Private int b = true; Begin // comparison with the constant TRUE if(b == true) say(&amp;quot;b was TRUE! so b==1&amp;quot;); else say(&amp;quot;b was not TRUE! so b!</description></item></channel></rss>