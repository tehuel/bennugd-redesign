<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Math on BennuGD</title><link>https://divhub.github.io/bennugd-website/categories/math/</link><description>Recent content in Math on BennuGD</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://divhub.github.io/bennugd-website/categories/math/index.xml" rel="self" type="application/rss+xml"/><item><title>PI</title><link>https://divhub.github.io/bennugd-website/docs/constants/pi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/constants/pi/</guid><description> Definition INT PI == 180000 The equivalent to the mathematical pi (3.14159265&amp;hellip;), in thousandths of a degree.
It can be used to define angles, like assigning one to the local variable angle, or passing one to the function xadvance().
Example angle = PI/2; // 90000 (90 degrees) xadvance(-PI/4,10); // -45000 (-45 degrees)</description></item><item><title>abs()</title><link>https://divhub.github.io/bennugd-website/docs/functions/abs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/abs/</guid><description>Definition FLOAT abs ( &amp;lt;FLOAT value&amp;gt; ) Returns the absolute value of value.
Parameters FLOAT value - The value. Returns FLOAT : The absolute value of value.
Example Global float value1; int value2; End Process Main() Begin write_float(0,0, 0,0,&amp;amp;value1); write_int(0,0,10,0,&amp;amp;value2); value1 = abs(3); value2 = abs(-4); Repeat frame; Until(key(_ESC)) End Used in example: write_float(), write_int(), abs(), key().</description></item><item><title>acos()</title><link>https://divhub.github.io/bennugd-website/docs/functions/acos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/acos/</guid><description>Definition FLOAT acos ( &amp;lt;FLOAT value&amp;gt; ) Returns the arccosine of a certain value.
This function performs an arccosine calculation on a certain value and returns an angle between and including 0 and 180000 (0-180º).
Parameters FLOAT value - The value to be performed an arccosine calculation on. Returns FLOAT : The arccosine result of the specified value, an angle between and including 0 and 180000 (0-180º).</description></item><item><title>asin()</title><link>https://divhub.github.io/bennugd-website/docs/functions/asin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/asin/</guid><description>Definition FLOAT asin ( &amp;lt;FLOAT value&amp;gt; ) Returns the arcsine of a certain value.
This function performs an arcsine calculation on a certain value and returns an angle between and including -90000 and 90000 (-90-90º).
Parameters FLOAT value - The value to be performed an arcsine calculation on. Returns FLOAT : The arcsine result of the specified value, an angle between and including -90000 and 90000 (-90-90º).</description></item><item><title>atan()</title><link>https://divhub.github.io/bennugd-website/docs/functions/atan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/atan/</guid><description>Definition FLOAT atan ( &amp;lt;FLOAT value&amp;gt; ) Returns the arctangent of a certain value.
This function performs an arctangent calculation on a certain value and returns an angle between but not including -90000 and 90000 (-90-90º).
Parameters FLOAT value - The value to be performed an arctangent calculation on. Returns FLOAT : The arctangent result of the specified value, an angle between but not including -90000 and 90000 (-90-90º).</description></item><item><title>atan2()</title><link>https://divhub.github.io/bennugd-website/docs/functions/atan2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/atan2/</guid><description>Definition FLOAT atan2 ( &amp;lt;FLOAT y&amp;gt; , &amp;lt;FLOAT x&amp;gt;) Returns the arctangent of a certain value. It is computed as the arc tangent of y/x. The signs of the arguments are used to perform the calculation.
This function performs an arctangent calculation on a certain value and returns an angle between but not including -180000 and 180000 (-180-180º).
Parameters FLOAT y - The Y value to be performed an arctangent calculation on.</description></item><item><title>cos()</title><link>https://divhub.github.io/bennugd-website/docs/functions/cos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/cos/</guid><description>Definition FLOAT cos ( &amp;lt;FLOAT angle&amp;gt; ) Returns the cosine of the specified angle.
This function performs a cosine calculation on a certain angle and returns a value between -1 and 1.
Parameters FLOAT angle - Angle, in thousandths of degrees. i.e. 75000 = 75º Returns FLOAT : The cosine result of the specified angle.
Notes The angle value used in this function should be in thousandths of degrees, as most angles within Bennu are.</description></item><item><title>fget_angle()</title><link>https://divhub.github.io/bennugd-website/docs/functions/fget_angle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/fget_angle/</guid><description>Definition INT fget_angle ( &amp;lt;INT pointA-X&amp;gt; , &amp;lt;INT pointA-Y&amp;gt; , &amp;lt;INT pointB-X&amp;gt; , &amp;lt;INT pointB-Y&amp;gt; ) Returns the angle between two certain points. The returned angle will be ranging from 0 to 360000 (0-360º).
Parameters INT pointA-X - The X-coordinate of point A. INT pointA-Y - The Y-coordinate of point A. INT pointB-X - The X-coordinate of point B. INT pointB-Y - The Y-coordinate of point B. Returns INT : The angle between point A and point B.</description></item><item><title>finite()</title><link>https://divhub.github.io/bennugd-website/docs/functions/finite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/finite/</guid><description>Definition INT Finite ( &amp;lt;FLOAT number&amp;gt; ) Checks if a given value is a finite number. This function is the opposite of the isinf() function.
It does not check for Not-A-Numbers. Use the isnan() function for that.
Parameters FLOAT number - The value to check. Returns INT : The result of the check
0 (false) - The value is an infinity. !0 (true) - The value is a finite number.</description></item><item><title>get_distx()</title><link>https://divhub.github.io/bennugd-website/docs/functions/get_distx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/get_distx/</guid><description>Definition INT get_distx ( &amp;lt;INT angle&amp;gt; , &amp;lt;INT distance&amp;gt; ) Returns the horizontal distance in pixels of a specified displacement.
This is the same as cos(angle) * distance.
Parameters INT angle - Angle, in thousandths of degrees (90° = 90000). INT distance - Length (in pixels) to measure. Returns INT : The horizontal distance, in pixels, of a specified displacement.
Notes This function returns the width of an imaginary rectangle who&amp;rsquo;s opposite corners are the specified distance apart, at the specified angle from each other.</description></item><item><title>get_disty()</title><link>https://divhub.github.io/bennugd-website/docs/functions/get_disty/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/get_disty/</guid><description>Definition INT get_disty ( &amp;lt;INT angle&amp;gt; , &amp;lt;INT distance&amp;gt; ) Returns the vertical distance in pixels of a specified displacement.
This is the same as -sin(angle) * distance.
Parameters INT angle - Angle, in thousandths of degrees (90° = 90000). INT distance - Length (in pixels) to measure. Returns INT : The vertical distance, in pixels, of a specified displacement.
Notes This function returns the height of an imaginary rectangle who&amp;rsquo;s opposite corners are the specified distance apart, at the specified angle from each other.</description></item><item><title>isinf()</title><link>https://divhub.github.io/bennugd-website/docs/functions/isinf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/isinf/</guid><description>Definition INT isinf ( &amp;lt;FLOAT number&amp;gt; ) Checks if a given value is an infinity. This function is the opposite of the finite() function.
It does not check for Not-A-Numbers. Use the isnan() function for that.
Parameters FLOAT number - The value to check. Returns INT : The result of the check
0 (false) - The value is a not an infinity. !0 (true) - The value is a positive or negative infinity.</description></item><item><title>isnan()</title><link>https://divhub.github.io/bennugd-website/docs/functions/isnan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/isnan/</guid><description> Definition INT isnan ( &amp;lt;FLOAT number&amp;gt; ) Checks if a given value is a number.
It does not check for infinties, use the isinf() function for that.
Parameters FLOAT number - The value to check. Returns INT : The result of the check
0 (false) - The value is a number. !0 (true) - The value is NOT a number.</description></item><item><title>near_angle()</title><link>https://divhub.github.io/bennugd-website/docs/functions/near_angle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/near_angle/</guid><description>Definition INT near_angle ( &amp;lt;INT angle&amp;gt; , &amp;lt;INT final angle&amp;gt; , &amp;lt;INT increment&amp;gt; ) Returns an angle closer to another angle, with the indicated increment.
It is used for aiming the original angle and it gradually changes into the final angle. The increment controls the rate in wich the final angle is added or subtracted from the orginal angle.
The returned angle will be ranging from 0 to 360000 (0-360º).</description></item><item><title>pow()</title><link>https://divhub.github.io/bennugd-website/docs/functions/pow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/pow/</guid><description>Definition FLOAT pow ( &amp;lt;FLOAT base&amp;gt; , &amp;lt;FLOAT power&amp;gt; ) Returns base to the power of power (base^power).
Parameters FLOAT base - The base. FLOAT power - The power. Returns FLOAT : base to the power of power (base^power).
Example Program powerful; Global float value1; int value2; Begin write_float(0,0, 0,0,&amp;amp;value1); write_int (0,0,10,0,&amp;amp;value2); value1 = pow(2.3,4.6); value2 = pow(2 ,3 ); Repeat frame; Until(key(_ESC)) End Used in example: write_float(), write_int(), pow(), key().</description></item><item><title>sin()</title><link>https://divhub.github.io/bennugd-website/docs/functions/sin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/sin/</guid><description>Definition FLOAT sin ( &amp;lt;FLOAT angle&amp;gt; ) Returns the sine of the specified angle.
This function performs a sine calculation on a certain angle and returns a value between -1 and 1.
Parameters FLOAT angle - Angle, in thousandths of degrees. i.e. 75000 = 75º
Returns FLOAT : The sine result of the specified angle.
Notes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.</description></item><item><title>sqrt()</title><link>https://divhub.github.io/bennugd-website/docs/functions/sqrt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/sqrt/</guid><description>Definition FLOAT sqrt ( &amp;lt;FLOAT value&amp;gt; ) Parameters FLOAT value - The value of which the square root will be returned. Returns FLOAT : The square root of value.</description></item><item><title>tan()</title><link>https://divhub.github.io/bennugd-website/docs/functions/tan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://divhub.github.io/bennugd-website/docs/functions/tan/</guid><description>Definition FLOAT tan ( &amp;lt;FLOAT angle&amp;gt; ) Returns the tangent of a certain angle.
This function performs a tangent calculation on a certain angle and returns a value.
Parameters FLOAT angle - Angle, in thousandths of degrees. i.e. 75000 = 75º
Returns FLOAT : The tangent result of the specified angle.
Notes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.</description></item></channel></rss>