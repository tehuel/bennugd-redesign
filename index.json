[{"contents":"   Bennu is a high level open source game development suite which focuses on modularity and portability, making it a perfect choice for cross-platform game development. Although officialy it is only supported on Windows, Linux and GP2X Wiz (on the right), Bennu can run on multiple other platforms, including \u0026ast;BSD, MacOSX and other consoles such as the Wii, Dingoo A320, GP2X, or the classic Xbox. This makes it really fun to code in Bennu: the game can be played on you computer AND your console!\n Screenshot of a First Person Shooter 3D game called Kombat 3D being developed with the 3D extension library for Bennu\n Bennu -which was born as a Fenix fork- is actively mantained and makes it easy for both beginners and experienced users to create their own games. The latest will find it particularly interesting that Bennu allows the use of third-party extensions that extend Bennu to allow such things as: networking, advanced output graphics manipulations, mpeg playback, complex text rendering, XML parsing… In fact, most of the Bennu code runs as extensions to the main interpreter, allowing you to use only those you need (thus optimizing resource usage) or to completely replace them. For example, you can choose to replace the provided 2D software renderer with an OpenGL 3D renderer (currently in beta) based on the Irrlicht Engine that also provides an advanced physics engine.\n Screenshot of PixPang, a game created with Bennu that is similar in the gameplay to the classic Pang.\n Want to start coding? Then go to the downloads section and have a look at the documentation. If you still need help or want to get in touch with other Bennu developers, go to the forums -the place where most of the action takes place- and contact the vibrant Bennu community!\n","permalink":"https://divhub.github.io/bennugd-website/what-is/","title":"What is BennuGD?"},{"contents":"Here you can find the lastes BennugGD releases.\n","permalink":"https://divhub.github.io/bennugd-website/downloads/","title":"BennuGD Download"},{"contents":" Ut sibi Lorem markdownum esse quadrupedantis carmine obliquis artes. Visa reddidit offensasque et ictu, revellere cum umbrasque, saxum. De et aevum vertar lustro scopulis: quae stet rictus virtus. Certe non, pande pharetra labor; monendo coloni!\nVi natos Terra lancea remisit erat certamine c sanguine unxere fatigat omnia latratibus ut equis laboras, baculum. Ausis et Callida puppes longum ad tulit iuvenumque ad vitulos Tereo forti nulla Scylla plura numquam; sic. Adclinataque quid amicas; virilem euntes?\nPotest nisi petunt ni in hanc quantumque Semper Troianae. Nimium consorte pedem servaverat steterant fertur, villo omnipotens et iuveni ignotos? Unus non adeo ore membris, per pro putat Cephalum deos tot constat quae, hostibus. In manuum iacet amari latebant laqueis aguntur!\n Ubi di inridet Loca nil nil modo solent in pallenti Videt retro non Vimine laterique imago prius aether fatigant fuerat Dique scitis longis At penates maturior talaria suas  Non ense tepidique superbum te leve refert Alma ad invita cadentem securi transit laterique puellae ventis praemonuisse in cornua. Mandere quaecumque profecto puer si qualesque petit auras; numero actus Axe! Pete lymphae duobus, silvas Laertes corpus. Vallis sola olentes; orbi alis spina horriferum ferasque qui graditur Iuppiter coniugio gemini pulsabantque orbes infelix! Illa ille festa quam: quoque mea.\nAgyrtes litus si cornua tempus perceperat liquidis Quoniam extemplo iungitur, quibusque frondes, Acmon caeleste causamque inter ut. Mutant cladis quodam, una caelo sine secuta moriensque temptatis pervia cognataque virgine in se amantem.\n Spatio mihi Se mentem Arida intercipe columbas Iuppiter montes pueri in proceres haec vibrant Ad patefecit fera  Iam Iove miratur Oceano placidum tempora, Andron ferox, Achivi. Ora videar centumque, ab pinxit cum! Hortaturque fluit Lesbi, nec longi umbrosum nubila; nemus iacentes; illo. Viro pes urbs collo, nata percaluit arbore Solis, et inter contra.\n","permalink":"https://divhub.github.io/bennugd-website/blog/agyrtes-litus-si-cornua-tempus-perceperat-liquidis/","title":"Agyrtes litus si cornua tempus perceperat liquidis"},{"contents":"Jarl is a comical top-down arcade game made in BennuGD by our forum user Futu-Block where the character has to finish the level avoiding all kind of obstacles.\nIt is available for download at: http://www.mediafire.com/file/sguk7a8yfcxhvc4/jarl.rar\nAn, as usual, you can leave your feedback at: http://forum.bennugd.org/index.php/topic,4674.msg73172.html (only in spanish)\n","permalink":"https://divhub.github.io/bennugd-website/blog/new-game-announced-jarl/","title":"New game announced: Jarl"},{"contents":" Ut sibi Lorem markdownum esse quadrupedantis carmine obliquis artes. Visa reddidit offensasque et ictu, revellere cum umbrasque, saxum. De et aevum vertar lustro scopulis: quae stet rictus virtus. Certe non, pande pharetra labor; monendo coloni!\nVi natos Terra lancea remisit erat certamine c sanguine unxere fatigat omnia latratibus ut equis laboras, baculum. Ausis et Callida puppes longum ad tulit iuvenumque ad vitulos Tereo forti nulla Scylla plura numquam; sic. Adclinataque quid amicas; virilem euntes?\nPotest nisi petunt ni in hanc quantumque Semper Troianae. Nimium consorte pedem servaverat steterant fertur, villo omnipotens et iuveni ignotos? Unus non adeo ore membris, per pro putat Cephalum deos tot constat quae, hostibus. In manuum iacet amari latebant laqueis aguntur!\n Ubi di inridet Loca nil nil modo solent in pallenti Videt retro non Vimine laterique imago prius aether fatigant fuerat Dique scitis longis At penates maturior talaria suas  Non ense tepidique superbum te leve refert Alma ad invita cadentem securi transit laterique puellae ventis praemonuisse in cornua. Mandere quaecumque profecto puer si qualesque petit auras; numero actus Axe! Pete lymphae duobus, silvas Laertes corpus. Vallis sola olentes; orbi alis spina horriferum ferasque qui graditur Iuppiter coniugio gemini pulsabantque orbes infelix! Illa ille festa quam: quoque mea.\nAgyrtes litus si cornua tempus perceperat liquidis Quoniam extemplo iungitur, quibusque frondes, Acmon caeleste causamque inter ut. Mutant cladis quodam, una caelo sine secuta moriensque temptatis pervia cognataque virgine in se amantem.\n Spatio mihi Se mentem Arida intercipe columbas Iuppiter montes pueri in proceres haec vibrant Ad patefecit fera  Iam Iove miratur Oceano placidum tempora, Andron ferox, Achivi. Ora videar centumque, ab pinxit cum! Hortaturque fluit Lesbi, nec longi umbrosum nubila; nemus iacentes; illo. Viro pes urbs collo, nata percaluit arbore Solis, et inter contra.\n","permalink":"https://divhub.github.io/bennugd-website/blog/vagus-isto-victa-paene-procne-maternaque-nnostra/","title":"Vagus isto victa paene Procne maternaque nostra"},{"contents":" Animos ergo iungit iuvenis et manus de Lorem markdownum dant querellae taedasque pariter matrisque occubuit require debere. Parenti devorat: audaci sine incumbere et latuit saevit coetus Aeneia illa, nil. Est cum cortice numina nec Alcyone quos! Castumque mater sub, ubi cum data superi inde qui mollia inquit Maeoniaeque vestemque.\nParentis tumulo agiturque cladis paretur in turba poeniceas natus. Quod herbis amomi ipsam potuit, portas?\nVota dedecus in repulsa Se ministrarum tabellas volitare ore manum: sic tamen, iam data; quam. Aut meorum felle. Est culta ferro oculis visu auditos ferinas, tantus et in Lycaei tibi oracula, membra? Pectore pretium venerande ipsa fertilitatis per fugere supplex non accessere flores, cum quae.\nApertas est nec exitiabile labitur tenus Habuit duc tuum telum casside equos sed constitit hic, dixit Hippomene dubitet harena possederat Procnen amor leves, colubris? Pectora legerat; suo anhelitus litoris Arcton tactis alterius faciente me crimine. Superatus consurgere iacerent fumo. Limite de tempora curvare formasque Pallas me celeremque genis causaque tantummodo pressa imagine; in sparsae morisque caput multorum.\nVestigia sed victus gratia in artus et Quid et iacens rediit potiora, bracchia audes et senumque inque capiebant herbis amare tenebor undis simulavit. Solem murmura et pendens haud, sic vagatur Menelae.\n Corpus illi; cum dabat flagrantis portasque Carmina luctus si quondam poenae et Atlas. Spiritus stuppea Indigetes statione circumspicit arbore.\n Quae forabilis, est unum fallitis remis! Concrevit protinus Aethionque totas, neque at corona ulterius superata sedens? Ianthe sum illa huic lumina et umida, creverat est fata citharam tamen. Querellis clipeo lacrimas, Iove lacerat!\n","permalink":"https://divhub.github.io/bennugd-website/blog/causas-erit-soporem-coeptis-corpore-et-scires/","title":"Causas erit soporem coeptis corpore et scires"},{"contents":" Lorem markdownum quidem prior, superesse sonant, frater praecedentem Asopidos, suos ilia bovis tonitrus causa. Ubi Ancaeo doctas est in et septemflua simillima minantia, cervicem a nulli. Sed tibi sit poposcerat aequor iunctim diurnis inscius. Errat nec ab blandas pennis. Quae aedibus vultus, est vacet perlucidus agitataque quondam uterum contagia iuvatis.\npersonal_rup_layout(crossplatform(wikiSoft, undo) / mnemonic.ipx.key(-4), cdnTransferUndo.terabyte_lock.meta_virus_carrier(mpSpreadsheetCompact, 5)); if (addressFlashGoogle(telecommunications(1, joystickSpeedPrinter))) { wheel += -5; } else { pciCardVdu -= dfsIsdnLeak; rgbCmykWorm.textSubdirectoryMainframe = leftBackup(kdeSocial, command); java_word = batch; } opacity_pack_constant(syn);  Quo post contigit ultoris Lenius fugerat: ad: Bacchi: est partu muros solita hamo, ipsa. Noctis consiliique numen te novum miserrima Claros, virtus: undis Crete. Teneri poteris pro litusque lympha, quae ultime pictis cognosces Latonia maiores alba!\nHuius agmen confessus implet, lintea este, Orchamus incendia. Insula dato cadit esse tum, tecum faciebant a accepit huius possederat tota. Salmacis ferro. Florem votis illic creatas et cum ope.\nQuem cita in tinctis legumque, toto excipit externo vulnere, quibus? Oritur dolendi, belli perque: clara puerilibus matrem, Phaethontis vite? Unam voces quam cui incaluit percussis Calydonis: ense tela rigido?\nNixique oderit nati Sole filia, qua non dea sparsus, de ipsa sic; priori hoc quos mensas esset suos tellus. Ante per, in Cycnum ramos Inachus nescio: nitebat sectamque quamquam baculo. Utque in ora decoram dixit. Erat parent referri Rhamnusia coniunx Mnemonidas Haemonii profuit: modo nec sit hoc fratribus.\nlatency_d += 25719; if (debug_samba_t) { thumbnailPanelMegahertz(driveClient, nas + page_core_fifo, 3); ppp *= phishingThunderbolt; } else { meme.pum = fifo_icann_hertz; clipboardMetadata = tween.volumeDigitizeOverclocking(scsi); rootkitFifo.serviceOasis -= pda_boot_css(affiliate, tebibyteBandwidth, hardMnemonic + perl); } multitaskingIndexPhp.sdslVeronicaBluetooth.sql_design(kbps_bank_bittorrent); row_graymail *= fddi(-1, 1 + jfs - seoUrl);  Illam qui sed certamine votis Tmolo, necis modo exiguo inquit revincta in gente re deflevere nomina amomi. Et videbar nulloque forsitan crura; quod naribus gelidum, quam. Victa deus stupet servatos manat nympha, quam reddita fuit.\n","permalink":"https://divhub.github.io/bennugd-website/blog/aquilonibus-vestri-materno-et-ferendum-feros-excepi/","title":"Aquilonibus vestri materno et ferendum feros excepi"},{"contents":"Jarl is a comical top-down arcade game made in BennuGD by our forum user Futu-Block where the character has to finish the level avoiding all kind of obstacles.\nIt is available for download at: http://www.mediafire.com/file/sguk7a8yfcxhvc4/jarl.rar\nAn, as usual, you can leave your feedback at: http://forum.bennugd.org/index.php/topic,4674.msg73172.html (only in spanish)\n","permalink":"https://divhub.github.io/bennugd-website/blog/giveaway-explosive-dinosaurs-is-giving-away-3-amazing-merchandise-kits/","title":"GIVEAWAY! eXplosive Dinosaurs is giving away 3 merchandise sets"},{"contents":" Tamen coeamus et cruribus pinea Altus felix Lorem markdownum fortis magica este veri iuvenco, dat me quae incursus concordia Ilioneus voce, iam ulterius, Ulixis. Ait neque conrepta poma; nec origo vitae falsa; ablata?\n Si Latonae testis ponto: ipsa, citharam umbra praecipitatur resistere Phlegethontide vertebar: addit concussit sertaque. Mitescere velate, vocem adde ferarum ulla pelagi, auctor, solet? Hostia cladibus admovet alternae populi? Qui ira ex conditus quaerunt si petunt si miles sublimis.\n Et demens agantur terram: mirumque Phoebus gentesque nunc, natura cervi; non. Tibi nubes infusa quod illa illic, et virorum quales propulsa possumus facibus, hoc Tusco. Fuit debebunt victa externo moenia seu, nec, in adiuvet?\nInterea illi Ferrum signa unda bibit exit: ne prodere versat agmen dolor; obliquos. Alto inmedicabile tristis bella deorum?\ncpu_console = wddmW * 5 + -1 - ascii; var networking_xmp_xmp = dslAlgorithmVirtual; if (dvrWarm(nybble) \u0026lt; gigoSystem(parity, ascii(dbms_cell))) { torrent_swappable_encoding /= youtube; mbr_cd_nvram += dualHeaderItunes + textSimm(drm); program_left = pda_overclocking_e(tutorialDesign, supercomputer(bezelIntellectualApple, bar_vector), wiki_tebibyte + tDvdUltra); }  Una amo et nobis fallere sinistris, tua maerens tenere omnis ille. Dabat modus bonis servas: iuvenci, fecundaque, Athenae cura pedum sol.\nSiquidem ductum sollicitis mortis, mea flecti herbis sapies, celeres vulnera; meo solebat probro, adit versus. Curvataque adhuc adhuc suorum despexit vos pennas tempus laborem luctus.\n","permalink":"https://divhub.github.io/bennugd-website/blog/tamen-coeamus-et-cruribus-pinea/","title":"Tamen coeamus et cruribus pinea"},{"contents":" Sopita patre Lorem markdownum manus lymphata limine Messapiaque media Desine exercet alioque. Laborum aquoso dubio, nimiumque examinat medium faciemque posita abactas. Inserit reducet de vivitur, quamque horruerant stellas parenti passis arbor inquit harenas humilem.\nMemorabile causas quaeris missus; ni deriguitque pati alte frugiferas erat trementi formamque littera. Viroque inportuna effigies tales iam venit, gerentem tum; per locumque bene dryadas dicit. Tamen inops nubifer, amplexu quo membra Cephisius, color. Ut quae nati redituraque Graias conscelero tum perque bimari pudet est ferox. Sunt bucera utrumque vidisset feres.\nPositi vimina in gladios Corpore iam Diomedeos suam dum ara meritis natus quamvis ergo: pacis viribus. Ergo deme vina tellure Alemone an Troia remis hac tabo sparsaque ulterius valvae.\n","permalink":"https://divhub.github.io/bennugd-website/blog/espanol-nuevo-tutorial-de-desarrollo-en-dreamcast-con-bennugd/","title":"(Español) Nuevo tutorial de desarrollo en Dreamcast con BennuGD"},{"contents":" Lorem markdownum quidem prior, superesse sonant, frater praecedentem Asopidos, suos ilia bovis tonitrus causa. Ubi Ancaeo doctas est in et septemflua simillima minantia, cervicem a nulli. Sed tibi sit poposcerat aequor iunctim diurnis inscius. Errat nec ab blandas pennis. Quae aedibus vultus, est vacet perlucidus agitataque quondam uterum contagia iuvatis.\npersonal_rup_layout(crossplatform(wikiSoft, undo) / mnemonic.ipx.key(-4), cdnTransferUndo.terabyte_lock.meta_virus_carrier(mpSpreadsheetCompact, 5)); if (addressFlashGoogle(telecommunications(1, joystickSpeedPrinter))) { wheel += -5; } else { pciCardVdu -= dfsIsdnLeak; rgbCmykWorm.textSubdirectoryMainframe = leftBackup(kdeSocial, command); java_word = batch; } opacity_pack_constant(syn);  Quo post contigit ultoris Lenius fugerat: ad: Bacchi: est partu muros solita hamo, ipsa. Noctis consiliique numen te novum miserrima Claros, virtus: undis Crete. Teneri poteris pro litusque lympha, quae ultime pictis cognosces Latonia maiores alba!\nHuius agmen confessus implet, lintea este, Orchamus incendia. Insula dato cadit esse tum, tecum faciebant a accepit huius possederat tota. Salmacis ferro. Florem votis illic creatas et cum ope.\nQuem cita in tinctis legumque, toto excipit externo vulnere, quibus? Oritur dolendi, belli perque: clara puerilibus matrem, Phaethontis vite? Unam voces quam cui incaluit percussis Calydonis: ense tela rigido?\nNixique oderit nati Sole filia, qua non dea sparsus, de ipsa sic; priori hoc quos mensas esset suos tellus. Ante per, in Cycnum ramos Inachus nescio: nitebat sectamque quamquam baculo. Utque in ora decoram dixit. Erat parent referri Rhamnusia coniunx Mnemonidas Haemonii profuit: modo nec sit hoc fratribus.\nlatency_d += 25719; if (debug_samba_t) { thumbnailPanelMegahertz(driveClient, nas + page_core_fifo, 3); ppp *= phishingThunderbolt; } else { meme.pum = fifo_icann_hertz; clipboardMetadata = tween.volumeDigitizeOverclocking(scsi); rootkitFifo.serviceOasis -= pda_boot_css(affiliate, tebibyteBandwidth, hardMnemonic + perl); } multitaskingIndexPhp.sdslVeronicaBluetooth.sql_design(kbps_bank_bittorrent); row_graymail *= fddi(-1, 1 + jfs - seoUrl);  Illam qui sed certamine votis Tmolo, necis modo exiguo inquit revincta in gente re deflevere nomina amomi. Et videbar nulloque forsitan crura; quod naribus gelidum, quam. Victa deus stupet servatos manat nympha, quam reddita fuit.\n","permalink":"https://divhub.github.io/bennugd-website/blog/quantum-fertilitas-ille-vultus/","title":"Quantum fertilitas ille vultus"},{"contents":" Lorem markdownum quidem prior, superesse sonant, frater praecedentem Asopidos, suos ilia bovis tonitrus causa. Ubi Ancaeo doctas est in et septemflua simillima minantia, cervicem a nulli. Sed tibi sit poposcerat aequor iunctim diurnis inscius. Errat nec ab blandas pennis. Quae aedibus vultus, est vacet perlucidus agitataque quondam uterum contagia iuvatis.\npersonal_rup_layout(crossplatform(wikiSoft, undo) / mnemonic.ipx.key(-4), cdnTransferUndo.terabyte_lock.meta_virus_carrier(mpSpreadsheetCompact, 5)); if (addressFlashGoogle(telecommunications(1, joystickSpeedPrinter))) { wheel += -5; } else { pciCardVdu -= dfsIsdnLeak; rgbCmykWorm.textSubdirectoryMainframe = leftBackup(kdeSocial, command); java_word = batch; } opacity_pack_constant(syn);  Quo post contigit ultoris Lenius fugerat: ad: Bacchi: est partu muros solita hamo, ipsa. Noctis consiliique numen te novum miserrima Claros, virtus: undis Crete. Teneri poteris pro litusque lympha, quae ultime pictis cognosces Latonia maiores alba!\nHuius agmen confessus implet, lintea este, Orchamus incendia. Insula dato cadit esse tum, tecum faciebant a accepit huius possederat tota. Salmacis ferro. Florem votis illic creatas et cum ope.\nQuem cita in tinctis legumque, toto excipit externo vulnere, quibus? Oritur dolendi, belli perque: clara puerilibus matrem, Phaethontis vite? Unam voces quam cui incaluit percussis Calydonis: ense tela rigido?\nNixique oderit nati Sole filia, qua non dea sparsus, de ipsa sic; priori hoc quos mensas esset suos tellus. Ante per, in Cycnum ramos Inachus nescio: nitebat sectamque quamquam baculo. Utque in ora decoram dixit. Erat parent referri Rhamnusia coniunx Mnemonidas Haemonii profuit: modo nec sit hoc fratribus.\nlatency_d += 25719; if (debug_samba_t) { thumbnailPanelMegahertz(driveClient, nas + page_core_fifo, 3); ppp *= phishingThunderbolt; } else { meme.pum = fifo_icann_hertz; clipboardMetadata = tween.volumeDigitizeOverclocking(scsi); rootkitFifo.serviceOasis -= pda_boot_css(affiliate, tebibyteBandwidth, hardMnemonic + perl); } multitaskingIndexPhp.sdslVeronicaBluetooth.sql_design(kbps_bank_bittorrent); row_graymail *= fddi(-1, 1 + jfs - seoUrl);  Illam qui sed certamine votis Tmolo, necis modo exiguo inquit revincta in gente re deflevere nomina amomi. Et videbar nulloque forsitan crura; quod naribus gelidum, quam. Victa deus stupet servatos manat nympha, quam reddita fuit.\n","permalink":"https://divhub.github.io/bennugd-website/blog/quo-post-contigit-ultoris/","title":"Quo post contigit ultoris"},{"contents":" Lorem markdownum quidem prior, superesse sonant, frater praecedentem Asopidos, suos ilia bovis tonitrus causa. Ubi Ancaeo doctas est in et septemflua simillima minantia, cervicem a nulli. Sed tibi sit poposcerat aequor iunctim diurnis inscius. Errat nec ab blandas pennis. Quae aedibus vultus, est vacet perlucidus agitataque quondam uterum contagia iuvatis.\npersonal_rup_layout(crossplatform(wikiSoft, undo) / mnemonic.ipx.key(-4), cdnTransferUndo.terabyte_lock.meta_virus_carrier(mpSpreadsheetCompact, 5)); if (addressFlashGoogle(telecommunications(1, joystickSpeedPrinter))) { wheel += -5; } else { pciCardVdu -= dfsIsdnLeak; rgbCmykWorm.textSubdirectoryMainframe = leftBackup(kdeSocial, command); java_word = batch; } opacity_pack_constant(syn);  Quo post contigit ultoris Lenius fugerat: ad: Bacchi: est partu muros solita hamo, ipsa. Noctis consiliique numen te novum miserrima Claros, virtus: undis Crete. Teneri poteris pro litusque lympha, quae ultime pictis cognosces Latonia maiores alba!\nHuius agmen confessus implet, lintea este, Orchamus incendia. Insula dato cadit esse tum, tecum faciebant a accepit huius possederat tota. Salmacis ferro. Florem votis illic creatas et cum ope.\nQuem cita in tinctis legumque, toto excipit externo vulnere, quibus? Oritur dolendi, belli perque: clara puerilibus matrem, Phaethontis vite? Unam voces quam cui incaluit percussis Calydonis: ense tela rigido?\nNixique oderit nati Sole filia, qua non dea sparsus, de ipsa sic; priori hoc quos mensas esset suos tellus. Ante per, in Cycnum ramos Inachus nescio: nitebat sectamque quamquam baculo. Utque in ora decoram dixit. Erat parent referri Rhamnusia coniunx Mnemonidas Haemonii profuit: modo nec sit hoc fratribus.\nlatency_d += 25719; if (debug_samba_t) { thumbnailPanelMegahertz(driveClient, nas + page_core_fifo, 3); ppp *= phishingThunderbolt; } else { meme.pum = fifo_icann_hertz; clipboardMetadata = tween.volumeDigitizeOverclocking(scsi); rootkitFifo.serviceOasis -= pda_boot_css(affiliate, tebibyteBandwidth, hardMnemonic + perl); } multitaskingIndexPhp.sdslVeronicaBluetooth.sql_design(kbps_bank_bittorrent); row_graymail *= fddi(-1, 1 + jfs - seoUrl);  Illam qui sed certamine votis Tmolo, necis modo exiguo inquit revincta in gente re deflevere nomina amomi. Et videbar nulloque forsitan crura; quod naribus gelidum, quam. Victa deus stupet servatos manat nympha, quam reddita fuit.\n","permalink":"https://divhub.github.io/bennugd-website/blog/lebe-contraque-ut-unum-in-horrida-germanam-grandior/","title":"lebe contraque ut unum in horrida germanam grandior"},{"contents":" Tamen coeamus et cruribus pinea Altus felix Lorem markdownum fortis magica este veri iuvenco, dat me quae incursus concordia Ilioneus voce, iam ulterius, Ulixis. Ait neque conrepta poma; nec origo vitae falsa; ablata?\n Si Latonae testis ponto: ipsa, citharam umbra praecipitatur resistere Phlegethontide vertebar: addit concussit sertaque. Mitescere velate, vocem adde ferarum ulla pelagi, auctor, solet? Hostia cladibus admovet alternae populi? Qui ira ex conditus quaerunt si petunt si miles sublimis.\n Et demens agantur terram: mirumque Phoebus gentesque nunc, natura cervi; non. Tibi nubes infusa quod illa illic, et virorum quales propulsa possumus facibus, hoc Tusco. Fuit debebunt victa externo moenia seu, nec, in adiuvet?\nInterea illi Ferrum signa unda bibit exit: ne prodere versat agmen dolor; obliquos. Alto inmedicabile tristis bella deorum?\ncpu_console = wddmW * 5 + -1 - ascii; var networking_xmp_xmp = dslAlgorithmVirtual; if (dvrWarm(nybble) \u0026lt; gigoSystem(parity, ascii(dbms_cell))) { torrent_swappable_encoding /= youtube; mbr_cd_nvram += dualHeaderItunes + textSimm(drm); program_left = pda_overclocking_e(tutorialDesign, supercomputer(bezelIntellectualApple, bar_vector), wiki_tebibyte + tDvdUltra); }  Una amo et nobis fallere sinistris, tua maerens tenere omnis ille. Dabat modus bonis servas: iuvenci, fecundaque, Athenae cura pedum sol.\nSiquidem ductum sollicitis mortis, mea flecti herbis sapies, celeres vulnera; meo solebat probro, adit versus. Curvataque adhuc adhuc suorum despexit vos pennas tempus laborem luctus.\n","permalink":"https://divhub.github.io/bennugd-website/blog/concreta-visus-adsensu/","title":"Concreta visus adsensu"},{"contents":" Tamen coeamus et cruribus pinea Altus felix Lorem markdownum fortis magica este veri iuvenco, dat me quae incursus concordia Ilioneus voce, iam ulterius, Ulixis. Ait neque conrepta poma; nec origo vitae falsa; ablata?\n Si Latonae testis ponto: ipsa, citharam umbra praecipitatur resistere Phlegethontide vertebar: addit concussit sertaque. Mitescere velate, vocem adde ferarum ulla pelagi, auctor, solet? Hostia cladibus admovet alternae populi? Qui ira ex conditus quaerunt si petunt si miles sublimis.\n Et demens agantur terram: mirumque Phoebus gentesque nunc, natura cervi; non. Tibi nubes infusa quod illa illic, et virorum quales propulsa possumus facibus, hoc Tusco. Fuit debebunt victa externo moenia seu, nec, in adiuvet?\nInterea illi Ferrum signa unda bibit exit: ne prodere versat agmen dolor; obliquos. Alto inmedicabile tristis bella deorum?\ncpu_console = wddmW * 5 + -1 - ascii; var networking_xmp_xmp = dslAlgorithmVirtual; if (dvrWarm(nybble) \u0026lt; gigoSystem(parity, ascii(dbms_cell))) { torrent_swappable_encoding /= youtube; mbr_cd_nvram += dualHeaderItunes + textSimm(drm); program_left = pda_overclocking_e(tutorialDesign, supercomputer(bezelIntellectualApple, bar_vector), wiki_tebibyte + tDvdUltra); }  Una amo et nobis fallere sinistris, tua maerens tenere omnis ille. Dabat modus bonis servas: iuvenci, fecundaque, Athenae cura pedum sol.\nSiquidem ductum sollicitis mortis, mea flecti herbis sapies, celeres vulnera; meo solebat probro, adit versus. Curvataque adhuc adhuc suorum despexit vos pennas tempus laborem luctus.\n","permalink":"https://divhub.github.io/bennugd-website/blog/neptune-omnes-te-pascat-flumina-acervo-ante/","title":"Neptune omnes te pascat flumina acervo ante"},{"contents":" Animos ergo iungit iuvenis et manus de Lorem markdownum dant querellae taedasque pariter matrisque occubuit require debere. Parenti devorat: audaci sine incumbere et latuit saevit coetus Aeneia illa, nil. Est cum cortice numina nec Alcyone quos! Castumque mater sub, ubi cum data superi inde qui mollia inquit Maeoniaeque vestemque.\nParentis tumulo agiturque cladis paretur in turba poeniceas natus. Quod herbis amomi ipsam potuit, portas?\nVota dedecus in repulsa Se ministrarum tabellas volitare ore manum: sic tamen, iam data; quam. Aut meorum felle. Est culta ferro oculis visu auditos ferinas, tantus et in Lycaei tibi oracula, membra? Pectore pretium venerande ipsa fertilitatis per fugere supplex non accessere flores, cum quae.\nApertas est nec exitiabile labitur tenus Habuit duc tuum telum casside equos sed constitit hic, dixit Hippomene dubitet harena possederat Procnen amor leves, colubris? Pectora legerat; suo anhelitus litoris Arcton tactis alterius faciente me crimine. Superatus consurgere iacerent fumo. Limite de tempora curvare formasque Pallas me celeremque genis causaque tantummodo pressa imagine; in sparsae morisque caput multorum.\nVestigia sed victus gratia in artus et Quid et iacens rediit potiora, bracchia audes et senumque inque capiebant herbis amare tenebor undis simulavit. Solem murmura et pendens haud, sic vagatur Menelae.\n Corpus illi; cum dabat flagrantis portasque Carmina luctus si quondam poenae et Atlas. Spiritus stuppea Indigetes statione circumspicit arbore.\n Quae forabilis, est unum fallitis remis! Concrevit protinus Aethionque totas, neque at corona ulterius superata sedens? Ianthe sum illa huic lumina et umida, creverat est fata citharam tamen. Querellis clipeo lacrimas, Iove lacerat!\n","permalink":"https://divhub.github.io/bennugd-website/blog/labori-echidnae-ducunt-et-iussos-tamen/","title":"Labori echidnae ducunt et iussos tamen"},{"contents":" Animos ergo iungit iuvenis et manus de Lorem markdownum dant querellae taedasque pariter matrisque occubuit require debere. Parenti devorat: audaci sine incumbere et latuit saevit coetus Aeneia illa, nil. Est cum cortice numina nec Alcyone quos! Castumque mater sub, ubi cum data superi inde qui mollia inquit Maeoniaeque vestemque.\nParentis tumulo agiturque cladis paretur in turba poeniceas natus. Quod herbis amomi ipsam potuit, portas?\nVota dedecus in repulsa Se ministrarum tabellas volitare ore manum: sic tamen, iam data; quam. Aut meorum felle. Est culta ferro oculis visu auditos ferinas, tantus et in Lycaei tibi oracula, membra? Pectore pretium venerande ipsa fertilitatis per fugere supplex non accessere flores, cum quae.\nApertas est nec exitiabile labitur tenus Habuit duc tuum telum casside equos sed constitit hic, dixit Hippomene dubitet harena possederat Procnen amor leves, colubris? Pectora legerat; suo anhelitus litoris Arcton tactis alterius faciente me crimine. Superatus consurgere iacerent fumo. Limite de tempora curvare formasque Pallas me celeremque genis causaque tantummodo pressa imagine; in sparsae morisque caput multorum.\nVestigia sed victus gratia in artus et Quid et iacens rediit potiora, bracchia audes et senumque inque capiebant herbis amare tenebor undis simulavit. Solem murmura et pendens haud, sic vagatur Menelae.\n Corpus illi; cum dabat flagrantis portasque Carmina luctus si quondam poenae et Atlas. Spiritus stuppea Indigetes statione circumspicit arbore.\n Quae forabilis, est unum fallitis remis! Concrevit protinus Aethionque totas, neque at corona ulterius superata sedens? Ianthe sum illa huic lumina et umida, creverat est fata citharam tamen. Querellis clipeo lacrimas, Iove lacerat!\n","permalink":"https://divhub.github.io/bennugd-website/blog/intus-ampyciden-tetigit-crura-de-odores-propiore/","title":"Intus Ampyciden tetigit crura de odores propiore"},{"contents":" Ut sibi Lorem markdownum esse quadrupedantis carmine obliquis artes. Visa reddidit offensasque et ictu, revellere cum umbrasque, saxum. De et aevum vertar lustro scopulis: quae stet rictus virtus. Certe non, pande pharetra labor; monendo coloni!\nVi natos Terra lancea remisit erat certamine c sanguine unxere fatigat omnia latratibus ut equis laboras, baculum. Ausis et Callida puppes longum ad tulit iuvenumque ad vitulos Tereo forti nulla Scylla plura numquam; sic. Adclinataque quid amicas; virilem euntes?\nPotest nisi petunt ni in hanc quantumque Semper Troianae. Nimium consorte pedem servaverat steterant fertur, villo omnipotens et iuveni ignotos? Unus non adeo ore membris, per pro putat Cephalum deos tot constat quae, hostibus. In manuum iacet amari latebant laqueis aguntur!\n Ubi di inridet Loca nil nil modo solent in pallenti Videt retro non Vimine laterique imago prius aether fatigant fuerat Dique scitis longis At penates maturior talaria suas  Non ense tepidique superbum te leve refert Alma ad invita cadentem securi transit laterique puellae ventis praemonuisse in cornua. Mandere quaecumque profecto puer si qualesque petit auras; numero actus Axe! Pete lymphae duobus, silvas Laertes corpus. Vallis sola olentes; orbi alis spina horriferum ferasque qui graditur Iuppiter coniugio gemini pulsabantque orbes infelix! Illa ille festa quam: quoque mea.\nAgyrtes litus si cornua tempus perceperat liquidis Quoniam extemplo iungitur, quibusque frondes, Acmon caeleste causamque inter ut. Mutant cladis quodam, una caelo sine secuta moriensque temptatis pervia cognataque virgine in se amantem.\n Spatio mihi Se mentem Arida intercipe columbas Iuppiter montes pueri in proceres haec vibrant Ad patefecit fera  Iam Iove miratur Oceano placidum tempora, Andron ferox, Achivi. Ora videar centumque, ab pinxit cum! Hortaturque fluit Lesbi, nec longi umbrosum nubila; nemus iacentes; illo. Viro pes urbs collo, nata percaluit arbore Solis, et inter contra.\n","permalink":"https://divhub.github.io/bennugd-website/blog/impetus-pinguia-tyndaridae-ferrea/","title":"Impetus pinguia Tyndaridae ferrea"},{"contents":" Alignment modes are modes which indicate how a graphic or text will be aligned relative to its center.\nList    Constant Value     ALIGN_TOP_LEFT 0   ALIGN_TOP 1   ALIGN_TOP_RIGHT 2   ALIGN_CENTER_LEFT 3   ALIGN_CENTER 4   ALIGN_CENTER_RIGHT 5   ALIGN_BOTTOM_LEFT 6   ALIGN_BOTTOM 7   ALIGN_BOTTOM_RIGHT 8    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/alignment/","title":"Alignment Mode Constants"},{"contents":" This is a list of all of the current bennu wiki pages, taken from here.\nThe already migrated content is marked as this.\nComplete list  \u0026amp; -\u0026gt; Language/Pointer * -\u0026gt; Language/Pointer 0 -\u0026gt; Constants/Scancodes 0.84a 0.92 0.92a 0.93 1 -\u0026gt; Constants/Scancodes 2 -\u0026gt; Constants/Scancodes 3 -\u0026gt; Constants/Scancodes 4 -\u0026gt; Constants/Scancodes 5 -\u0026gt; Constants/Scancodes 6 -\u0026gt; Constants/Scancodes 7 -\u0026gt; Constants/Scancodes 8 -\u0026gt; Constants/Scancodes 9 -\u0026gt; Constants/Scancodes A -\u0026gt; Constants/Scancodes ALIGN BOTTOM -\u0026gt; Constants/Alignment Modes ALIGN BOTTOM LEFT -\u0026gt; Constants/Alignment Modes ALIGN BOTTOM RIGHT -\u0026gt; Constants/Alignment Modes ALIGN CENTER -\u0026gt; Constants/Alignment Modes ALIGN CENTER LEFT -\u0026gt; Constants/Alignment Modes ALIGN CENTER RIGHT -\u0026gt; Constants/Alignment Modes ALIGN TOP -\u0026gt; Constants/Alignment Modes ALIGN TOP LEFT -\u0026gt; Constants/Alignment Modes ALIGN TOP RIGHT -\u0026gt; Constants/Alignment Modes ALL SOUND ALL TEXT ALT -\u0026gt; Constants/Scancodes APOSTROPHE -\u0026gt; Constants/Scancodes ASTERISK -\u0026gt; Constants/Scancodes Abs -\u0026gt; abs() Acos -\u0026gt; acos() Add a project Advance -\u0026gt; advance() Align -\u0026gt; Constants/Alignment Modes Alignment -\u0026gt; Constants/Alignment Modes Alignment modes -\u0026gt; Constants/Alignment Modes All sound All text Alloc Allpages And Angle -\u0026gt; Variables/angle Argc Argument Argv Array Asc -\u0026gt; asc() Ascii Asin -\u0026gt; asin() Atan -\u0026gt; atan() Atan2 -\u0026gt; atan2() Atof -\u0026gt; atof() Atoi -\u0026gt; atoi() B -\u0026gt; Constants/Scancodes BACKGROUND -\u0026gt; Constants/Predefined Graphcodes BACKSLASH -\u0026gt; Constants/Scancodes BACKSPACE -\u0026gt; Constants/Scancodes BLUR 3X3 -\u0026gt; Constants/Blur Modes BLUR 5X5 -\u0026gt; Constants/Blur Modes BLUR 5X5 MAP -\u0026gt; Constants/Blur Modes BLUR NORMAL -\u0026gt; Constants/Blur Modes B ABLEND -\u0026gt; Constants/Blit Flags B ALPHA -\u0026gt; Constants/Blit Flags B CLEAR -\u0026gt; Constants/Graphical Infotypes B HMIRROR -\u0026gt; Constants/Blit Flags B NOCOLORKEY -\u0026gt; Constants/Blit Flags B SBLEND -\u0026gt; Constants/Blit Flags B TRANSLUCENT -\u0026gt; Constants/Blit Flags B VMIRROR -\u0026gt; Constants/Blit Flags Background Band Basic statements Bdf load Begin Beginner\u0026rsquo;s tutorial Bennu BennuGD Bennu SVN Bennu WIP10 Bennu WIP15 Bennu WIP16 Bennu WIP17 Bennu WIP18 Bennu WIP2 Bennu Wiki Bennu console Bennu profiler Bigbro Bilge Bit flag -\u0026gt; Language/Bit Flags Bit flags -\u0026gt; Language/Bit Flags Blend Operation Blend operation Blend table Blendop Blendop apply Blendop assign Blendop free Blendop grayscale Blendop identity Blendop intensity Blendop new Blendop swap Blendop tint Blendop translucency Blit Blit flags -\u0026gt; Constants/Blit Flags Blur Blur modes -\u0026gt; Constants/Blur Modes Bnot Bor Break Bxor Byte C -\u0026gt; Constants/Scancodes CAPS LOCK -\u0026gt; Constants/Scancodes CD ERROR -\u0026gt; Constants/CD Status Codes CD PAUSED -\u0026gt; Constants/CD Status Codes CD PLAYING -\u0026gt; Constants/CD Status Codes CD STOPPED -\u0026gt; Constants/CD Status Codes CD TRAYEMPTY -\u0026gt; Constants/CD Status Codes CD statuscodes -\u0026gt; Constants/CD Status Codes CHARSET CP850 -\u0026gt; Constants/Graphical Infotypes CHARSET ISO8859 -\u0026gt; Constants/Graphical Infotypes COMMA -\u0026gt; Constants/Scancodes COMPLETE DUMP COMPLETE RESTORE CONTROL -\u0026gt; Constants/Scancodes CRYPT 3DES CRYPT DES CRYPT NONE C 0 -\u0026gt; Constants/Coordinate Numbers C 1 -\u0026gt; Constants/Coordinate Numbers C 2 -\u0026gt; Constants/Coordinate Numbers C 3 -\u0026gt; Constants/Coordinate Numbers C 4 -\u0026gt; Constants/Coordinate Numbers C 5 -\u0026gt; Constants/Coordinate Numbers C 6 -\u0026gt; Constants/Coordinate Numbers C 7 -\u0026gt; Constants/Coordinate Numbers C 8 -\u0026gt; Constants/Coordinate Numbers C 9 -\u0026gt; Constants/Coordinate Numbers C ASTERISK -\u0026gt; Constants/Scancodes C BACKSLASH -\u0026gt; Constants/Scancodes C CENTER -\u0026gt; Constants/Scancodes C DEL -\u0026gt; Constants/Scancodes C DOWN -\u0026gt; Constants/Scancodes C END -\u0026gt; Constants/Scancodes C ENTER -\u0026gt; Constants/Scancodes C HOME -\u0026gt; Constants/Scancodes C INS -\u0026gt; Constants/Scancodes C LEFT -\u0026gt; Constants/Scancodes C M7 -\u0026gt; Constants/Coordinate Types C MINUS -\u0026gt; Constants/Scancodes C PGDN -\u0026gt; Constants/Scancodes C PGUP -\u0026gt; Constants/Scancodes C PLUS -\u0026gt; Constants/Scancodes C RIGHT -\u0026gt; Constants/Scancodes C SCREEN -\u0026gt; Constants/Coordinate Types C SCROLL -\u0026gt; Constants/Coordinate Types C UP -\u0026gt; Constants/Scancodes C number Call Calloc Case Cd -\u0026gt; cd() Cd currtrack Cd drives Cd eject Cd getinfo Cd name Cd numtracks Cd pause Cd play Cd resume Cd status Cd stop Cdinfo Center set Changelog Chdir -\u0026gt; chdir() Chr -\u0026gt; chr() Clear screen Clone Collision -\u0026gt; collision() Collision box -\u0026gt; collision_box() Collision circle -\u0026gt; collision_circle() Color Color Gamuts Color depths -\u0026gt; Constants/Color Depths Color find Colors get Colors set Complete dump Complete restore Const Constant Constantcategories Constants Continue Control flow statements Controlpoint Convert palette Coordinatenumber flags -\u0026gt; Constants/Coordinate Numbers Coordinatetype modes -\u0026gt; Constants/Coordinate Types Cos -\u0026gt; cos() Cosine Crypt decrypt Crypt del Crypt encrypt Crypt modes Crypt new Ctype D -\u0026gt; Constants/Scancodes DEL -\u0026gt; Constants/Scancodes DLL DLLs DOUBLE BUFFER DOWN -\u0026gt; Constants/Scancodes Datatype -\u0026gt; Language/Data Types Datatypes -\u0026gt; Language/Data Types Debug Debugging Declare Default Define region Delete draw Delete drawing Delete text -\u0026gt; delete_text() Dirclose -\u0026gt; dirclose() Diropen -\u0026gt; diropen() Dirread -\u0026gt; dirread() Dot DrawID Draw box Draw circle Draw curve Draw fcircle Draw line Draw rect Drawing Drawing alpha Drawing color Drawing map Drawing stipple Drawing z Dump modes Dump type Dup E -\u0026gt; Constants/Scancodes END -\u0026gt; Constants/Scancodes ENTER -\u0026gt; Constants/Scancodes EQUALS -\u0026gt; Constants/Scancodes ESC -\u0026gt; Constants/Scancodes Elif Else ElseIf Elseif Elsif End End fli Environment file Error Example function Exec Exists -\u0026gt; exists() Exit -\u0026gt; exit() Exit status Explosion DLL F -\u0026gt; Constants/Scancodes F1 -\u0026gt; Constants/Scancodes F10 -\u0026gt; Constants/Scancodes F11 -\u0026gt; Constants/Scancodes F12 -\u0026gt; Constants/Scancodes F2 -\u0026gt; Constants/Scancodes F3 -\u0026gt; Constants/Scancodes F4 -\u0026gt; Constants/Scancodes F5 -\u0026gt; Constants/Scancodes F6 -\u0026gt; Constants/Scancodes F7 -\u0026gt; Constants/Scancodes F8 -\u0026gt; Constants/Scancodes F9 -\u0026gt; Constants/Scancodes FALSE -\u0026gt; Constants/FALSE FBM FGC FH FPG FPGtool FPL Fade Fade music in Fade music off Fade off Fade on Fading False Father Fclose Fenix Fenix Wiki Fenix console Fenix profiler Feof Fexists Fflush Fget angle -\u0026gt; fget_angle() Fget dist -\u0026gt; fget_dist() Fgets File FileHandle FileID File exists Fileinfo Filetypes Filter Find -\u0026gt; find() Find color Finite -\u0026gt; finite() Flags Flength Fli angle Fli end Fli flags Fli frame Fli getinfo Fli move Fli params Fli reset Fli size Fli start Fli z Float Fmove Fnt format Fnt load Fnt new Fnt save Fnt unload Focus status Font FontID Fopen For Format -\u0026gt; format() Forum Fpg add Fpg del Fpg exists Fpg load Fpg new Fpg save Fpg unload Fps Fputs Frame Frame fli Frame time Fread Free Fremove Frewind From Fseek Ftell Ftime Ftoa -\u0026gt; ftoa() Full screen Fullscreen Function Function example Functioncategories Functioncategories (Expanded) Functioncategorylist Functionlist Functions Fwrite Fxi os G -\u0026gt; Constants/Scancodes GREATER GSCALE B GSCALE G GSCALE GB GSCALE OFF GSCALE R GSCALE RB GSCALE RG GSCALE RGB GUI DLL G ANIMATION SPEED -\u0026gt; Constants/Graphical Infotypes G ANIMATION STEP -\u0026gt; Constants/Graphical Infotypes G ANIMATION STEPS -\u0026gt; Constants/Graphical Infotypes G CENTER X -\u0026gt; Constants/Graphical Infotypes G CENTER Y -\u0026gt; Constants/Graphical Infotypes G DEPTH -\u0026gt; Constants/Graphical Infotypes G FRAMES -\u0026gt; Constants/Graphical Infotypes G HEIGHT -\u0026gt; Constants/Graphical Infotypes G PITCH -\u0026gt; Constants/Graphical Infotypes G WIDE -\u0026gt; Constants/Graphical Infotypes G WIDTH -\u0026gt; Constants/Graphical Infotypes G X CENTER -\u0026gt; Constants/Graphical Infotypes G Y CENTER -\u0026gt; Constants/Graphical Infotypes General Get angle -\u0026gt; get_angle() Get colors Get desktop size Get dist -\u0026gt; get_dist() Get distx -\u0026gt; get_distx() Get disty -\u0026gt; get_disty() Get glyph Get id -\u0026gt; get_id() Get joy button Get joy position Get modes Get pixel Get point Get real point -\u0026gt; get_real_point() Get rgb Get rgba Get screen Get status -\u0026gt; get_status() Get text color -\u0026gt; get_text_color() Get timer Get window pos Get window size Getenv Glob -\u0026gt; diropen() Global Global signals Global variable Global variables Globals Glyph get Glyph set Goto Graph -\u0026gt; Variables/graph GraphID Graph flags Graph mode Graph modes -\u0026gt; Constants/Graph Modes Graphic Graphic info -\u0026gt; graphic_info() Graphic set Graphical infotypes -\u0026gt; Constants/Graphical Infotypes Grayscale Grayscale modes ~H~ -\u0026gt; Constants/Scancodes HOME -\u0026gt; Constants/Scancodes HW SURFACE Height Hello World I INC INS -\u0026gt; Constants/Scancodes Id If Image.DLL Image DLL Import Include Index Index.php Int Internal -\u0026gt; internal International Communities Is playing song Is playing wav Isinf -\u0026gt; isinf() Isnan -\u0026gt; isnan() Itoa -\u0026gt; itoa() J -\u0026gt; Constants/Scancodes JOY HAT CENTERED -\u0026gt; Constants/Joystick Constants JOY HAT DOWN -\u0026gt; Constants/Joystick Constants JOY HAT LEFT -\u0026gt; Constants/Joystick Constants JOY HAT LEFTDOWN -\u0026gt; Constants/Joystick Constants JOY HAT LEFTUP -\u0026gt; Constants/Joystick Constants JOY HAT RIGHT -\u0026gt; Constants/Joystick Constants JOY HAT RIGHTDOWN -\u0026gt; Constants/Joystick Constants JOY HAT RIGHTUP -\u0026gt; Constants/Joystick Constants JOY HAT UP -\u0026gt; Constants/Joystick Constants Jmp Join Joy axes Joy buttons Joy getaxis Joy getball Joy getbutton Joy gethat Joy getposition Joy name Joy numaxes Joy numballs Joy number Joy numbuttons Joy numhats Joy numjoysticks Joy select Joystick Joystick constants -\u0026gt; Constants/Joystick Constants K -\u0026gt; Constants/Scancodes Key -\u0026gt; key() Keycodes -\u0026gt; Constants/Scancodes Keywords -\u0026gt; Language/Keywords Ksort L -\u0026gt; Constants/Scancodes LCD.DLL LCD About LCD Changelog LCD Close LCD DLL LCD Defines LCD Devices LCD ERRORCODES LCD Errorcodes LCD GetDepth LCD GetHeight LCD GetNumButtons LCD GetWidth LCD Globals LCD Init LCD IntVersion LCD Open LCD Quit LCD ReadButton LCD ReadButtons LCD SetBitmap LCD Version LEFT -\u0026gt; Constants/Scancodes LESS -\u0026gt; Constants/Scancodes L ALT -\u0026gt; Constants/Scancodes L BRACHET -\u0026gt; Constants/Scancodes L CONTROL -\u0026gt; Constants/Scancodes L SHIFT -\u0026gt; Constants/Scancodes L WINDOWS -\u0026gt; Constants/Scancodes Language Latest Bennu version Latest Fenix version Lcase -\u0026gt; lcase() Lcddll Len -\u0026gt; len() Let me alone -\u0026gt; let_me_alone() Libblit Libdraw Libfont Libgrbase Libjoy Libkey Libmouse Librender Libscroll Libsdlhandler Libtext Libvideo Libwm List of Fenix DLLs Ln Load Load Song Load bdf Load fnt Load fpg Load map Load pal Load pcx Load png Load song Load ttf Load ttfaa Load wav Local Local variable Local variables Locals Log Log2 Loop Loops Lpad -\u0026gt; lpad() M -\u0026gt; Constants/Scancodes M1024X768 M1280X1024 M320X200 M320X240 M320X400 M360X240 M376X282 M400X300 M512X384 M640X400 M640X480 M7 M800X600 MAP MAP Format Specification MAX BYTE MAX CHAR MAX DWORD MAX INT MAX SBYTE MAX SHORT MAX WORD MENU -\u0026gt; Constants/Scancodes MINUS -\u0026gt; Constants/Scancodes MIN BYTE MIN CHAR MIN DWORD MIN INT MIN SBYTE MIN SHORT MIN WORD MODE 16BIT -\u0026gt; Constants/Graph Modes MODE 16BITS -\u0026gt; Constants/Graph Modes MODE 16BPP -\u0026gt; Constants/Graph Modes MODE 2XSCALE -\u0026gt; Constants/Graph Modes MODE 8BIT -\u0026gt; Constants/Graph Modes MODE 8BITS -\u0026gt; Constants/Graph Modes MODE 8BPP -\u0026gt; Constants/Graph Modes MODE DOUBLEBUFFER -\u0026gt; Constants/Graph Modes MODE FRAMELESS -\u0026gt; Constants/Graph Modes MODE FULLSCREEN -\u0026gt; Constants/Graph Modes MODE HARDWARE -\u0026gt; Constants/Graph Modes MODE MODAL -\u0026gt; Constants/Graph Modes MODE MONO -\u0026gt; Constants/Sound Modes MODE STEREO -\u0026gt; Constants/Sound Modes MODE WAITVSYNC -\u0026gt; Constants/Graph Modes MODE WINDOW -\u0026gt; Constants/Graph Modes MPEG DLL Main Page Main program Making DLLs Map block copy Map buffer Map clear Map clone Map del Map exists Map get pixel Map info Map info get Map info set Map load Map name Map new Map put Map put pixel Map save Map set name Map unload Map xput Map xputnp Mem alloc Mem available Mem calloc Mem cmp Mem copy Mem free Mem move Mem realloc Mem set Mem seti Mem setw Mem total Memcmp Memcopy Memmove Memory free Memory total Memset Memseti Memsetw Minimize Mixer DLL Mkdir Mod blendop Mod cd Mod crypt Mod debug Mod dir -\u0026gt; mod_dir Mod draw Mod effects Mod ffi Mod file Mod flic Mod grproc Mod joy Mod key -\u0026gt; mod_key Mod m7 Mod map Mod math Mod mem Mod mouse Mod path Mod proc -\u0026gt; mod_proc Mod rand -\u0026gt; mod_rand Mod regex Mod say -\u0026gt; mod_say Mod screen Mod scroll Mod sort Mod sound Mod string -\u0026gt; mod_string Mod sys Mod text Mod time Mod timers Mod ttf Mod video Mod wm Mod wpad Mode7 Mode7 start Mode7 stop Mode 16bit  -\u0026gt; Constants/Graph Modes Mode 16bits  -\u0026gt; Constants/Graph Modes Mode 16bpp  -\u0026gt; Constants/Graph Modes Mode 8bit  -\u0026gt; Constants/Graph Modes Mode 8bits  -\u0026gt; Constants/Graph Modes Mode 8bpp  -\u0026gt; Constants/Graph Modes Mode is ok Mode mono -\u0026gt; Constants/Sound Modes Mode stereo -\u0026gt; Constants/Sound Modes Modules Mouse Mouse status Move draw Move drawing Move scroll Move text -\u0026gt; move_text() Move window N -\u0026gt; Constants/Scancodes NET About NET Accept NET CHANGELOG NET Changelog NET Close NET CloseAll NET Connect NET Defines NET Disconnect NET DisconnectAll NET ERRORCODES NET Errorcodes NET GetError NET GetMessage NET GetSeparator NET GetSeparatorLength NET GetSeperator NET GetSeperatorLength NET Globals NET Hostname NET IPAddress NET IPToInt NET Incoming Accept NET Init NET IntToIP NET IntVersion NET Listen NET Message NET MessageRN NET Open NET Port NET Quit NET Recv NET RecvFile NET RecvGraph NET RecvVar NET Resolve NET Send NET SendFile NET SendGraph NET SendRN NET SendVar NET Separator NET Stat Buffer NET Version NFB FIXEDWIDTH -\u0026gt; Constants/Graphical Infotypes NFB VARIABLEWIDTH -\u0026gt; Constants/Graphical Infotypes NO RESTORE NULL -\u0026gt; Constants/NULL NUM LOCK -\u0026gt; Constants/Scancodes Near angle -\u0026gt; near_angle() Net about Net connect Net disconnect Net disconnectall Net geterror Net getseparator Net getseparatorlength Net hostname Net init Net inttoip Net intversion Net ipaddress Net iptoint Net listen Net port Net quit Net recv Net recvfile Net recvgraph Net recvvar Net resolve Net send Net sendfile Net sendgraph Net sendrn Net sendvar Net separator Net stat buffer Net version Network.DLL Network.dll Network DLL Network dll Networkdll Networkdllfunctions New fnt New fpg New map New pal No restore Not Number joy O -\u0026gt; Constants/Scancodes OS BEOS -\u0026gt; Constants/os_codes OS BSD -\u0026gt; Constants/os_codes OS DC -\u0026gt; Constants/os_codes OS GP2X -\u0026gt; Constants/os_codes OS GP32 -\u0026gt; Constants/os_codes OS LINUX -\u0026gt; Constants/os_codes OS MACOS -\u0026gt; Constants/os_codes OS WII -\u0026gt; Constants/os_codes OS WIN32 -\u0026gt; Constants/os_codes OS codes -\u0026gt; Constants/os_codes O RDWR O READ O READWRITE O WRITE O ZREAD O ZWRITE Offset OnExit Onexit Operator Operators Or Os id Out region P -\u0026gt; Constants/Scancodes PAL PARTIAL DUMP PARTIAL RESTORE PF NODIAG PF REVERSE PGDN -\u0026gt; Constants/Scancodes PGUP -\u0026gt; Constants/Scancodes PI -\u0026gt; Constants/PI PLUS -\u0026gt; Constants/Scancodes PNG POINT -\u0026gt; Constants/Scancodes PRG PRN SCR -\u0026gt; Constants/Scancodes P NOWAIT P WAIT Pal clone Pal del Pal get Pal load Pal map assign Pal map getid Pal map remove Pal new Pal refresh Pal save Pal set Pal unload Palette Palette convert Palette roll Pango.dll Pango render Parameter Parameters Partial dump Partial restore Path find Path getxy Path wall Pathfind flags Pause song Pause wav Pcx load Period Pixel Play song Play wav Png load Png save Point Point get Point set Pointer -\u0026gt; Language/Pointer Pow -\u0026gt; pow() Precompiler Precompiler define Precompiler else Precompiler endif Precompiler if Precompiler ifdef Precompiler ifndef Predefined constants Predefined graphcodes -\u0026gt; Constants/Predefined Graphcodes Predefined variables Priority Private Private variable Privates Process ProcessID ProcessType ProcessTypeID Process statuscodes -\u0026gt; Constants/Process Statuscodes Processes Processid Processtype Program Project Projects Public Public variable Public variables Publics Put Put pixel Put screen Q -\u0026gt; Constants/Scancodes Quicksort R -\u0026gt; Constants/Scancodes RIGHT -\u0026gt; Constants/Scancodes R ALT -\u0026gt; Constants/Scancodes R BRACHET -\u0026gt; Constants/Scancodes R CONTROL -\u0026gt; Constants/Scancodes R SHIFT -\u0026gt; Constants/Scancodes R WINDOWS -\u0026gt; Constants/Scancodes Rand -\u0026gt; rand() Rand seed -\u0026gt; rand_seed() Readwrite modes Realloc Regex Regex reg Regex replace Region RegionID Region define Region out Regular expression Render flags -\u0026gt; Constants/Render Flags Repeat Reserve channels Reserved Reset fli Resolution Resolution modes Restoration modes Restore modes Restore type Resume song Resume wav Return Reverse stereo Rgb Rgb get Rgba Rgba get Rgbscale Rm Rmdir Roll palette Rpad -\u0026gt; rpad() S -\u0026gt; Constants/Scancodes SCALE HQ2X -\u0026gt; Constants/Scale Modes SCALE NOFILTER -\u0026gt; Constants/Scale Modes SCALE NONE -\u0026gt; Constants/Scale Modes SCALE NORMAL2X -\u0026gt; Constants/Scale Modes SCALE SCALE2X -\u0026gt; Constants/Scale Modes SCALE SCANLINE2X -\u0026gt; Constants/Scale Modes SCREEN -\u0026gt; Constants/Predefined Graphcodes SCROLL LOCK -\u0026gt; Constants/Scancodes SEEK CUR SEEK END SEEK SET SEMICOLON -\u0026gt; Constants/Scancodes SLASH -\u0026gt; Constants/Scancodes SPACE -\u0026gt; Constants/Scancodes STATUS DEAD -\u0026gt; Constants/Process Statuscodes STATUS FROZEN -\u0026gt; Constants/Process Statuscodes STATUS KILLED -\u0026gt; Constants/Process Statuscodes STATUS RUNNING -\u0026gt; Constants/Process Statuscodes STATUS SLEEPING -\u0026gt; Constants/Process Statuscodes STATUS WAITING -\u0026gt; Constants/Process Statuscodes S DFL S FREEZE S FREEZE FORCE S FREEZE TREE S FREEZE TREE FORCE S IGN S KILL S KILL FORCE S KILL TREE S KILL TREE FORCE S SLEEP S SLEEP FORCE S SLEEP TREE S SLEEP TREE FORCE S WAKEUP S WAKEUP FORCE S WAKEUP TREE S WAKEUP TREE FORCE S freeze S freeze tree S kill S kill tree S sleep S sleep tree S wakeup S wakeup tree Sandman\u0026rsquo;s code convention Sandman\u0026rsquo;s coding convention Save Save fnt Save fpg Save map Save pal Save png Say -\u0026gt; say() Say fast -\u0026gt; say_fast() Scale mode Scale modes -\u0026gt; Constants/Scale Modes Scale resolution Scale resolution aspectratio Scale resolution aspectratio modes Scale resolution orientation Scale resolution orientation modes Scan code -\u0026gt; Variables/scan_code Scan codes -\u0026gt; Constants/Scancodes Scancode -\u0026gt; Constants/Scancodes Scancodes -\u0026gt; Constants/Scancodes Screen clear Screen get Screen put Scroll Scroll move Scroll start Scroll stop Scroll window Scrolls Seek modes Select joy Set Wav Volume Set center Set channel volume Set colors Set distance Set fps Set glyph Set icon Set mode Set music position Set panning Set point Set position Set song volume Set text color -\u0026gt; set_text_color() Set title Set window pos Setting up Bennu Setting up Bennu on 64 bit linux Setting up Bennu on Windows Setting up Fenix Setting up Fenix on Windows Setting up Fenix with ConTEXT Shift status -\u0026gt; Variables/shift_status Short Signal -\u0026gt; signal() Signal action -\u0026gt; signal_action() Signal actions Signals Signed Signedness Sin -\u0026gt; sin() Size Size x Size y Sizeof Smallbro Son SongID Sort Sound channels Sound close Sound freq Sound init Sound mode Sound modes -\u0026gt; Constants/Sound Modes Split Sqrt -\u0026gt; sqrt() Standards Standards:function Standards:variable Standards function Start fli Start mode7 Start scroll Step Stop mode7 Stop scroll Stop song Stop wav Strcasecmp -\u0026gt; strcasecmp() String Strlen -\u0026gt; len() Strrev -\u0026gt; strrev() Struct Structure Subroutine Substr -\u0026gt; substr() Substring Switch System file T -\u0026gt; Constants/Scancodes TAB -\u0026gt; Constants/Scancodes TODO TRUE -\u0026gt; Constants/TRUE TTF.DLL TTF Changelog TTF DLL TTF Load TTF LoadAA Tan -\u0026gt; tan() Templates Text -\u0026gt; Language/Text TextID -\u0026gt; Language/TextID Text flags Text height -\u0026gt; text_height() Text width -\u0026gt; text_width() Text z Textinput Time Timer TinyXML.dll To Trim -\u0026gt; trim() True Ttf DLL Ttf load Ttf loadaa Ttf loadx Tutorialcategories Tutorials Type U -\u0026gt; Constants/Scancodes UP -\u0026gt; Constants/Scancodes Ucase -\u0026gt; ucase() Unload fnt Unload fpg Unload map Unload pal Unload song Unload wav Unsigned Until V -\u0026gt; Constants/Scancodes Value Variable Variable Example Variable example Variablecategories Variables Varspace Void W -\u0026gt; Constants/Scancodes WAVE WIP WaveID While Windgate\u0026rsquo;s tutorial -\u0026gt; Guides/Windgate's Tutorial Window status Word Wpad info Wpad info bb Wpad infotypes Wpad is ready Wpad rumble Write -\u0026gt; write() Write float Write in map Write int Write string Write var X Xadvance -\u0026gt; xadvance() Xgraph Xor Xput Y Yield Z \\ 0 -\u0026gt; Constants/Scancodes \\ 1 -\u0026gt; Constants/Scancodes \\ 2 -\u0026gt; Constants/Scancodes \\ 3 -\u0026gt; Constants/Scancodes \\ 4 -\u0026gt; Constants/Scancodes \\ 5 -\u0026gt; Constants/Scancodes \\ 6 -\u0026gt; Constants/Scancodes \\ 7 -\u0026gt; Constants/Scancodes \\ 8 -\u0026gt; Constants/Scancodes \\ 9 -\u0026gt; Constants/Scancodes \\ A -\u0026gt; Constants/Scancodes \\ ALT -\u0026gt; Constants/Scancodes \\ APOSTROPHE -\u0026gt; Constants/Scancodes \\ ASTERISK -\u0026gt; Constants/Scancodes \\ B -\u0026gt; Constants/Scancodes \\ BACKSLASH -\u0026gt; Constants/Scancodes \\ BACKSPACE -\u0026gt; Constants/Scancodes \\ C -\u0026gt; Constants/Scancodes \\ CAPS LOCK -\u0026gt; Constants/Scancodes \\ COMMA -\u0026gt; Constants/Scancodes \\ CONTROL -\u0026gt; Constants/Scancodes \\ C ASTERISK -\u0026gt; Constants/Scancodes \\ C BACKSLASH -\u0026gt; Constants/Scancodes \\ C CENTER -\u0026gt; Constants/Scancodes \\ C DEL -\u0026gt; Constants/Scancodes \\ C DOWN -\u0026gt; Constants/Scancodes \\ C END -\u0026gt; Constants/Scancodes \\ C ENTER -\u0026gt; Constants/Scancodes \\ C HOME -\u0026gt; Constants/Scancodes \\ C INS -\u0026gt; Constants/Scancodes \\ C LEFT -\u0026gt; Constants/Scancodes \\ C MINUS -\u0026gt; Constants/Scancodes \\ C PGDN -\u0026gt; Constants/Scancodes \\ C PGUP -\u0026gt; Constants/Scancodes \\ C PLUS -\u0026gt; Constants/Scancodes \\ C RIGHT -\u0026gt; Constants/Scancodes \\ C UP -\u0026gt; Constants/Scancodes \\ D -\u0026gt; Constants/Scancodes \\ DEL -\u0026gt; Constants/Scancodes \\ DOWN -\u0026gt; Constants/Scancodes \\ E -\u0026gt; Constants/Scancodes \\ END -\u0026gt; Constants/Scancodes \\ ENTER -\u0026gt; Constants/Scancodes \\ EQUALS -\u0026gt; Constants/Scancodes \\ ESC -\u0026gt; Constants/Scancodes \\ F -\u0026gt; Constants/Scancodes \\ F1 -\u0026gt; Constants/Scancodes \\ F10 -\u0026gt; Constants/Scancodes \\ F11 -\u0026gt; Constants/Scancodes \\ F12 -\u0026gt; Constants/Scancodes \\ F2 -\u0026gt; Constants/Scancodes \\ F3 -\u0026gt; Constants/Scancodes \\ F4 -\u0026gt; Constants/Scancodes \\ F5 -\u0026gt; Constants/Scancodes \\ F6 -\u0026gt; Constants/Scancodes \\ F7 -\u0026gt; Constants/Scancodes \\ F8 -\u0026gt; Constants/Scancodes \\ F9 -\u0026gt; Constants/Scancodes \\ G -\u0026gt; Constants/Scancodes \\ GREATER -\u0026gt; Constants/Scancodes \\ H -\u0026gt; Constants/Scancodes \\ HOME -\u0026gt; Constants/Scancodes \\ I -\u0026gt; Constants/Scancodes \\ INS -\u0026gt; Constants/Scancodes \\ J -\u0026gt; Constants/Scancodes \\ K -\u0026gt; Constants/Scancodes \\ L -\u0026gt; Constants/Scancodes \\ LEFT -\u0026gt; Constants/Scancodes \\ LESS -\u0026gt; Constants/Scancodes \\ L ALT -\u0026gt; Constants/Scancodes \\ L BRACHET -\u0026gt; Constants/Scancodes \\ L CONTROL -\u0026gt; Constants/Scancodes \\ L SHIFT -\u0026gt; Constants/Scancodes \\ L WINDOWS -\u0026gt; Constants/Scancodes \\ M -\u0026gt; Constants/Scancodes \\ MENU -\u0026gt; Constants/Scancodes \\ MINUS -\u0026gt; Constants/Scancodes \\ N -\u0026gt; Constants/Scancodes \\ NUM LOCK -\u0026gt; Constants/Scancodes \\ O -\u0026gt; Constants/Scancodes \\ P -\u0026gt; Constants/Scancodes \\ PGDN -\u0026gt; Constants/Scancodes \\ PGUP -\u0026gt; Constants/Scancodes \\ PLUS -\u0026gt; Constants/Scancodes \\ POINT -\u0026gt; Constants/Scancodes \\ PRN SCR -\u0026gt; Constants/Scancodes \\ P NOWAIT -\u0026gt; Constants/Scancodes \\ P WAIT -\u0026gt; Constants/Scancodes \\ Q -\u0026gt; Constants/Scancodes \\ R -\u0026gt; Constants/Scancodes \\ RIGHT -\u0026gt; Constants/Scancodes \\ R ALT -\u0026gt; Constants/Scancodes \\ R BRACHET -\u0026gt; Constants/Scancodes \\ R CONTROL -\u0026gt; Constants/Scancodes \\ R SHIFT -\u0026gt; Constants/Scancodes \\ R WINDOWS -\u0026gt; Constants/Scancodes \\ S -\u0026gt; Constants/Scancodes \\ SCROLL LOCK -\u0026gt; Constants/Scancodes \\ SEMICOLON -\u0026gt; Constants/Scancodes \\ SLASH -\u0026gt; Constants/Scancodes \\ SPACE -\u0026gt; Constants/Scancodes \\ T -\u0026gt; Constants/Scancodes \\ TAB -\u0026gt; Constants/Scancodes \\ U -\u0026gt; Constants/Scancodes \\ UP -\u0026gt; Constants/Scancodes \\ V -\u0026gt; Constants/Scancodes \\ W -\u0026gt; Constants/Scancodes \\ WAVE -\u0026gt; Constants/Scancodes \\ X -\u0026gt; Constants/Scancodes \\ Y -\u0026gt; Constants/Scancodes \\ Z -\u0026gt; Constants/Scancodes  ","permalink":"https://divhub.github.io/bennugd-website/docs/all/","title":"All BennuGD Wiki Pages"},{"contents":" Bit flags are constants which each denotes a single unique case in one situation and can be combined to form different, unique cases.\nThey are called bit flags, because when bits are used to denote a cases, we observe they are indeed single and unique and can be combined to form different unique combinations.\nBit flags are often used as integers:\n   Bit pattern Integer Value     0001 1   0010 2   0100 4   1000 8    These can be combined to form, for example:\n   Bit pattern Integer Value     1000 9   0110 6   1110 14   0101 5    Example When we look at Blit Flags for example, we see the values:\n   Constant Value     B_HMIRROR 1   B_VMIRROR 2   B_TRANSLUCENT 4   B_ALPHA 8   B_ABLEND 16   B_SBLEND 32   B_NOCOLORKEY 128    These are all single unique cases and can be combined to form different unique cases. For example, when we want a translucent, horizontally mirrored blit operation with use of additive blending, we would do:\nB_HMIRROR | B_TRANSLUCENT | B_ABLEND 1 | 4 | 16 = 21  Because the bits are unique, the addition operator can also be used. But when we consider there would be a constant called B_HVMIRROR, which has the value B_HMIRROR|B_VMIRROR (3), the addition operator can\u0026rsquo;t be used all the time:\nB_HMIRROR | B_HVMIRROR == 1 | 3 == 3 B_HMIRROR + B_HVMIRROR == 1 + 3 == 4  In conclusion, use the bor operator when dealing with bit flags to be on the safe side.\nUsage Example Process main() Private unsigned byte options; Begin /* Manipulate bit flags */ // To set options, use = (the bits with 1's will be targeted) options = 01000001b; // To add options, use | (the bits with 1's will be targeted) options |= 00000001b; // To remove options, use \u0026amp; and ~ (the bits with 1's will be targeted) options \u0026amp;= ~00010000b; // same: options \u0026amp;= 11101111h (the bits with 0's will be targeted) // To switch options, use ^ (the bits with 1's will be targeted) options ^= 10000000b; /* Manipulate bit flags using the \u0026lt;\u0026lt; operator (these are equivalent to the last three) */ options|= 1\u0026lt;\u0026lt;0; // position 0 is now ON options\u0026amp;= ~(1\u0026lt;\u0026lt;4); // position 4 is now OFF options^= (1\u0026lt;\u0026lt;7); // position 7 is now SWITCHED /* Checking of bit flags */ // Check if a certain option is set (the bits with 1's will be checked) if((options\u0026amp;10000000b)==10000000b) end // Check if a certain option is not set (the bits with 1's will be checked) if((options\u0026amp;10000000b)==0) end // Check if multiple options are set (the bits with 1's will be checked) if((options\u0026amp;10000001b)==10000001b) end // Check if multiple options are not set (the bits with 1's will be checked) if((options\u0026amp;00000110b)==0) end // Check if at least one of multiple options is set (the bits with 1's will be checked) if((options\u0026amp;00000110b)!=0) end // Check if at least one of multiple options is not set (the bits with 1's will be checked) if((options\u0026amp;00000110b)!=00000110b) end /* Checking of bit flags using the \u0026lt;\u0026lt; operator */ // Check if a certain option is set if((options\u0026amp;(1\u0026lt;\u0026lt;7))==(1\u0026lt;\u0026lt;7)) // position 7 is ON end // Check if a certain option is not set if((options\u0026amp;(1\u0026lt;\u0026lt;7))==0) // position 7 is OFF end End  Used in example: Bitwise Operators.\n","permalink":"https://divhub.github.io/bennugd-website/docs/language/bit_flags/","title":"Bit Flags"},{"contents":" Blit flags are bit flags which can be passed to some map functions, to specify a certain effect when blitting a graphic. These functions are:\n xput() map_xput() map_xputnp()  They can also be used to specify a certain effect for the blitting of the graphic of a process, by assigning blit flags to its local variable flags.\nList    Constant Value Description     B_HMIRROR 1 Blit the graph horizontally mirrored.   B_VMIRROR 2 Blit the graph vertically mirrored.   B_TRANSLUCENT 4 Blit the graph with half transparency.   B_ALPHA 8 Blit the graph in some way. (What does this do exactly?)   B_ABLEND 16 Blit the graph using additive blending. Nice effect for fire.   B_SBLEND 32 Blit the graph using subtractive blending. Nice effect for ghosting.   B_NOCOLORKEY 128 Blit the transparent parts of the graph as black (color 0).    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/blit_flags/","title":"Blit Flags"},{"contents":" Blur modes are used to specify the mode of blurring in the blur().\nList    Constant Value Description     BLUR_NORMAL 0 single pixel: considers pixels located to the left and above of each pixel.   BLUR_3X3 1 3x3: considers all 8 adjacent pixels.   BLUR_5X5 2 5x5: considers the 24 pixels that surrounds each pixel.   BLUR_5X5_MAP 3 5x5 with additional map: Just as the previous one but using a temporary map.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/blur/","title":"Blur Modes"},{"contents":" CD statuscodes are status codes returned by the function cd_status(), to specify the current status of a CD drive.\nList    Constant Value Description     CD_ERROR -1 Error.   CD_TRAYEMPTY 0 The CD tray is empty.   CD_STOPPED 1 The CD is stopped.   CD_PLAYING 2 The CD is playing.   CD_PAUSED 3 The CD is paused.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/cd/","title":"CD Status Codes"},{"contents":" Color depths are used to specify the color depth of the screen, by passing one of them to the function set_mode() as the depth parameter.\nSee also Graph Modes.\nList    Constant Value Description     MODE_8BITS 8 Use a color depth of 8bit. Also called MODE_8BPP.   MODE_16BITS 16 Use a color depth of 16bit. Also called MODE_16BPP.   MODE_32BITS 32 Use a color depth of 32bit. Also called MODE_32BPP.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/color_depths/","title":"Color Depths"},{"contents":" Coordinatenumber flags are used to set which scroll or mode_7 coordinate system should display a process, by assigning them to the local variable cnumber of that process. This only has influence on scrolls or mode_7 coordinate systems, not on the screen\u0026rsquo;s coordinate system.\nHow to change the used coordinate system, see ctype and its constants. Coordinate Types.\nList    Constant Value Description      0 Display the process in all scroll/mode_7-views (default).   C_0 1 Display the process in the scroll/mode_7-view with ID 0.   C_1 2 Display the process in the scroll/mode_7-view with ID 1.   C_2 4 Display the process in the scroll/mode_7-view with ID 2.   C_3 8 Display the process in the scroll/mode_7-view with ID 3.   C_4 16 Display the process in the scroll/mode_7-view with ID 4.   C_5 32 Display the process in the scroll/mode_7-view with ID 5.   C_6 64 Display the process in the scroll/mode_7-view with ID 6.   C_7 128 Display the process in the scroll/mode_7-view with ID 7.   C_8 256 Display the process in the scroll/mode_7-view with ID 8.   C_9 512 Display the process in the scroll/mode_7-view with ID 9.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/coordinate_numbers/","title":"Coordinate Numbers Flags"},{"contents":" Coordinatetype modes are used to set the type of coordinatesytem to be used, by assigning them to the local variable ctype. Different coordinatesystems have different ways of interpreting the coordinates of a process. There\u0026rsquo;s another local variable which influences the interpretation of a process\u0026rsquo; coordinate, which is resolution.\nHow to change in which individual scroll or Mode7-view the process is visible, see cnumber and its constants. Coordinate Numbers.\nList    Constant Value Description     C_SCREEN 0 The screen\u0026rsquo;s top left corner, coordinate (0,0).   C_SCROLL 1 The foreground graphic of the scroll in which the process is shown.   C_M7 2 The main graphic of the Mode7-view.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/coordinate_types/","title":"Coordinate Types"},{"contents":" Description Datatypes give meaning to data and dictate how a variable acts and reacts. Examples of datatypes are ints, floats and strings. Special cases are voids, arrays, varspaces and structs. User made types can also be defined, by use of the operator Type.\nList of Types  Array Byte Float Int Pointer Short Sizeof String Struct Varspace Void Word  ","permalink":"https://divhub.github.io/bennugd-website/docs/language/datatypes/","title":"Data Types"},{"contents":" Definition INT FALSE  FALSE is a constant integer, equal to the value 0. It is used to state that something is false and not true.\nChecking whether a variable is false, is the same as checking if it\u0026rsquo;s zero.\nExample Program example; Private int b = false; Begin // comparison with the constant FALSE if(b == false) say(\u0026quot;b was FALSE! so b==0\u0026quot;); else say(\u0026quot;b was not FALSE! so b!=0\u0026quot;); end // checking the integer itself if(!b) say(\u0026quot;b was false! so b==0\u0026quot;); else say(\u0026quot;b was true! so b!=0\u0026quot;); end Loop frame; End End  See also  TRUE  ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/false/","title":"FALSE"},{"contents":" Graph modes are used to specify the color depth of the screen and the mode of rendering, by assigning them to the global variable graph_mode. This is also achieved by passing them to the parameters depth and flags in the function set_mode(), which is a pretty tidy solution.\nList Color Depths constants:\n   Constant Value Description     MODE_8BITS 8 Use a color depth of 8bit. Also called MODE_8BPP.   MODE_16BITS 16 Use a color depth of 16bit. Also called MODE_16BPP.   MODE_32BITS 32 Use a color depth of 32bit. Also called MODE_32BPP.    Render Flags constants:\n   Constant Value Description     MODE_WINDOW 0 Enables window view.   MODE_2XSCALE 256 Doubles the resolution. Edges get smoothed.   MODE_FULLSCREEN 512 Enables fullscreen view.   MODE_DOUBLEBUFFER 1024 Enables using a double buffer for display. Also called DOUBLE_BUFFER.   MODE_HARDWARE 2048 Enables writing directly to Video RAM instead of main RAM. Also called HW_SURFACE.   MODE_MODAL 4096 Makes the main window a Modal window.   MODE_FRAMELESS 8192 Makes the main window borderless.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/graph_modes/","title":"Graph Modes"},{"contents":" Graphical infotypes are used in graphic_info(), to specify what information about a graph is wanted.\nList    Constant Value Description     G_WIDTH 0 Width in pixels. G_WIDE is equivalent, but deprecated.   G_HEIGHT 1 Height in pixels.   G_X_CENTER 2 X-axis center. Also called G_CENTER_X   G_Y_CENTER 3 Y-axis center. Also called G_CENTER_Y   G_PITCH 4 Width in bytes.   G_DEPTH 5 Color depth in bits per pixel.   G_FRAMES 6 Number of frames.   G_ANIMATION_STEP 7 Current frame in animation.   G_ANIMATION_STEPS 8 Number of frames in animation.   G_ANIMATION_SPEED 9 Current speed of animation.   B_CLEAR 1 Used in function map_new(), indicates if a bitmap is cleared.   CHARSET_ISO8859 0 Used to select iso8859 character set in the function fnt_new().   CHARSET_CP850 1 Used to select cp850 character set in the function fnt_new().   NFB_VARIABLEWIDTH 0 Flag for the function fnt_new().   NFB_FIXEDWIDTH 1 Flag for the function fnt_new().    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/graphical_infotypes/","title":"Graphical Infotypes"},{"contents":"The Bennu Hello World! Example.\nimport \u0026quot;mod_say\u0026quot; // import the module to output text to console, using say() Process Main() // start the definition of the main process Begin // start the code say(\u0026quot;Hello World!\u0026quot;); End // end the definition of the main process  This will import the module mod_say which contains the definition of the say() function. The function will echo the argument \u0026ldquo;Hello World\u0026rdquo; to the screen.\n","permalink":"https://divhub.github.io/bennugd-website/docs/general/hello-world/","title":"Hello World"},{"contents":"Polydore defenderet hominis et ortu formaene. Chromis puer ambagibus avis nitentem Themin intremuit Ixionides aequora voveam partes rectum et tempora virus. Attulerat subito, sit petatur tumulum vinaque cuncta: totum quoque pugnat ministrat rudente iura. Parens bisque?\n Et dote digna, sceleris Cephenum novae Caeneus nec laevo Latia, tamen. Quae stamina visu rogum revellere tales. Ibat Tempus furor tellus, qui posita Phoebi, est somno hoc, senectus sonum attollens esset ex leves. Aspergine iactantur et fuit, ut clarus Scylla; semper rubefecit caelicolae!\n ","permalink":"https://divhub.github.io/bennugd-website/docs/general/installation/","title":"Installation"},{"contents":"Internal default data.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/internal/","title":"Internals"},{"contents":" Joystick constants are constants used with joysticks.\nList    Constant Value Description     JOY_HAT_CENTERED 0 The hat is centered.   JOY_HAT_UP 1 The hat is moved up.   JOY_HAT_RIGHT 2 The hat is moved right.   JOY_HAT_DOWN 4 The hat is moved down.   JOY_HAT_LEFT 8 The hat is moved left.   JOY_HAT_RIGHTUP 3 The hat is moved right and up.   JOY_HAT_RIGHTDOWN 6 The hat is moved right and down.   JOY_HAT_LEFTUP 9 The hat is moved left and up.   JOY_HAT_LEFTDOWN 12 The hat is moved left and down.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/joystick/","title":"Joystick Constants"},{"contents":" Keywords are reserved words for a special purpose.\nFor example the word function is reserved to declare a function, and cannot be used for any other purpose.\nExample The following declarations will be invalid:\nInvalid Example 1 Function Function( ) Begin return; End  Invalid Example 2 int function; float debug;  ","permalink":"https://divhub.github.io/bennugd-website/docs/language/keywords/","title":"Keywords"},{"contents":" Definition NULL is a pointer, pointing to nothing. In programming it points to 0x00000000, or just plain 0.\nExample The following check is the same as checking if a pointer variable is NULL:\nif(my_pointer) end  ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/null/","title":"NULL"},{"contents":" OS codes are codes used for the global variable os_id, to specify the current platform BGDI is running on.\nOS codes 1000 and above are used for unofficial ports and may not be available in the official Bennu version.\nList    Constant Value Description     OS_WIN32 0 Microsoft Windows.   OS_LINUX 1 Linux.   OS_BEOS 2 Be Operating System.   OS_MACOS 3 Mac Operating System.   OS_GP32 4 GP32 handheld console.   OS_DC 5 Sega Dreamcast.   OS_BSD 6 Berkeley Software Distribution.   OS_GP2X 7 GP2X handheld console.   OS_GP2X_WIZ 8 GP2X WIZ handheld console.   OS_CAANOO 9 GP2X Caanoo handheld console.   OS_DINGUX_A320 10 Dingoo A320 handheld console.   OS_WII 1000 Nintendo Wii console (through Wii homebrew).   OS_PSP 1001 PlayStation Portable.   OS_IOS 1002 iOS.   OS_ANDROID 1003 Android (under development).    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/os_codes/","title":"OS Codes"},{"contents":" Definition INT PI == 180000  The equivalent to the mathematical pi (3.14159265\u0026hellip;), in thousandths of a degree.\nIt can be used to define angles, like assigning one to the local variable angle, or passing one to the function xadvance().\nExample angle = PI/2; // 90000 (90 degrees) xadvance(-PI/4,10); // -45000 (-45 degrees)  ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/pi/","title":"PI"},{"contents":" Syntax Declaration of a pointer:\n\u0026lt;datatype\u0026gt; POINTER \u0026lt;pointername\u0026gt; \u0026lt;datatype\u0026gt; * \u0026lt;pointername\u0026gt;  Assignment of a value to the location pointed to:\nPOINTER \u0026lt;pointername\u0026gt; = \u0026lt;value\u0026gt;; * \u0026lt;pointername\u0026gt; = \u0026lt;value\u0026gt;;     Notation Description     \u0026lt; ... \u0026gt; item   [ ... ] optional   ( ... )* 0 or more times   ( ... )+ 1 or more times    Description Pointers, are used to point to a location in memory. It uses 32 bits (4 bytes) so it can map 4GB of memory into bytes.\nPointers can point to any datatype: ints, shorts, strings or even usermade datatypes. However, using a struct pointer my_pointer is pointless, because the compiler has no knowledge of the elements inside the struct pointing to, since it doesn\u0026rsquo;t know which struct is meant, so this is invalid.\nMyStruct pointer my_pointer, where MyStruct is an existing struct, is also not valid, because MyStruct is not a datatype. The only way to have something like a struct pointer my_pointer is to use Type as seen in the example.\nExample import \u0026quot;mod_say\u0026quot; Type _point int x; int y; End Type _person string name; int age; End Global _person Person; End Process Main() Private int my_int; int* my_int_pointer; _point myPoint; _person* personPointer; // possible, because _person is infact a datatype //Person* personPointer; // not possible, because Person is not a datatype Begin my_int_pointer = \u0026amp;my_int; my_int = 3; say(my_int); say(*my_int_pointer); *my_int_pointer = 4; say(my_int); say(*my_int_pointer); setXY(\u0026amp;myPoint); say(myPoint.x); say(myPoint.y); personPointer = \u0026amp;Person; personPointer.name = \u0026quot;Mies\u0026quot;; say(Person.name); say(personPointer.name); End Function int setXY(_point* p) Begin p.x = 3; // this is actually (*p).x = 3, but . can be used like this p.y = 5; // this is actually (*p).y = 5, but . can be used like this return 0; End  Used in example: say(), key(), Type, Global, Private, point\nThe \u0026amp; (offset) operator, when used with pointers, returns a void pointer to a variable. In the example it returns an int pointer to the variable my_int.\nThe * (pointer) operator, when used with pointers, makes it so the pointer variable is not accessed, but the variable it\u0026rsquo;s pointing to. In the example it changes access from my_int_pointer to my_int.\n","permalink":"https://divhub.github.io/bennugd-website/docs/language/pointer/","title":"Pointer"},{"contents":" To make a simple port of Bennu and the modules, all is needed is the source, SDL, SDL_mixer, autoconf and make. With those, it can be compiled to virtually any platform.\nCurrent official ports:  Windows Linux GP2X Wiz Caanoo  Current unofficial ports:  Nintendo Wii MacOS X (Intel Only) Haiku OS Open Pandora Playstation Portable Apple iOS (iPhone) Motorola Z6/EM30/E8/EM35/VE66  Ports being worked on:  Android Dingoo Dingux Dreamcast Xbox Playstation 2 HTML 5 Bennu .NET (Windows Platforms)  ","permalink":"https://divhub.github.io/bennugd-website/docs/general/ports/","title":"Ports"},{"contents":" Predefined graphcodes can be used as GraphID\u0026rsquo;s in some cases.\nFunctions using graphics is the most common case.\nList    Constant Value Description     BACKGROUND 0 The graphic of the background (local variable graph of a process won\u0026rsquo;t work with this).   SCREEN -1 The graphic of the screen (its center is (0,0)).    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/predefined_graphcodes/","title":"Predefined Graphcodes"},{"contents":" Syntax Process \u0026lt;name\u0026gt; ( [ \u0026lt;parameters\u0026gt; ] ) [ Public [ \u0026lt;public variables\u0026gt; ] ] [ Private [ \u0026lt;private variables\u0026gt; ] ] Begin [ \u0026lt;main code\u0026gt; ] [OnExit [ \u0026lt;OnExit code\u0026gt; ] ] End     Notation Description     \u0026lt; ... \u0026gt; item   [ ... ] optional   ( ... )* 0 or more times   ( ... )+ 1 or more times    Description process is a reserved word used to start the code of a process. If name is main, that process will be started at the start of the program.\nA process is a subroutine to which one or more of the following apply:\n it receives parameters it acts on the parameters it processes data located elsewhere  In addition to these possibilities, a process always has a frame; statement. The difference between a function and a process is a process is treated as a separate thread. This means one can\u0026rsquo;t let a process return a value like a function, as the father process continues its code as well, as soon as the process hits a frame; statement or when the code is done. When that happens, the process \u0026lsquo;returns\u0026rsquo; its ProcessID and continues the code (in the next frame).\nWhen the frame; statement is reached in the code, a number of other local variables are defined or updated not only of the new process, but also of related processes. These are:\n The father variable of the new process. The son variable of the father process (updated). The bigbro variable of the new process. The smallbro variable of the processes called by the father immediately before the new process was called (updated). The son and smallbro variables are also defined of the new process, but do not yet carry values.  When there are no more processes alive, the program ends.\nLocal variables as parameters When a process is declared with parameters that are actually local variables, arguments for these parameters will initialise those local variables. This may sound strange, but an example will clear things up.\nFor example, consider the local variables x, y, z, file and graph. To create a process to move a game sprite around, you can declare it as follows:\nprocess Ship (x,y,z,file,graph) begin // move left 1 pixel per frame repeat x -= 1; // move 1 pixel to the left frame; // this process is done for this frame, wait for the next until (x\u0026lt;0); end  Calling the process with e.g. Ship(300,100,5,0,1); will have the Ship appear at the coordinates (300,100) on z-Level 5 with the Sprite No.1 in the file number 0. The ship will move left until it leaves the screen. You can change movement by changing the x/y value of the process and animate the ship by changing the graph value.\nExample Process SpaceShip( int x, int y, int angle, int maxspeed, int maxturnspeed) Public // Declare public variables here Private // Declare private variables here int speed; Begin // Start the main processcode graph = map_new(20,20,8); map_clear(0,graph,rgb(0,255,255)); Loop speed+=key(_up)*(speed\u0026lt;maxspeed)-key(_down)*(speed\u0026gt;-maxspeed); angle+=(key(_left)-key(_right))*maxturnspeed; advance(speed); frame; End OnExit // Start the exit code map_unload(0,graph); End // End the main processcode Now one can call this process for example by doing the following. Process Main() Begin SpaceShip(100,100,0,20,5000); Repeat frame; Until(key(_ESC)) let_me_alone(); End  Used in example: map_new(), map_clear(), key(), advance(), map_unload(),let_me_alone(), Process, Begin, End, Loop, Repeat, graph, angle\nAnd when the SpaceShip process ends - because the code of it reached the End or something sent an s_kill signal - the OnExit code starts. In this example it will unload the memory used for the created graphic. If there is no OnExit code, the process will just end.\nThis will make a SpaceShip with a cyan coloured block, able to move around the screen.\n","permalink":"https://divhub.github.io/bennugd-website/docs/language/process/","title":"Process"},{"contents":" Process statuscodes are status codes used for the local variable Reserved.status, to specify the current status of a process.\nList    Constant Value Description     STATUS_DEAD 0 The process is dead.   STATUS_KILLED 1 The process is killed.   STATUS_RUNNING 2 The process is running.   STATUS_SLEEPING 3 The process is sleeping.   STATUS_FROZEN 4 The process is frozen.   STATUS_WAITING 7 The process is waiting.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/process_statuscodes/","title":"Process statuscodes"},{"contents":" Render flags are bit flags used to specify the mode of rendering, by passing them to the function set_mode() as the flags parameter. Multiple render flags can be specified using \u0026ldquo;|\u0026rdquo; (pipe character) for separation.\nSee also Graph Modes.\nList    Constant Value Description     MODE_WINDOW 0 Enables window view.   MODE_2XSCALE 256 Doubles the resolution. Edges get smoothed.   MODE_FULLSCREEN 512 Enables fullscreen view.   MODE_DOUBLEBUFFER 1024 Enables using a double buffer for display. Also called DOUBLE_BUFFER.   MODE_HARDWARE 2048 Enables writing directly to Video RAM instead of main RAM. Also called HW_SURFACE.   MODE_MODAL 4096 Makes the main window a Modal window.   MODE_FRAMELESS 8192 Makes the main window borderless.   MODE_WAITVSYNC 16384 Synchronize with vertical retrace. Also called WAITVSYNC.    More Info MODE_HARDWARE can cause some operations to speed up and some to slow down.\nMODE_DOUBLEBUFFER can cause frame transitions to be smoother. However, compatibility with restore_type = partial_restore is lost!\nMODE_MODAL causes the main window to stay focused and hold the mouse.\n","permalink":"https://divhub.github.io/bennugd-website/docs/constants/render_flags/","title":"Render Flags"},{"contents":" Scale modes are used to set the mode of scaling, by assigning one of them to the global variable scale_mode.\nList    Constant Value Description     SCALE_NONE 0 No scale.   SCALE_SCALE2X 1 Scale two times; use some filter. Looks like MODE_2XSCALE.   SCALE_HQ2X 2 Scale two times; use HQ filter. Looks nice, runs slower.   SCALE_SCANLINE2X 3 Scale two times; use scanline filter.   SCALE_NORMAL2X 4 Scale two times; no extra filter. Also called SCALE_NOFILTER.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/scale_modes/","title":"Scale Modes"},{"contents":" Scancodes are used to identify keys. This is used in the function key() and the global variable scan_code.\nNote that the global variable ascii is very different from this.\nList    Constant Value     _ESC 1   _1 2   _2 3   _3 4   _4 5   _5 6   _6 7   _7 8   _8 9   _9 10   _0 11   _MINUS 12   _PLUS 13   _BACKSPACE 14   _TAB 15   _Q 16   _W 17   _E 18   _R 19   _T 20   _Y 21   _U 22   _I 23   _O 24   _P 25   _L_BRACHET 26   _R_BRACHET 27   _ENTER 28   _C_ENTER 28   _CONTROL 29   _A 30   _S 31   _D 32   _F 33   _G 34   _H 35   _J 36   _K 37   _L 38   _SEMICOLON 39   _APOSTROPHE 40   _WAVE 41   _L_SHIFT 42   _BACKSLASH 43   _Z 44   _X 45   _C 46   _V 47   _B 48   _N 49   _M 50   _COMMA 51   _POINT 52   _SLASH 53   _C_BACKSLASH 53   _R_SHIFT 54   _C_ASTERISK 55   _PRN_SCR 55   _ALT 56   _SPACE 57   _CAPS_LOCK 58   _F1 59   _F2 60   _F3 61   _F4 62   _F5 63   _F6 64   _F7 65   _F8 66   _F9 67   _F10 68   _NUM_LOCK 69   _SCROLL_LOCK 70   _HOME 71   _C_HOME 71   _UP 72   _C_UP 72   _PGUP 73   _C_PGUP 73   _C_MINUS 74   _LEFT 75   _C_LEFT 75   _C_CENTER 76   _RIGHT 77   _C_RIGHT 77   _C_PLUS 78   _END 79   _C_END 79   _DOWN 80   _C_DOWN 80   _PGDN 81   _C_PGDN 81   _INS 82   _C_INS 82   _DEL 83   _C_DEL 83   _F11 87   _F12 88   _LESS 89   _EQUALS 90   _GREATER 91   _ASTERISK 92   _R_ALT 93   _R_CONTROL 94   _L_ALT 95   _L_CONTROL 96   _MENU 97   _L_WINDOWS 98   _R_WINDOWS 99    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/scancodes/","title":"Scancodes"},{"contents":" Sound modes are used to set the sound mode, by assigning one of them to the global variable sound_mode.\nCurrently the choice is between monotone sound and stereo sound.\nList    Constant Value Description     MODE_MONO 0 Use monotone sound.   MODE_STEREO 1 Use stereo sound.    ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/sound_modes/","title":"Sound Modes"},{"contents":" Definition INT TRUE  TRUE is a constant integer, equal to the value 1. It is used to state that something is true and not false.\nChecking whether a variable is true, is the same as checking if it\u0026rsquo;s nonzero.\nExample Program example; Private int b = true; Begin // comparison with the constant TRUE if(b == true) say(\u0026quot;b was TRUE! so b==1\u0026quot;); else say(\u0026quot;b was not TRUE! so b!=1\u0026quot;); end // checking the integer itself if(b) say(\u0026quot;b was true! so b!=0\u0026quot;); else say(\u0026quot;b was false! so b==0\u0026quot;); end Loop frame; End End  See also  FALSE  ","permalink":"https://divhub.github.io/bennugd-website/docs/constants/true/","title":"TRUE"},{"contents":" A text is a text written on screen with texts functions, like write() or write_int(). A text is addressed using the associated TextID.\nThere are two kinds of texts:\n Static text is any text written with write(); it is static, because the content of the text cannot be changed after writing, but the text can be moved and deleted.\n Dynamic text is any text written with write_xxx() functions; it is dynamic because the content of the text always reflects the current value of the variable specified. Of course moving and deleting is also possible.\n  Writing Texts There are multiple ways to write texts: the write() function, write_xxx() functions and the write_in_map() function. With the first two, some the global variable text_z is important and with all three of them, the following are important:\n The functions set_text_color() and get_text_color() The font The alignment The global variable text_flags  Also the function move_text() can be handy, as it moves a previously written text to a different location.\nExample Program texts; Const maxtexts = 10; Private int textid[maxtexts-1]; string str; float flt; Begin // Set FPS set_fps(60,0); // Init text settings: text_z = 0; text_flags = 0; set_text_color(rgb(255,255,255)); // Write some texts textid[0] = write(0,0,0,0,\u0026quot;FPS:\u0026quot;); textid[1] = write_int(0,30,0,0,\u0026amp;fps); textid[2] = write_string(0,160,95,1,\u0026amp;str); textid[3] = write_float(0,160,105,0,\u0026amp;flt); // Show z workings set_text_color(rgb(50,150,150)); textid[4] = write(0,20,20,0,\u0026quot;Underlying text\u0026quot;); text_z = -1; set_text_color(rgb(255,255,255)); textid[5] = write(0,22,22,0,\u0026quot;On top text\u0026quot;); // Update the texts until ESC is pressed Repeat // Notice the texts get updated as the values of str and flt changes. // The same goes for the value of fps. str = \u0026quot;This program is running for \u0026quot; + time()/100 + \u0026quot; seconds.\u0026quot;; flt = (float)time()/100; frame; Until(key(_esc)); // Delete the texts (this section would be good for OnExit) for(x=0; x\u0026lt;maxtexts; x++) if(textid[x]!=0) delete_text(textid[x]); end end End  Used in example: set_fps(), set_text_color(), write(), write_int(), write_string(), write_float(), key(), delete_text(), text_z, text_flags, fps\n","permalink":"https://divhub.github.io/bennugd-website/docs/language/text/","title":"Text"},{"contents":" TextID is an identifier associated with a certain text. It is returned by various text functions, like write(), write_int(), write_string(), write_float() and move_text().\nWhen a dynamic text is created, it has the color last set by set_text_color(). By default this is white (rgb(255,255,255)). Its Z value is equal to text_z at the moment of creation, which is -256 by default.\nTo move the dynamic text associated with a TextID, use move_text(). To delete the text, use delete_text().\nNotes There can be a total of 512 dynamic texts on screen simultaneously.\nSee Also  Text  ","permalink":"https://divhub.github.io/bennugd-website/docs/language/textid/","title":"TextID"},{"contents":" This tutorial, originally made by Windgate for Trinit, tries to serve as a great starting point for those new to Bennu.\n It\u0026rsquo;s still a work in progress, but this article will be updated when new lessons are translated.\n Graphics I When creating a video game, the first thing you\u0026rsquo;ll need is graphics.\nYou could start with simple graphics made with Paint or a similar simple drawing program, but if you\u0026rsquo;re going to take use several hours of work for your video-game, it\u0026rsquo;s better to start with some nice graphics as can be your preferred game characters or the scenarios for that old game you spent hundreds of hours playing long ago.\nFirst of all, create a folder where you\u0026rsquo;ll store your work.\nSprites A spriteset is a table of graphics with all the animations for a particular character.\nYou\u0026rsquo;ll have to choose several spritesets. You can find a great collection of spritesets on the Internet, be it in sites as http://spritedatabase.net or simply by searching in Google Images for “sprite” and “ripped”.\nWhen choosing your spritesets please take into account:\n         Views Top, side or isometric. It\u0026rsquo;s usually easier to start with side-view spritesets.   Animations Your character should NOT be able to perform more actions than those defined in its spriteset.   Resolutions The size in pixels of each animation (Sprite) is a good indication of the quality of the animation.    Notice that Image I corresponds to an isometric-view spriteset, without any jump animation and with a medium resolution: not as high as that found in Street Fighter II nor as low as that found in the first Super Mario Bros.\nBackgrounds Background images are the images where your game\u0026rsquo;s action will take place.\nYou should choose several background images. Again, have a look at websites such as http://vgmaps.com, or look for them in Google Images using “scroll”, “background” and “ripped” as keywords.\nJust like sprites, background images can also use one of the views listed above so be sure to choose one that uses the same view as your sprites do. As stated above, it\u0026rsquo;s better to start with a side-view game.\nRegarding resolution, try to not use images with a very low resolution (below 320x240 pixels) as they might not fill the screen completely but also be sure not to use images that are too big (over 4096x4096 pixels) as they use too many resources and they could decrease your game\u0026rsquo;s performance. We can always rescale the graphics, but that\u0026rsquo;s something we\u0026rsquo;ll try to avoid as of now.\nPlease note that background imagess and sprites are completely different things. In ripped background images you might sometimes find enemies or items kept from the original games, those are useless to us and are called “dirty”, as you\u0026rsquo;ll probably have to clean them before using them in your game.\nPlease note that in Image 2 can be a top-view background image, at a somewhat low resolution and that can be considered dirty if your idea is to make a game where the bushes can be cut down.\nPUBLIC We\u0026rsquo;ve already worked with most of Bennu\u0026rsquo;s main utilities, but there\u0026rsquo;s still a very important aspect of Bennu we have not dealt with that will certainly open you the doors to a very broad field of Bennu programming.\nYou can see that, by using PRIVATE variables, you cannot access data belonging to a process even if you know its process ID. That limitation makes it hard to guess things as simple as -for example- determining how much damage a certain shot makes in a certain enemy.\nYou could implement such a feature by using LOCAL variables, but this is discouraged as it modifies all the processes\u0026rsquo; varspace to hold that variable, no matter what their type is, thus increasing the amount of memory used.\nTo avoid that problem you can use variables with PUBLIC scope that only modify the varspace of those processes that have that variable declared. Its usage seems to be very simple and convenient but has a few rules that must be followed, as shown below.\nDECLARE sentence Although you can declare the PUBLIC variables in the same way you do with PRIVATE variables that won\u0026rsquo;t generally allow us to access them, as Bennu will give that process type a pre-defined varspace and only contains some basic vars like graph, x, y, etc.\nTo overcome this limitation, Bennu implements the DECLARE sentence. You must use it for all the processes that declare PUBLIC variables and before the process declaration. In the example, we\u0026rsquo;re going to declare some PUBLIC data for our main character and thus, before declaring its process we must add the following lines:\nDECLARE PROCESS main_character ( \u0026lt;Parameters for this process\u0026gt; ) PUBLIC int health; int strength; int agility; END END  You can include that sentence right before declaring the main_character process. For that process, it\u0026rsquo;ll be like if the variables had been declared in their PRIVATE scope but, as you\u0026rsquo;ll now see, the rest of the game\u0026rsquo;s processes can now access and modify them.\nThe data type associated to the process The DECLARE sentence not only associates the new vars to the process but it also changes the process identifier so we can have access to them.\nUp until now, the process identifier was stored in a variable of type integer (INT) and we could access its basic data (x, y, size, etc) as if it was of a TYPE variable.\nThis continues to be like that and you\u0026rsquo;ll be able to use the identifier for the process like before but we\u0026rsquo;ll now have another new data type that allows us to access all the PUBLIC variables for that process in the same way.\nThe new data type created by DECLARE is named after the process so in our case main_character will now also represent a valid data type. So now any process can hold a PRIVATE var of type “main_character” and have access to its basic data and all its PUBLIC variables through it.\nBut beware: Variables of type “main_character” and all the type vars associated to a process with PUBLIC scope vars in them cannot be modified before having a valid process identifier associated to them.\nWhat does that mean?\nThat means that prior to PUBLIC variables usage, you must store a valid process identifier. For example, any enemy that wants to get the main_processes “health” variable must first declare a PRIVATE variable of type “main_character”, as shown below:\nPRIVATE main_character objective;  And second, before accessing any of the fields in objective, it must refer to the actual main_character process, and check that the proess still exists. You could do:\nIF ( objective = collision ( TYPE main_character ) ) objective.health = objective.health - 1; END  Once more, please note that before being able to use objective.health you must check there is a collision and therefore objective holds a valid process identifier.\nAnd, of course, apart from collision(), you can also use get_id(), father and -in general- any other method that returns a process ID for main_character to work with the new data TYPE returned by DECLARE.\n","permalink":"https://divhub.github.io/bennugd-website/docs/guides/windgate-tutorial/","title":"Windgate's Tutorial"},{"contents":" Definition FLOAT abs ( \u0026lt;FLOAT value\u0026gt; )  Returns the absolute value of value.\nParameters  FLOAT value - The value.  Returns FLOAT : The absolute value of value.\nExample Global float value1; int value2; End Process Main() Begin write_float(0,0, 0,0,\u0026amp;value1); write_int(0,0,10,0,\u0026amp;value2); value1 = abs(3); value2 = abs(-4); Repeat frame; Until(key(_ESC)) End  Used in example: write_float(), write_int(), abs(), key().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/abs/","title":"abs()"},{"contents":" Definition FLOAT acos ( \u0026lt;FLOAT value\u0026gt; )  Returns the arccosine of a certain value.\nThis function performs an arccosine calculation on a certain value and returns an angle between and including 0 and 180000 (0-180º).\nParameters  FLOAT value - The value to be performed an arccosine calculation on.  Returns FLOAT : The arccosine result of the specified value, an angle between and including 0 and 180000 (0-180º).\nNotes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.\nTo read about all aspects of trigonometry, you can visit Wikipedia\u0026rsquo;s Trigonometric function page.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/acos/","title":"acos()"},{"contents":" Definition INT advance ( \u0026lt;INT distance\u0026gt; )  Moves the calling process forward by distance units in the direction of the process\u0026rsquo; angle.\nThis function is influenced by the local variables angle and resolution.\nParameters  INT distance - Distance to advance, in units.  Returns INT : Returns true if successful and false if failed.\nExample import \u0026quot;mod_grproc\u0026quot; import \u0026quot;mod_map\u0026quot; import \u0026quot;mod_wm\u0026quot; // for exit_status import \u0026quot;mod_key\u0026quot; // for key() import \u0026quot;mod_proc\u0026quot; Process Main() Private int my_proc; Begin proc(); //create a new process proc2(); //create a new process Repeat frame; Until(key(_ESC) || exit_status) OnExit signal(my_proc,S_KILL); End Process proc() Begin // Create a cyan square and assign it to 'graph' graph = map_new(100,100,8); map_clear(0,graph,rgb(0,255,255)); // Set starting position x = 50; y = 50; // This loop makes this process advance 3 pixels every frame Loop advance(3); // advance 3 pixels frame; End End Process proc2() Begin // Set resolution to 100 resolution = 100; // Create a cyan square and assign it to 'graph' graph = map_new(100,100,8); map_clear(0,graph,rgb(0,255,255)); // Set starting position x = 50*resolution; y = 150*resolution; // This loop makes this process advance 3/100 pixels every frame Loop advance(3); // advance 3/100 pixels frame; End OnExit map_unload(0,graph); End  Used in example: key(), signal(), map_new(), map_clear(), rgb(), advance(), map_unload(), exit_status, graph, x, y, resolution\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/advance/","title":"advance()"},{"contents":" Definition alloc ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/alloc/","title":"alloc()"},{"contents":" Definition INT angle = 0  Angle is a predefined local variable which holds the angle (measured in 1\u0026frasl;1000 of a degree) at which the graphic of that process (assigned by the local variable graph) will be drawn. It also influences the result of the function advance().\nAn angle of 0 means to the right, 90000 means up, 180000 means left and 270000 and -90000 mean down.\nExample To make the graphic of a process spin\nimport \u0026quot;mod_grproc\u0026quot; import \u0026quot;mod_map\u0026quot; import \u0026quot;mod_wm\u0026quot; // for exit_status import \u0026quot;mod_key\u0026quot; // for key() Process Main() Begin graph = map_new(100,100,8); //Create a cyan square and assign it to 'graph' map_clear(0,graph,rgb(0,255,255)); x = 160; //Position the graphic's center y = 100; //in the center of the screen Repeat angle += 1000; //increase the angle of graphic by 1000 each frame. 1000 = 1 degree. frame; Until(key(_ESC) || exit_status) OnExit map_unload(0,graph); End  Used in example: map_new(), map_clear(), rgb(), map_unload(), key(), exit_status, graph, x, y, angle\nThis process will spin the cyan square by 1 degree each frame.\n","permalink":"https://divhub.github.io/bennugd-website/docs/variables/angle/","title":"angle"},{"contents":" Definition BYTE asc ( \u0026lt;STRING character\u0026gt; )  Returns the ASCII value of the first character of the string character.\nParameters  STRING character - The string of which the ASCII value of the first character will be returned.  Returns BYTE : The ASCII value of the first character of the string character.\nExample Program asciis; Begin write(0,0, 0,0,asc(\u0026quot;A\u0026quot;)); write(0,0,10,0,asc(\u0026quot;CAT\u0026quot;)); Repeat frame; Until(key(_esc)) End  Used in example: write(), key()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/asc/","title":"asc()"},{"contents":" Definition INT ascii  Ascii is defined in the mod_key module and, in contrast to scan_code, it contains the last character typed on the keyboard instead of the last key.\nThat means “A” and “a” will have the same scan_code, but different ascii value.\nExample import \u0026quot;mod_text\u0026quot; import \u0026quot;mod_key\u0026quot; import \u0026quot;mod_video\u0026quot; process main() begin set_mode(640,320); write( 0, 60, 10, 0, \u0026quot;Use lower and upper case characters to see the difference\u0026quot;); write( 0, 60, 20, 0, \u0026quot;between ascii and scan_code. (ESC to exit) \u0026quot;); write( 0, 60, 40, 0, \u0026quot;ascii: \u0026quot;); write_var( 0, 110, 40, 0, ascii); write( 0, 26, 50, 0, \u0026quot;scan_code: \u0026quot;); write_var( 0, 110, 50, 0, scan_code); while ( !key(_esc)) frame; end end  Used in example: write(), key(), set_mode(), .\n","permalink":"https://divhub.github.io/bennugd-website/docs/variables/ascii/","title":"ascii"},{"contents":" Definition FLOAT asin ( \u0026lt;FLOAT value\u0026gt; )  Returns the arcsine of a certain value.\nThis function performs an arcsine calculation on a certain value and returns an angle between and including -90000 and 90000 (-90-90º).\nParameters  FLOAT value - The value to be performed an arcsine calculation on.  Returns FLOAT : The arcsine result of the specified value, an angle between and including -90000 and 90000 (-90-90º).\nNotes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.\nTo read about all aspects of trigonometry, you can visit Wikipedia\u0026rsquo;s Trigonometric function page.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/asin/","title":"asin()"},{"contents":" Definition FLOAT atan ( \u0026lt;FLOAT value\u0026gt; )  Returns the arctangent of a certain value.\nThis function performs an arctangent calculation on a certain value and returns an angle between but not including -90000 and 90000 (-90-90º).\nParameters  FLOAT value - The value to be performed an arctangent calculation on.  Returns FLOAT : The arctangent result of the specified value, an angle between but not including -90000 and 90000 (-90-90º).\nNotes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.\nTo read about all aspects of trigonometry, you can visit Wikipedia\u0026rsquo;s Trigonometric function page.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/atan/","title":"atan()"},{"contents":" Definition FLOAT atan2 ( \u0026lt;FLOAT y\u0026gt; , \u0026lt;FLOAT x\u0026gt;)  Returns the arctangent of a certain value. It is computed as the arc tangent of y/x. The signs of the arguments are used to perform the calculation.\nThis function performs an arctangent calculation on a certain value and returns an angle between but not including -180000 and 180000 (-180-180º).\nParameters  FLOAT y - The Y value to be performed an arctangent calculation on. FLOAT x - The X value to be performed an arctangent calculation on.  Returns FLOAT : The arctangent result of the specified value, an angle between but not including -180000 and 180000 (-180-180º).\nNotes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.\nTo read about all aspects of trigonometry, you can visit Wikipedia\u0026rsquo;s Trigonometric functions and atan2 pages.\nSee also  atan()  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/atan2/","title":"atan2()"},{"contents":" Definition FLOAT atof ( \u0026lt;STRING str\u0026gt; )  Returns the float value of the number specified in a certain string.\nParameters  STRING str - The string specifying a number of which the float value will be returned.  Returns FLOAT : The float value of the number specified by the specified string.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/atof/","title":"atof()"},{"contents":" Definition INT atoi ( \u0026lt;STRING str\u0026gt; )  Returns the int value of the number specified in a certain string.\nParameters  STRING str - The string specifying a number of which the int value will be returned.  Returns INT : The int value of the number specified by the specified string.\nExample ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/atoi/","title":"atoi()"},{"contents":" Definition bdf_load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/bdf_load/","title":"bdf_load()"},{"contents":" Definition blendop_apply ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_apply/","title":"blendop_apply()"},{"contents":" Definition blendop_assign ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_assign/","title":"blendop_assign()"},{"contents":" Definition blendop_free ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_free/","title":"blendop_free()"},{"contents":" Definition blendop_grayscale ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_grayscale/","title":"blendop_grayscale()"},{"contents":" Definition blendop_identity ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_identity/","title":"blendop_identity()"},{"contents":" Definition blendop_intensity ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_intensity/","title":"blendop_intensity()"},{"contents":" Definition blendop_new ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_new/","title":"blendop_new()"},{"contents":" Definition blendop_swap ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_swap/","title":"blendop_swap()"},{"contents":" Definition blendop_tint ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_tint/","title":"blendop_tint()"},{"contents":" Definition blendop_translucency ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blendop_translucency/","title":"blendop_translucency()"},{"contents":" Definition blur ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/blur/","title":"blur()"},{"contents":" Definition calloc ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/calloc/","title":"calloc()"},{"contents":" Definition STRING cd ( [\u0026lt;STRING folder\u0026gt;] )  Sets the current path of execution if folder was specified and returns it.\nNote that it is highly recommended to use chdir() for changing the current path of execution, as cd() will make Bennu crash when a folder is specified and the returned path of execution is used in the Bennu program. Just using cd() without a folder is not a problem.\nParameters  STRING folder - The folder to be entered from the current path of execution or a new path of execution.  Returns Example import \u0026quot;mod_dir\u0026quot; import \u0026quot;mod_say\u0026quot; import \u0026quot;mod_key\u0026quot; Process Main() Begin say(cd()); say(chdir(\u0026quot;..\u0026quot;)); say(cd()); Repeat frame; Until(key(_ESC)) End  Used in example: cd(), chdir(), say(), key()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd/","title":"cd()"},{"contents":" Definition cd_drives ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_drives/","title":"cd_drives()"},{"contents":" Definition cd_eject ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_eject/","title":"cd_eject()"},{"contents":" Definition cd_getinfo ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_getinfo/","title":"cd_getinfo()"},{"contents":" Definition cd_name ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_name/","title":"cd_name()"},{"contents":" Definition cd_pause ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_pause/","title":"cd_pause()"},{"contents":" Definition cd_play ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_play/","title":"cd_play()"},{"contents":" Definition cd_resume ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_resume/","title":"cd_resume()"},{"contents":" Definition cd_status ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_status/","title":"cd_status()"},{"contents":" Definition cd_stop ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cd_stop/","title":"cd_stop()"},{"contents":" Definition center_set ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/center_set/","title":"center_set()"},{"contents":" Definition INT chdir ( \u0026lt;STRING directoryname\u0026gt; )  Sets the current path of execution.\nParameters  STRING directoryname - The name of the directory to be entered from the current path of execution or a new path of execution.  Returns INT : Success\n 0 - Setting of current path of execution succeeded. !0 - Setting of current path of execution failed.  Example import \u0026quot;mod_dir\u0026quot; import \u0026quot;mod_say\u0026quot; import \u0026quot;mod_key\u0026quot; Process Main() Begin say(CD()); ChDir(\u0026quot;..\u0026quot;); say(CD()); Repeat frame; Until(key(_ESC)) End  Used in example: cd(), chdir(), say(), key()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/chdir/","title":"chdir()"},{"contents":" Definition STRING chr ( \u0026lt;BYTE ASCIIvalue\u0026gt; )  Returns the character associated with ASCIIvalue.\nParameters  BYTE ASCIIvalue - The ASCII value of which the character is wanted.  Returns STRING : The character associated with ASCIIvalue.\nExample Program chars; Begin write(0,0, 0,0,chr(65)); write(0,0,10,0,chr(67)); Repeat frame; Until(key(_esc)) End  Used in example: write(), key()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/chr/","title":"chr()"},{"contents":" Definition INT collision ( \u0026lt;INT processID|processTypeID\u0026gt; )  Checks if a process collided with the process calling collision().\nWhen a processTypeID is specified, there could be multiple fitting collisions. In this case, collision() returns a processID on each subsequent call, until it returns 0. This can be reset by use of the frame; statement, and in such case, frame(0); can be handy.\nSee also collision_box() and collision_circle().\nParameters  INT processID|processTypeID - The ProcessID of the process or the ProcessTypeID of the type of processes to be checked.  Returns INT : The ID of the collided process.\n 0 - No collision \u0026gt;0 - The processID of the process colliding with the current process  Example Process SpaceShip( int file , int graph , int x , int y , int angle , int maxspeed , int maxturnspeed ) Private int speed; int collisionID; string text; Begin write_string(0,0,0,0,\u0026amp;text); Loop // Handle movement speed+=key(_up)*(speed\u0026lt;maxspeed)-key(_down)*(speed\u0026gt;-maxspeed); angle+=(key(_left)-key(_right))*maxturnspeed; advance(speed); // Handle collision if( (collisionID = collision(type main))) text = \u0026quot;collision with: \u0026quot; + collisionID; else text = \u0026quot;no collision\u0026quot;; end frame; End End Process Main() Private int map; Begin // Create the graph for the ship map = map_new(20,20,8); map_clear(0,map,rgb(0,255,255)); // Create the graph for the Main process graph = map_new(50,50,8); map_clear(0,graph,rgb(255,255,0)); // Position the main process and create the ship x = y = z = 100; SpaceShip(0,map,100,100,0,20,5000); Repeat frame; Until(key(_ESC)) let_me_alone(); End  Used in example: write_string(), key(), collision(), map_new(), map_clear(), advance(), let_me_alone(), graph, type.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/collision/","title":"collision()"},{"contents":" Definition INT collision_box ( \u0026lt;INT processID|processTypeID\u0026gt; )  Checks if a process collided with the process calling collision_box().\nWhen a processTypeID is specified, there could be multiple fitting collisions. In this case, collision_box() returns a processID on each subsequent call, until it returns 0. This can be reset by use of the frame; statement, and in such case, frame(0); can be handy.\nThe diference between collision_box() and collision() is that collision_box() only checks the distance with the edges of the processes, on the other side collision() check pixel by pixel between these processes. Consequently, collision_box() is faster, but less accurate than collision().\nSee also collision() and collision_circle().\nParameters  INT processID|processTypeID - The ProcessID of the process or the ProcessTypeID of the type of processes to be checked.  Returns INT : The ID of the collided process.\n 0 - No collision \u0026gt;0 - The processID of the process colliding with the current process  Example Process SpaceShip( int file , int graph , int x , int y , int angle , int maxspeed , int maxturnspeed ) Private int speed; int collisionID; string text; Begin write_string(0,0,0,0,\u0026amp;text); Loop // Handle movement speed+=key(_up)*(speed\u0026lt;maxspeed)-key(_down)*(speed\u0026gt;-maxspeed); angle+=(key(_left)-key(_right))*maxturnspeed; advance(speed); // Handle collision_box if( (collisionID = collision_box(type main))) text = \u0026quot;collision with: \u0026quot; + collisionID; else text = \u0026quot;no collision\u0026quot;; end frame; End End Process Main() Private int map; Begin // Create the graph for the ship map = map_new(20,20,8); map_clear(0,map,rgb(0,255,255)); // Create the graph for the Main process graph = map_new(50,50,8); map_clear(0,graph,rgb(255,255,0)); // Position the main process and create the ship x = y = z = 100; SpaceShip(0,map,100,100,0,20,5000); Repeat frame; Until(key(_ESC)) let_me_alone(); End  Used in example: write_string(), key(), collision_box(), map_new(), map_clear(), advance(), let_me_alone(), graph, type.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/collision_box/","title":"collision_box()"},{"contents":" Definition INT collision_circle ( \u0026lt;INT processID|processTypeID\u0026gt; )  Checks if a process collided with the process calling collision_circle().\nWhen a processTypeID is specified, there could be multiple fitting collisions. In this case, collision_circle() returns a processID on each subsequent call, until it returns 0. This can be reset by use of the frame; statement, and in such case, frame(0); can be handy.\nThe diference between collision_circle() and collision() is that collision_circle() only checks the distance with a circle in the edges of the processes, on the other side collision() check pixel by pixel between these processes. Consequently, collision_circle() is faster, but less accurate than collision().\nSee also collision() and collision_box().\nParameters  INT processID|processTypeID - The ProcessID of the process or the ProcessTypeID of the type of processes to be checked.  Returns INT : The ID of the collided process.\n 0 - No collision \u0026gt;0 - The processID of the process colliding with the current process  Example Process SpaceShip( int file , int graph , int x , int y , int angle , int maxspeed , int maxturnspeed ) Private int speed; int collisionID; string text; Begin write_string(0,0,0,0,\u0026amp;text); Loop // Handle movement speed+=key(_up)*(speed\u0026lt;maxspeed)-key(_down)*(speed\u0026gt;-maxspeed); angle+=(key(_left)-key(_right))*maxturnspeed; advance(speed); // Handle collision_box if( (collisionID = collision_circle(type main))) text = \u0026quot;collision with: \u0026quot; + collisionID; else text = \u0026quot;no collision\u0026quot;; end frame; End End Process Main() Private int map; Begin // Create the graph for the ship map = map_new(20,20,8); map_clear(0,map,rgb(0,255,255)); // Create the graph for the Main process graph = map_new(50,50,8); map_clear(0,graph,rgb(255,255,0)); // Position the main process and create the ship x = y = z = 100; SpaceShip(0,map,100,100,0,20,5000); Repeat frame; Until(key(_ESC)) let_me_alone(); End  Used in example: write_string(), key(), collision_circle(), map_new(), map_clear(), advance(), let_me_alone(), graph, type.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/collision_circle/","title":"collision_circle()"},{"contents":" Definition color_find ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/color_find/","title":"color_find()"},{"contents":" Definition colors_get ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/colors_get/","title":"colors_get()"},{"contents":" Definition colors_set ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/colors_set/","title":"colors_set()"},{"contents":" Definition FLOAT cos ( \u0026lt;FLOAT angle\u0026gt; )  Returns the cosine of the specified angle.\nThis function performs a cosine calculation on a certain angle and returns a value between -1 and 1.\nParameters  FLOAT angle - Angle, in thousandths of degrees. i.e. 75000 = 75º  Returns FLOAT : The cosine result of the specified angle.\nNotes The angle value used in this function should be in thousandths of degrees, as most angles within Bennu are.\nTo read about all aspects of trigonometry, you can visit Wikipedia\u0026rsquo;s Trigonometric functions and atan2 pages.\nExample Const screen_width = 320; screen_height = 200; screen_border = 15; End Global float value; End Process Main() Begin // Modes set_title(\u0026quot;Cosine Graph\u0026quot;); set_mode(screen_width,screen_height); // X axis for(x=1;x\u0026lt;=8;x++) write( 0, screen_border+x*(screen_width-screen_border)/8+3, screen_height-1, 8, itoa(x*360/8 )+\u0026quot;^\u0026quot; ); end draw_line(1,screen_height-screen_border,screen_width,screen_height-screen_border); // Y axis write(0,screen_border-1,20,5,\u0026quot;1\u0026quot;); write(0,screen_border-1,screen_height/2,5,\u0026quot;0\u0026quot;); write(0,screen_border-1,screen_height-20,5,\u0026quot;-1\u0026quot;); draw_line(screen_border,1,screen_border,screen_height-1); // Draw tangent for(angle=0;angle\u0026lt;360;angle++) value=cos(angle*1000)*(screen_height/2-20); put_pixel( screen_border+angle*(screen_width-screen_border)/360, screen_height/2-value, rgb(255,255,255) ); // screen_height/2-value because the screen's origin (0,0) is topleft instead of downleft. end Repeat frame; Until(key(_ESC)) End  Used in example: set_title(), set_mode(), write(), draw_line(), cos(), put_pixel(), key().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/cos/","title":"cos()"},{"contents":" Definition crypt_decrypt ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/crypt_decrypt/","title":"crypt_decrypt()"},{"contents":" Definition crypt_del ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/crypt_del/","title":"crypt_del()"},{"contents":" Definition crypt_encrypt ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/crypt_encrypt/","title":"crypt_encrypt()"},{"contents":" Definition crypt_new ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/crypt_new/","title":"crypt_new()"},{"contents":" Definition delete_draw ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/delete_draw/","title":"delete_draw()"},{"contents":" Definition INT delete_text ( \u0026lt;INT TextID\u0026gt; )  Deletes a certain text from the screen.\nParameters INT TextID - TextID of the Text to be deleted.\nReturns INT true\nNotes delete_text(ALL_TEXT) deletes all text from the screen.\nExample Program test; Global my_text; Begin my_text = write(0,320/2,200/2,4,\u0026quot;Press space to delete this.\u0026quot;); Repeat if (key(_space)) if(my_text\u0026gt;0) delete_text(my_text); my_text = 0; end end Frame; Until(key(_esc)) End  Used in example: write(), key(), TextID\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/delete_text/","title":"delete_text()"},{"contents":" Definition INT dirclose ( \u0026lt;INT handleId\u0026gt; )  Close a directory using a given handle id obtained with diropen().\nParameters  INT handleId - The handle id of a directory.  Returns INT : The handle of the opened directory.\n 0 - There was an error. 1 - The directory was closed successfully.  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/dirclose/","title":"dirclose()"},{"contents":" Definition INT diropen ( \u0026lt;STRING folder\u0026gt; )  Open a directory for read it, returns handle id.\nParameters  STRING folder - The folder to open for read.  Returns (INT) The handle of the opened directory.\n 0 There was an error. \u0026gt;0 The handle of the opened directory.  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/diropen/","title":"diropen()"},{"contents":" Definition STRING dirread ( \u0026lt;INT handle\u0026gt; )  Given a path with wildcards ('*' or '?' characters), returns the first file that matches and, in every next call, all matching files found until no more files exists. It then returns NIL. Presumebly it\u0026rsquo;s somewhat similair to glob().\nAlso you can read multiple directories with different search criteria. This is usefull for filemanagers and dialogboxes, when you only want to list files of a specific type.\nParameters  INT handle - The id of the folder opened with diropen().  Returns STRING : The filename that matches with the wildcard search pattern.\nExample IMPORT \u0026quot;mod_dir\u0026quot;; IMPORT \u0026quot;mod_say\u0026quot;; IMPORT \u0026quot;mod_debug\u0026quot;; IMPORT \u0026quot;mod_key\u0026quot;; GLOBAL int dir_id[9]; string dir_result[9]; string directory1=\u0026quot;c:\\windows\\*.exe\u0026quot;; string directory2=\u0026quot;c:\\windows\\*.dll\u0026quot;; string directory3=\u0026quot;c:\\windows\\*.txt\u0026quot;; PROCESS main(); BEGIN dir_id[0]=diropen(directory1); dir_id[1]=diropen(directory2); dir_id[2]=diropen(directory3); /* print all exe files */ say(\u0026quot;\u0026quot;); say(\u0026quot;dirread test\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;the directory is: \u0026quot;+directory1); say(\u0026quot;\u0026quot;); say(\u0026quot;reading directory.....\u0026quot;); say(\u0026quot;\u0026quot;); REPEAT IF (key(_esc)) say(\u0026quot;\u0026lt;aborted\u0026gt;\u0026quot;); BREAK; END // read the dir dir_result[0]=dirread(dir_id[0]); say(dir_result[0]); FRAME; UNTIL (dir_result[0]==\u0026quot;\u0026quot;) /* print all dll files */ say(\u0026quot;\u0026quot;); say(\u0026quot;dirread test\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;the directory is: \u0026quot;+directory2); say(\u0026quot;\u0026quot;); say(\u0026quot;reading directory.....\u0026quot;); say(\u0026quot;\u0026quot;); REPEAT IF (key(_esc)) say(\u0026quot;\u0026lt;aborted\u0026gt;\u0026quot;); BREAK; END // read the dir dir_result[1]=dirread(dir_id[1]); say(dir_result[1]); FRAME; UNTIL (dir_result[1]==\u0026quot;\u0026quot;) /* print all txt files */ say(\u0026quot;\u0026quot;); say(\u0026quot;dirread test\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;the directory is: \u0026quot;+directory3); say(\u0026quot;\u0026quot;); say(\u0026quot;reading directory.....\u0026quot;); say(\u0026quot;\u0026quot;); REPEAT IF (key(_esc)) say(\u0026quot;\u0026lt;aborted\u0026gt;\u0026quot;); BREAK; END // read the dir dir_result[2]=dirread(dir_id[2]); say(dir_result[2]); FRAME; UNTIL (dir_result[2]==\u0026quot;\u0026quot;) say(\u0026quot;closing the directory\u0026quot;); dirclose(dir_id[0]); dirclose(dir_id[1]); dirclose(dir_id[2]); END  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/dirread/","title":"dirread()"},{"contents":" Definition draw_box ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/draw_box/","title":"draw_box()"},{"contents":" Definition draw_circle ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/draw_circle/","title":"draw_circle()"},{"contents":" Definition draw_curve ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/draw_curve/","title":"draw_curve()"},{"contents":" Definition draw_fcircle ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/draw_fcircle/","title":"draw_fcircle()"},{"contents":" Definition draw_line ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/draw_line/","title":"draw_line()"},{"contents":" Definition draw_rect ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/draw_rect/","title":"draw_rect()"},{"contents":" Definition drawing_alpha ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/drawing_alpha/","title":"drawing_alpha()"},{"contents":" Definition drawing_color ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/drawing_color/","title":"drawing_color()"},{"contents":" Definition drawing_map ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/drawing_map/","title":"drawing_map()"},{"contents":" Definition drawing_stipple ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/drawing_stipple/","title":"drawing_stipple()"},{"contents":" Definition drawing_z ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/drawing_z/","title":"drawing_z()"},{"contents":" Definition end_fli ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/end_fli/","title":"end_fli()"},{"contents":" Definition exec ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/exec/","title":"exec()"},{"contents":" Definition INT Exists ( \u0026lt;INT processID|processTypeID\u0026gt; )  Checks if a process is alive, using its processID or checks if there is a process alive of a certain processType, using its processTypeID.\nParameters  INT processID|processTypeID - The ProcessID of the process or the ProcessTypeID of the type of processes to be checked.  Returns INT : The result of the check\n 0 (false) - The process with given processID is not alive or there are no processes alive of the given processTypeID. 1 (true) - The process with given processID is alive or there is at least one process alive of the given processTypeID.  Example import \u0026quot;mod_proc\u0026quot; import \u0026quot;mod_say\u0026quot; Process Main() Begin Proc(); if(exists(id)) say(\u0026quot;I exist! (id)\u0026quot;); end if(exists(0)) say(\u0026quot;0 exists!\u0026quot;); else say(\u0026quot;0 doesn't exist!\u0026quot;); end if(exists(type proc)) say(\u0026quot;1- Proc exists!\u0026quot;); else say(\u0026quot;1- Proc doesn't exist!\u0026quot;); end let_me_alone(); if(exists(type proc)) say(\u0026quot;2- Proc exists!\u0026quot;); else say(\u0026quot;2- Proc doesn't exist!\u0026quot;); end End Process Proc() Begin Loop frame; End End  Used in example: exists(), say(), let_me_alone().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/exists/","title":"exists()"},{"contents":" Definition INT exit ( [\u0026lt;STRING message\u0026gt;] , [\u0026lt;INT code\u0026gt;] )  Exits the program. It can optionally pass a message or an error code thing.\nParameters  [STRING message] - A message to pass outside the program as it exits. [INT code] - A code to pass outside the program as it exits.  Returns INT true\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/exit/","title":"exit()"},{"contents":" Definition fade ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fade/","title":"fade()"},{"contents":" Definition fade_music_in ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fade_music_in/","title":"fade_music_in()"},{"contents":" Definition fade_music_off ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fade_music_off/","title":"fade_music_off()"},{"contents":" Definition fade_off ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fade_off/","title":"fade_off()"},{"contents":" Definition fade_on ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fade_on/","title":"fade_on()"},{"contents":" Definition fclose ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fclose/","title":"fclose()"},{"contents":" Definition feof ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/feof/","title":"feof()"},{"contents":" Definition fexists ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fexists/","title":"fexists()"},{"contents":" Definition fflush ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fflush/","title":"fflush()"},{"contents":" Definition INT fget_angle ( \u0026lt;INT pointA-X\u0026gt; , \u0026lt;INT pointA-Y\u0026gt; , \u0026lt;INT pointB-X\u0026gt; , \u0026lt;INT pointB-Y\u0026gt; )  Returns the angle between two certain points. The returned angle will be ranging from 0 to 360000 (0-360º).\nParameters  INT pointA-X - The X-coordinate of point A. INT pointA-Y - The Y-coordinate of point A. INT pointB-X - The X-coordinate of point B. INT pointB-Y - The Y-coordinate of point B.  Returns INT : The angle between point A and point B.\nNotes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.\nExample Const screen_width = 320; screen_height = 200; screen_depth = 8; screen_fps = 60; screen_frameskip = 0; End Global int distance; int tempID; End Process Main() Begin // Set the screen mode set_mode(screen_width,screen_height,screen_depth); set_fps(screen_fps,screen_frameskip); // Change this to see what happens resolution = 100; // Create mouse graph, assign to mouse.graph mouse.graph = new_map(20,20,screen_depth); map_clear(0,mouse.graph,rgb(255,0,0)); // Create arrow, assign to graph graph = new_map(30,30,screen_depth); drawing_map(0,graph); drawing_color(rgb(0,255,0)); draw_line( 0,29,29,30/2); draw_line( 0, 0,30,30/2); // Set position x = screen_width /2 * resolution; y = screen_height/2 * resolution; // Display distance write(0,0,0,0,\u0026quot;Distance:\u0026quot;); write_int(0,60,0,0,\u0026amp;distance); // Always point to the mouse Repeat // Get the angle and distance between this process' coordinates and those of the mouse. angle = fget_angle(x,y,mouse.x*resolution,mouse.y*resolution); distance = fget_dist (x,y,mouse.x*resolution,mouse.y*resolution); frame; Until(key(_esc)) End  Used in example: set_mode(), new_map(), map_clear(), drawing_map(), drawing_color(), draw_line(), write(), write_int(), fget_angle(), fget_dist(), resolution, mouse, graph, x, y, angle.\nThis example could also be done with get_angle(), but that would be more work.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fget_angle/","title":"fget_angle()"},{"contents":" Definition INT fget_dist ( \u0026lt;INT pointA-X\u0026gt; , \u0026lt;INT pointA-Y\u0026gt; , \u0026lt;INT pointB-X\u0026gt; , \u0026lt;INT pointB-Y\u0026gt; )  Parameters  INT pointA-X - The X-coordinate of point A. INT pointA-Y - The Y-coordinate of point A. INT pointB-X - The X-coordinate of point B. INT pointB-Y - The Y-coordinate of point B.  Returns INT : The distance between point A and point B.\nExample Program angling; Const screen_width = 320; screen_height = 200; screen_depth = 8; screen_fps = 60; screen_frameskip = 0; Global int distance; int tempID; Begin // Set the screen mode set_mode(screen_width,screen_height,screen_depth); set_fps(screen_fps,screen_frameskip); // Change this to see what happens resolution = 100; // Create mouse graph, assign to mouse.graph mouse.graph = new_map(20,20,screen_depth); map_clear(0,mouse.graph,rgb(255,0,0)); // Create arrow, assign to graph graph = new_map(30,30,screen_depth); drawing_map(0,graph); drawing_color(rgb(0,255,0)); draw_line( 0,29,29,30/2); draw_line( 0, 0,30,30/2); // Set position x = screen_width /2 * resolution; y = screen_height/2 * resolution; // Display distance write(0,0,0,0,\u0026quot;Distance:\u0026quot;); write_int(0,60,0,0,\u0026amp;distance); // Always point to the mouse Repeat // Get the angle and distance between this process' coordinates and those of the mouse. angle = fget_angle(x,y,mouse.x*resolution,mouse.y*resolution); distance = fget_dist (x,y,mouse.x*resolution,mouse.y*resolution); frame; Until(key(_esc)) End  Used in example: set_mode(), new_map(), map_clear(), drawing_map(), drawing_color(), draw_line(), write(), write_int(), fget_angle(), fget_dist(), resolution, mouse, graph, x, y, angle\nThis example could also be done with get_dist(), but that would be more work. It also gives a much less accurate distance when the resolution is \u0026gt;1.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fget_dist/","title":"fget_dist()"},{"contents":" Definition fgets ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fgets/","title":"fgets()"},{"contents":" Definition file ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/file/","title":"file()"},{"contents":" Definition filter ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/filter/","title":"filter()"},{"contents":" Definition NT find ( \u0026lt;STRING str\u0026gt; , \u0026lt;STRING searchstring\u0026gt; , [\u0026lt;INT startposition\u0026gt;] )  Returns the position of the firstly found appearance of a searchstring in str or -1 if not found. The starting position can be specified optionally.\nParameters  STRING str - The string in which to search. STRING searchstring - The string to search for. [INT startposition] - The position at which to start searching. Default is 0.  Returns INT : The position of the firstly found appearance of searchstring in str or -1 if not found.\nExample In this example there\u0026rsquo;s a very long string in wich we\u0026rsquo;re going to look for 10 strings. Some of these are found (when the result is \u0026gt; -1), and others are deliberately bogus to show how you can detect if a string is not found. What you\u0026rsquo;ll see, is that when you specify a start position greater then 0, and the word exists but your start position is behind the actual position of the first character of the word you\u0026rsquo;re looking for, the function returns -1 (no match). If you specify 0 (the start of the string), you\u0026rsquo;ll be safe, because it will return the fist occurance of the word or character when it exists in the string.\nAs you can see, the working of the find function works very similarly to the find and search/replace function that you get in most text editors.\n#IFdef __VERSION__ IMPORT \u0026quot;mod_video\u0026quot;; IMPORT \u0026quot;mod_text\u0026quot;; IMPORT \u0026quot;mod_say\u0026quot;; IMPORT \u0026quot;mod_key\u0026quot;; IMPORT \u0026quot;mod_string\u0026quot;; IMPORT \u0026quot;mod_proc\u0026quot;; IMPORT \u0026quot;mod_map\u0026quot;; IMPORT \u0026quot;mod_draw\u0026quot;; IMPORT \u0026quot;mod_debug\u0026quot;; IMPORT \u0026quot;mod_sys\u0026quot;; IMPORT \u0026quot;mod_wm\u0026quot;; #ENDIF GLOBAL /* this is the big string in wich we're going to try the find() function on with a couple of tests. */ string string_to_find_in = \u0026quot;hello, world! this is a very long string in wich the 'find' function must find another string. let's try a few things.\u0026quot;; /* these are the strings we're going to test. */ string search_string0 = \u0026quot;wich\u0026quot;; string search_string1 = \u0026quot;wich\u0026quot;; string search_string2 = \u0026quot;.\u0026quot;; string search_string3 = \u0026quot;str\u0026quot;; string search_string4 = \u0026quot;hello\u0026quot;; string search_string5 = \u0026quot;find\u0026quot;; string search_string6 = \u0026quot;i don't exist in the string\u0026quot;; string search_string7 = \u0026quot;me neither\u0026quot;; string search_string8 = \u0026quot;must\u0026quot;; string search_string9 = \u0026quot;a\u0026quot;; /* return values for the tests. a return value of \u0026quot;-1\u0026quot; means that the string could not be found. */ int find_result0; int find_result1; int find_result2; int find_result3; int find_result4; int find_result5; int find_result6; int find_result7; int find_result8; int find_result9; /* we store the find positions here. */ int find_pos0; int find_pos1; int find_pos2; int find_pos3; int find_pos4; int find_pos5; int find_pos6; int find_pos7; int find_pos8; int find_pos9; PRIVATE PROCESS main (); PRIVATE BEGIN /* experiment with these to try different results. */ find_pos0 = 0; find_pos1 = 45; find_pos2 = 118; find_pos3 = 0; find_pos4 = 0; find_pos5 = 70; find_pos6 = 0; find_pos7 = 0; find_pos8 = 94; find_pos9 = 94; /* INT find ( \u0026lt;STRING str\u0026gt; , \u0026lt;STRING searchstring\u0026gt; , [\u0026lt;INT startposition\u0026gt;] ); */ find_result0 = find (string_to_find_in, search_string0, find_pos0); /* search_string0 = \u0026quot;wich\u0026quot;; */ find_result1 = find (string_to_find_in, search_string1, find_pos1); /* search_string1 = \u0026quot;wich\u0026quot;; */ find_result2 = find (string_to_find_in, search_string2, find_pos2); /* search_string2 = \u0026quot;.\u0026quot;; */ find_result3 = find (string_to_find_in, search_string3, find_pos3); /* search_string3 = \u0026quot;str\u0026quot;; */ find_result4 = find (string_to_find_in, search_string4, find_pos4); /* search_string4 = \u0026quot;hello\u0026quot;; */ find_result5 = find (string_to_find_in, search_string5, find_pos5); /* search_string5 = \u0026quot;find\u0026quot;; */ find_result6 = find (string_to_find_in, search_string6, find_pos6); /* search_string6 = \u0026quot;i don't exist in the string\u0026quot;; */ find_result7 = find (string_to_find_in, search_string7, find_pos7); /* search_string7 = \u0026quot;me neither\u0026quot;; */ find_result8 = find (string_to_find_in, search_string8, find_pos8); /* search_string8 = \u0026quot;must\u0026quot;; */ find_result9 = find (string_to_find_in, search_string9, find_pos9); /* search_string9 = \u0026quot;a\u0026quot;; */ /* \u0026quot;hello, world! this is a very long string in wich the 'find' function must find another string. let's try a few things.\u0026quot;; | | char pos:0 118 */ /* display the results in the console. */ say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string0+\u0026quot;'\u0026quot;); say (\u0026quot;search_string0 result: \u0026quot;+find_result0); IF (find_result0 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string0+\u0026quot;' at the indicated position: \u0026quot;+find_pos0); ELSE say (\u0026quot;'\u0026quot;+search_string0+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result0); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string1+\u0026quot;'\u0026quot;); say (\u0026quot;search_string1 result: \u0026quot;+find_result1); IF (find_result1 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string1+\u0026quot;' at the indicated position: \u0026quot;+find_pos1); ELSE say (\u0026quot;'\u0026quot;+search_string1+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result1); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string2+\u0026quot;'\u0026quot;); say (\u0026quot;search_string2 result: \u0026quot;+find_result2); IF (find_result2 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string2+\u0026quot;' at the indicated position: \u0026quot;+find_pos2); ELSE say (\u0026quot;'\u0026quot;+search_string2+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result2); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string3+\u0026quot;'\u0026quot;); say (\u0026quot;search_string3 result: \u0026quot;+find_result3); IF (find_result3 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string3+\u0026quot;' at the indicated position: \u0026quot;+find_pos3); ELSE say (\u0026quot;'\u0026quot;+search_string3+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result3); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string4+\u0026quot;'\u0026quot;); say (\u0026quot;search_string4 result: \u0026quot;+find_result4); IF (find_result4 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string4+\u0026quot;' at the indicated position: \u0026quot;+find_pos4); ELSE say (\u0026quot;'\u0026quot;+search_string4+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result4); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string5+\u0026quot;'\u0026quot;); say (\u0026quot;search_string5 result: \u0026quot;+find_result5); IF (find_result5 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string5+\u0026quot;' at the indicated position: \u0026quot;+find_pos5); ELSE say (\u0026quot;'\u0026quot;+search_string5+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result5); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string6+\u0026quot;'\u0026quot;); say (\u0026quot;search_string6 result: \u0026quot;+find_result6); IF (find_result6 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string6+\u0026quot;' at the indicated position: \u0026quot;+find_pos6); ELSE say (\u0026quot;'\u0026quot;+search_string6+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result6); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string7+\u0026quot;'\u0026quot;); say (\u0026quot;search_string7 result: \u0026quot;+find_result7); IF (find_result7 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string7+\u0026quot;' at the indicated position: \u0026quot;+find_pos7); ELSE say (\u0026quot;'\u0026quot;+search_string7+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result7); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string8+\u0026quot;'\u0026quot;); say (\u0026quot;search_string8 result: \u0026quot;+find_result8); IF (find_result8 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string8+\u0026quot;' at the indicated position: \u0026quot;+find_pos8); ELSE say (\u0026quot;'\u0026quot;+search_string8+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result8); END say(\u0026quot;\u0026quot;); say(\u0026quot;looking for: '\u0026quot;+search_string9+\u0026quot;'\u0026quot;); say (\u0026quot;search_string9 result: \u0026quot;+find_result9); IF (find_result9 == -1) say (\u0026quot;no match for: '\u0026quot;+search_string9+\u0026quot;' at the indicated position: \u0026quot;+find_pos9); ELSE say (\u0026quot;'\u0026quot;+search_string9+\u0026quot;'\u0026quot;+\u0026quot; found at position: \u0026quot;+find_result9); END END  Notes A first character of a string is at position 0.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/find/","title":"find()"},{"contents":" Definition INT Finite ( \u0026lt;FLOAT number\u0026gt; )  Checks if a given value is a finite number. This function is the opposite of the isinf() function.\nIt does not check for Not-A-Numbers. Use the isnan() function for that.\nParameters  FLOAT number - The value to check.  Returns INT : The result of the check\n 0 (false) - The value is an infinity. !0 (true) - The value is a finite number.  See also Wikipedia page about the mathematical subject infinity.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/finite/","title":"finite()"},{"contents":" Definition flength ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/flength/","title":"flength()"},{"contents":" Definition fli_angle ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_angle/","title":"fli_angle()"},{"contents":" Definition fli_end ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_end/","title":"fli_end()"},{"contents":" Definition fli_flags ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_flags/","title":"fli_flags()"},{"contents":" Definition fli_frame ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_frame/","title":"fli_frame()"},{"contents":" Definition fli_getinfo ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_getinfo/","title":"fli_getinfo()"},{"contents":" Definition fli_move ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_move/","title":"fli_move()"},{"contents":" Definition fli_params ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_params/","title":"fli_params()"},{"contents":" Definition fli_reset ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_reset/","title":"fli_reset()"},{"contents":" Definition fli_size ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_size/","title":"fli_size()"},{"contents":" Definition fli_start ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_start/","title":"fli_start()"},{"contents":" Definition fli_z ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fli_z/","title":"fli_z()"},{"contents":" Definition fmove ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fmove/","title":"fmove()"},{"contents":" Definition fnt_load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fnt_load/","title":"fnt_load()"},{"contents":" Definition fnt_new ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fnt_new/","title":"fnt_new()"},{"contents":" Definition fnt_save ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fnt_save/","title":"fnt_save()"},{"contents":" Definition fnt_unload ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fnt_unload/","title":"fnt_unload()"},{"contents":" Definition fopen ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fopen/","title":"fopen()"},{"contents":" Definition STRING format ( \u0026lt;INT number\u0026gt; ) STRING format ( \u0026lt;FLOAT number\u0026gt; ) STRING format ( \u0026lt;FLOAT number\u0026gt;, \u0026lt;INT number\u0026gt;)  Formats nummerical data for use in a string. There are three variants of this function, the first one only formats integers, the second one a floating point number, and the third one uses a fixed number of decimals, as given with the second parameter.\nParameters  INT str - The number to format. FLOAT str - The decimal number to format.  Returns STRING : The string with the fomatted number.\nExample // import modules IMPORT \u0026quot;mod_say\u0026quot;; IMPORT \u0026quot;mod_debug\u0026quot;; IMPORT \u0026quot;mod_string\u0026quot;; GLOBAL int count=400000; float count2=2.50000; float count3=456.0000; PROCESS main(); BEGIN say(\u0026quot;format test.\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;\u0026quot;); say(format(count)); say(format(count2)); say(format(count3)); say(format(count2,0)); say(format(count2,1)); say(format(count2,2)); say(format(count2,3)); say(format(count3,0)); say(format(count3,1)); say(format(count3,2)); say(format(count3,3)); END  The program outputs this list:\n400,000 2.500000 456.000000 3 2.5 2.50 2.500 456 456.0 456.00 456.000  Notes The format function seems to like US number formats, even on a european machine.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/format/","title":"format()"},{"contents":" Definition fpg_add ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fpg_add/","title":"fpg_add()"},{"contents":" Definition fpg_del ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fpg_del/","title":"fpg_del()"},{"contents":" Definition fpg_exists ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fpg_exists/","title":"fpg_exists()"},{"contents":" Definition fpg_load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fpg_load/","title":"fpg_load()"},{"contents":" Definition fpg_new ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fpg_new/","title":"fpg_new()"},{"contents":" Definition fpg_save ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fpg_save/","title":"fpg_save()"},{"contents":" Definition fpg_unload ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fpg_unload/","title":"fpg_unload()"},{"contents":" Definition fputs ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fputs/","title":"fputs()"},{"contents":" Definition frame_fli ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/frame_fli/","title":"frame_fli()"},{"contents":" Definition fread ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fread/","title":"fread()"},{"contents":" Definition free ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/free/","title":"free()"},{"contents":" Definition fremove ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fremove/","title":"fremove()"},{"contents":" Definition frewind ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/frewind/","title":"frewind()"},{"contents":" Definition fseek ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fseek/","title":"fseek()"},{"contents":" Definition ftell ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ftell/","title":"ftell()"},{"contents":" Definition ftime ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ftime/","title":"ftime()"},{"contents":" Definition STRING ftoa ( \u0026lt;FLOAT value\u0026gt; )  Returns a string containing a certain float value.\nParameters  FLOAT value - The value the returned string will contain.  Returns STRING : The string containing the specified value, including sign and decimal point.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ftoa/","title":"ftoa()"},{"contents":" Definition fwrite ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/fwrite/","title":"fwrite()"},{"contents":" Definition INT get_angle ( \u0026lt;INT processID\u0026gt; )  Returns the angle between the coordinates of a certain process and the process calling get_angle().\nParameters  INT processID - The other process.  Returns INT : The wanted angle.\n -1 - An error may have occurred: invalid process. !-1 - The wanted angle.  Example Program angling; import \u0026quot;mod_grproc\u0026quot;//modules import \u0026quot;mod_proc\u0026quot; import \u0026quot;mod_wm\u0026quot; import \u0026quot;mod_key\u0026quot; import \u0026quot;mod_video\u0026quot; import \u0026quot;mod_map\u0026quot; import \u0026quot;mod_draw\u0026quot; import \u0026quot;mod_text\u0026quot; Const screen_width = 320; screen_height = 200; screen_depth = 8; screen_fps = 60; screen_frameskip = 0; Global int distance; int tempID; Begin // Set the screen mode set_mode(screen_width,screen_height,screen_depth); set_fps(screen_fps,screen_frameskip); // Change this to see what happens resolution = 100; // Create mouse graph and start mousepointer x = map_new(20,20,screen_depth); map_clear(0,x,rgb(255,0,0)); mousepointer(0,x); // Create arrow, assign to graph graph = map_new(30,30,screen_depth); drawing_map(0,graph); drawing_color(rgb(0,255,0)); draw_line( 0,29,29,30/2); draw_line( 0, 0,30,30/2); // Set position x = screen_width /2 * resolution; y = screen_height/2 * resolution; // Display distance write(0,0,0,0,\u0026quot;Distance:\u0026quot;); write_int(0,60,0,0,\u0026amp;distance); // Always point to the mouse Repeat // Get the angle and distance between this process' coordinates and those of mousegraph. // We can use TYPE and get_id() here, because usually there would only be one // mousepointer and one always. tempID = get_id(type mousepointer); angle = get_angle(tempID); distance = get_dist(tempID); frame; Until(key(_esc)) End /** * Follows the mouse coordinates. x is always mouse.x and y is always mouse.y * for processes with priority \u0026lt;1. The graphic of this process will be a certain graphic. * int file - The fileID of the file where the graphic is located * int graph - The graphID of the graphic to be used for this process */ Process mousepointer(int file,int graph) Begin // Set the priority to 1, because we first want to have the correct coordinates of // the mouse set in this process. Then after that other process can use those coordinates. priority = 1; // Obtain father's resolution resolution = father.resolution; // Loop Loop // Obtain X and Y coordinates of the mouse and adjust for resolution // (mouse.y and mouse.y have an unchangeable resolution of 1) x = mouse.x * resolution; y = mouse.y * resolution; frame; End End  Used in example: set_mode(), map_new(), map_clear(), drawing_map(), drawing_color(), draw_line(), write(), write_int(), get_id(), get_angle(), get_dist(),resolution, mouse, graph, x, y, angle, priority\nThis example could also be done with fget_angle(), which is easier and doesn\u0026rsquo;t require an extra process.\n It could look something like: http://wwwhome.cs.utwente.nl/~bergfi/fenix/wiki/get_angle.PNG\n ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_angle/","title":"get_angle()"},{"contents":" Definition get_desktop_size ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_desktop_size/","title":"get_desktop_size()"},{"contents":" Definition INT get_dist ( \u0026lt;INT processID\u0026gt; )  Returns the distance between the coordinates of a certain process and the process calling get_dist().\nThe distance returned is converted to the resolution of the process calling get_dist().\nParameters  INT processID - The other process.  Returns INT : The wanted distance.\n -1 - An error occurred: invalid process. !-1 - The wanted distance.  Example Program angling; Const screen_width = 320; screen_height = 200; screen_depth = 8; screen_fps = 60; screen_frameskip = 0; Global int distance; int tempID; Begin // Set the screen mode set_mode(screen_width,screen_height,screen_depth); set_fps(screen_fps,screen_frameskip); // Change this to see what happens resolution = 100; // Create mouse graph and start mousepointer x = map_new(20,20,screen_depth); map_clear(0,x,rgb(255,0,0)); mousepointer(0,x); // Create arrow, assign to graph graph = map_new(30,30,screen_depth); drawing_map(0,graph); drawing_color(rgb(0,255,0)); draw_line( 0,29,29,30/2); draw_line( 0, 0,30,30/2); // Set position x = screen_width /2 * resolution; y = screen_height/2 * resolution; // Display distance write(0,0,0,0,\u0026quot;Distance:\u0026quot;); write_int(0,60,0,0,\u0026amp;distance); // Always point to the mouse Repeat // Get the angle and distance between this process' coordinates and those of mousegraph. // We can use TYPE and get_id() here, because usually there would only be one // mousepointer and one always. tempID = get_id(type mousepointer); angle = get_angle(tempID); distance = get_dist(tempID); frame; Until(key(_esc)) End /** * Follows the mouse coordinates. x is always mouse.x and y is always mouse.y * for processes with priority \u0026lt;1. The graphic of this process will be a certain graphic. * int file - The fileID of the file where the graphic is located * int graph - The graphID of the graphic to be used for this process */ Process mousepointer(int file,int graph) Begin // Set the priority to 1, because we first want to have the correct coordinates of // the mouse set in this process. Then after that other process can use those coordinates. priority = 1; // Obtain father's resolution resolution = father.resolution; // Loop Loop // Obtain X and Y coordinates of the mouse and adjust for resolution // (mouse.y and mouse.y have an unchangeable resolution of 1) x = mouse.x * resolution; y = mouse.y * resolution; frame; End End  Used in example: set_mode(), map_new(), map_clear(), drawing_map(), drawing_color(), draw_line(), write(), write_int(), get_id(), get_angle(), get_dist(),resolution, mouse, graph, x, y, angle, priority\nThis example could also be done with fget_dist(), which is easier and doesn\u0026rsquo;t require an extra process. It also give a much more accurate distance when the resolution is \u0026gt;1.\n Resolution is 100: http://wwwhome.cs.utwente.nl/~bergfi/fenix/wiki/get_angle.PNG VS http://wwwhome.cs.utwente.nl/~bergfi/fenix/wiki/fget_angle.PNG get_angle() and get_dist() with a process fget_angle() and fget_dist()\n ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_dist/","title":"get_dist()"},{"contents":" Definition INT get_distx ( \u0026lt;INT angle\u0026gt; , \u0026lt;INT distance\u0026gt; )  Returns the horizontal distance in pixels of a specified displacement.\nThis is the same as cos(angle) * distance.\nParameters  INT angle - Angle, in thousandths of degrees (90° = 90000). INT distance - Length (in pixels) to measure.  Returns INT : The horizontal distance, in pixels, of a specified displacement.\nNotes This function returns the width of an imaginary rectangle who\u0026rsquo;s opposite corners are the specified distance apart, at the specified angle from each other.\nExample Global xdist; ydist; dist; ang; mydraw; End Process Main() Begin set_mode(640,480,16); set_fps (50,0); graph = new_map(3,3,16); map_clear(0,graph,rgb(0,255,0)); x = 320; y = 240; set_text_color(rgb(0,0,0)); write (0,60, 0,2,\u0026quot;X Diff: \u0026quot;); write_int(0,60, 0,0,\u0026amp;xdist); write (0,60,10,2,\u0026quot;Y Diff: \u0026quot;); write_int(0,60,10,0,\u0026amp;ydist); write (0,60,20,2,\u0026quot;Angle: \u0026quot;); write_int(0,60,20,0,\u0026amp;ang); write (0,60,30,2,\u0026quot;Distance: \u0026quot;); write_int(0,60,30,0,\u0026amp;dist); write (0,10,40,0,\u0026quot;Left/right rotates your angle, up/down changes your distance\u0026quot;); put(0,graph,x,y); drawing_background(); repeat if(key(_up)) dist++; end if(key(_down)) dist--; end if(key(_left)) ang-=1000; end if(key(_right)) ang+=1000; end xdist = get_distx(ang,dist); ydist = get_disty(ang,dist); x = 320 + xdist; y = 240 + ydist; frame; until(key(_esc)) let_me_alone(); exit(); End Process drawing_background() Begin graph = new_map(640,480,16); set_ceter (0,graph,0,0); map_clear (0,graph,rgb(64,0,0)); drawing_map (0,graph); drawing_color(rgb(0,0,0)); loop map_clear(0,graph,rgb(255,255,255)); mydraw = draw_line(320,240,father.x,father.y); frame; delete_draw(mydraw); end OnExit unload_map(0,graph); End  Used in example: set_mode(), set_fps(), new_map(), set_text_color(), write(), write_int(), put(), key(), get_distx(), get_disty(), let_me_alone(), exit(), set_center(), map_clear(), rgb(), drawing_map(), drawing_color(), draw_line(), delete_draw(), unload_map().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_distx/","title":"get_distx()"},{"contents":" Definition INT get_disty ( \u0026lt;INT angle\u0026gt; , \u0026lt;INT distance\u0026gt; )  Returns the vertical distance in pixels of a specified displacement.\nThis is the same as -sin(angle) * distance.\nParameters  INT angle - Angle, in thousandths of degrees (90° = 90000). INT distance - Length (in pixels) to measure.  Returns INT : The vertical distance, in pixels, of a specified displacement.\nNotes This function returns the height of an imaginary rectangle who\u0026rsquo;s opposite corners are the specified distance apart, at the specified angle from each other.\nExample Global xdist; ydist; dist; ang; mydraw; End Process Main() Begin set_mode(640,480,16); set_fps (50,0); graph = new_map(3,3,16); map_clear(0,graph,rgb(0,255,0)); x = 320; y = 240; set_text_color(rgb(0,0,0)); write (0,60, 0,2,\u0026quot;X Diff: \u0026quot;); write_int(0,60, 0,0,\u0026amp;xdist); write (0,60,10,2,\u0026quot;Y Diff: \u0026quot;); write_int(0,60,10,0,\u0026amp;ydist); write (0,60,20,2,\u0026quot;Angle: \u0026quot;); write_int(0,60,20,0,\u0026amp;ang); write (0,60,30,2,\u0026quot;Distance: \u0026quot;); write_int(0,60,30,0,\u0026amp;dist); write (0,10,40,0,\u0026quot;Left/right rotates your angle, up/down changes your distance\u0026quot;); put(0,graph,x,y); drawing_background(); repeat if(key(_up)) dist++; end if(key(_down)) dist--; end if(key(_left)) ang-=1000; end if(key(_right)) ang+=1000; end xdist = get_distx(ang,dist); ydist = get_disty(ang,dist); x = 320 + xdist; y = 240 + ydist; frame; until(key(_esc)) let_me_alone(); exit(); End Process drawing_background() Begin graph = new_map(640,480,16); set_ceter (0,graph,0,0); map_clear (0,graph,rgb(64,0,0)); drawing_map (0,graph); drawing_color(rgb(0,0,0)); loop map_clear(0,graph,rgb(255,255,255)); mydraw = draw_line(320,240,father.x,father.y); frame; delete_draw(mydraw); end OnExit unload_map(0,graph); End  Used in example: set_mode(), set_fps(), new_map(), set_text_color(), write(), write_int(), put(), key(), get_distx(), get_disty(), let_me_alone(), exit(), set_center(), map_clear(), rgb(), drawing_map(), drawing_color(), draw_line(), delete_draw(), unload_map()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_disty/","title":"get_disty()"},{"contents":" Definition INT get_id ( \u0026lt;INT processTypeID\u0026gt; )  Returns a ProcessID of a process of the specified ProcessType. On the next call of get_id() in the same process and in the same frame, the next process will be returned of the given type. After a frame statement, get_id() is reset and will return the first process of the given processType. When there are no more processes of a given type, which have not been returned, it will return 0.\nget_id(0) returns processes of any type.\nParameters  INT processTypeID - The ProcessTypeID of the ProcessType to get the processes\u0026rsquo; ProcessID of.  Returns INT : The ProcessID of a process of the given ProcessType.\n 0 - There are no more processes of the given processType, which have not been returned. \u0026gt;0 - The processID of a process of the given processType.  Example Program example; Begin signaltype(type Monkey,s_kill); End /** * Empty process */ Process Monkey() Begin End /** * Signals every process of type 't' the signal 'signal'. */ Function int signaltype(int t, int signal) Begin while( (x=get_id(t)) ) // while there is an unprocessed process left and store that in 'x' signal(x,signal); // signal the process with processID 'x'. end End // Of course, the very observant of you already noticed that signaltype(my_type,my_signal) // does the same thing as the function signal(my_type,my_signal), but this is just to // illustrate the workings. /** * Signals every process the signal 'signal'. */ Function int signalall(int signal) Begin while( (x=get_id(0)) ) // while there is an unprocessed process left and store that in 'x' signal(x,signal); // signal the process with processID 'x'. end End // get_id(0) returns a process of any type. This is a possible implementation of a // function which signals all existing processes. Note that this can be dangerous to use, // as in some cases you might want one or two processes to stay alive.  Used in example: signal().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_id/","title":"get_id()"},{"contents":" Definition get_joy_position ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_joy_position/","title":"get_joy_position()"},{"contents":" Definition get_modes ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_modes/","title":"get_modes()"},{"contents":" Definition get_pixel ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_pixel/","title":"get_pixel()"},{"contents":" Definition INT get_real_point( \u0026lt;INT controlpoint\u0026gt; , \u0026lt;INT POINTER x\u0026gt; , \u0026lt;INT POINTER y\u0026gt; )  Finds the actual position on the screen of the calling process, given its graphic and the specified control point on this graphic. All process-related variables are taken into account, like x, y, angle, even ctype. These coordinates are then assigned to the variables pointed to by x and y.\nParameters  INT controlpoint - The controlpoint on the process\u0026rsquo; graphic of which the actual position is wanted. INT POINTER x - A pointer to an integer to which the X-coordinate will be assigned. INT POINTER y - A pointer to an integer to which the Y-coordinate will be assigned.  Returns INT : Successrate\n false - Error: no graphic; invalid controlpoint; true - Success.  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_real_point/","title":"get_real_point()"},{"contents":" Definition INT get_status ( \u0026lt;INT processID\u0026gt; )  Get the current status of a ProcessID. With this, you can check if a process is frozen, sleeping, dead, alive or non-existing.\nParameters  INT processID - The ProcessID signal was send to.  Returns INT :\n false - The specified processID does not exist (return status: 0). 1,2,3 or 4 - The state of the processID.  Return States Return states 0 - The specified process does not exist. 1 - The specified process is dead. 2 - The specified process is alive. 3 - The specified process is sleeping. 4 - The specified process is frozen.\nExample // import modules IMPORT \u0026quot;mod_say\u0026quot;; IMPORT \u0026quot;mod_debug\u0026quot;; IMPORT \u0026quot;mod_proc\u0026quot;; IMPORT \u0026quot;mod_grproc\u0026quot;; IMPORT \u0026quot;mod_key\u0026quot;; GLOBAL int proc1; int proc2; int proc3; int proc4; int proc5; PROCESS main(); PRIVATE BEGIN // create some processes proc1=dummy(); proc2=dummy(); proc3=dummy(); proc4=dummy(); // change the state signal(proc1,s_sleep); signal(proc2,s_freeze); signal(proc3,s_wakeup); signal(proc4,s_kill); // print the status of each instance say(\u0026quot;\u0026quot;); say(\u0026quot;status codes: ALIVE=2, SLEEP=3, FROZEN=4 ,DEAD=1, NON_EXISTING=0\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;proc1 status: \u0026quot;+get_status(proc1)); // sleeping (3) say(\u0026quot;proc2 status: \u0026quot;+get_status(proc2)); // frozen (4) say(\u0026quot;proc3 status: \u0026quot;+get_status(proc3)); // alive (2) say(\u0026quot;proc4 status: \u0026quot;+get_status(proc4)); // dead (1) say(\u0026quot;proc5 status: \u0026quot;+get_status(proc5)); // not existing (0) LOOP // quit. IF (key(_esc)) exit(\u0026quot;\u0026quot;,0); END FRAME; END END PROCESS dummy(); PRIVATE BEGIN // endless loop LOOP FRAME; END END  Used in example: exit(), key(), say(), signal().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_status/","title":"get_status()"},{"contents":" Definition INT get_text_color( [\u0026lt;INT textID\u0026gt;] )  Gets the current text color (the color where texts will be written in).\nParameters  INT textID: The identification code of the text (optional parameter, introduced in version rc282).  Returns INT: color the text will be written in, or 0 when there is a problem.\nExample Program test; Global my_text; text_color; Begin set_text_color( rgb(192,112,0) ); text_color = get_text_color(); write (0,320/2 ,200/2,4,\u0026quot;The color of this text is:\u0026quot;); write_int(0,320/2+100,200/2,4,\u0026amp;text_color); Repeat frame; Until(key(_ESC)) End  Used in example: set_text_color(), write(), write_int(), key().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_text_color/","title":"get_text_color()"},{"contents":" Definition get_timer ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_timer/","title":"get_timer()"},{"contents":" Definition get_window_pos ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_window_pos/","title":"get_window_pos()"},{"contents":" Definition get_window_size ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/get_window_size/","title":"get_window_size()"},{"contents":" Definition getenv ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/getenv/","title":"getenv()"},{"contents":" Definition STRING glob ( \u0026lt;STRING criteria\u0026gt; )  Gets a single filename or directoryname matching the criteria. If the same criteria is specified, it keeps returning new items on subsequent calls until it can\u0026rsquo;t find any more, in which case it returns \u0026quot;\u0026quot;. When different criteria are specified, the search is \u0026lsquo;reset\u0026rsquo;. To reset the search without returning an item, use \u0026quot;\u0026quot; as criteria.\nAfter a call to glob(), the global struct fileinfo is filled with information about the last file/directory entry returned.\nParameters  STRING criteria - The search criteria to which the returned filenames apply. \u0026quot;\u0026quot; to reset search.  Returns STRING : Filename or directoryname\n \u0026quot;\u0026quot; - No (new) file/directory entries. !\u0026quot;\u0026quot; - The name of a file/directory entry matching the search criteria.  Notes The search criteria can hold many criteria: the folder in which you want to look, simple requirements for filenames, such as extensions, and directory names.\nA few examples:\n * - Returns the filename of any file/directory in the current directory. *.dat - Returns the filename of any file/directory with extension .dat in the current directory. MyDir/* - Returns the filename of any file/directory in MyDir\\ relative to the current directory. C:/Program Files/* - Returns the filename of any file/directory in C:\\Program Files*.  Example import \u0026quot;mod_dir\u0026quot; Process Main() Private String filename; Begin // method one: Loop filename = Glob(\u0026quot;levels/*.tul\u0026quot;); // Looks for a file in the relative folder // \u0026quot;levels\u0026quot; that has the file extension \u0026quot;tul\u0026quot;. if(filename!=\u0026quot;\u0026quot;) load_level(filename); // load_level() would load the level file else break; end End //Reset search glob(\u0026quot;\u0026quot;); // method two: While( (filename = Glob(\u0026quot;levels/*.tul\u0026quot;)) != \u0026quot;\u0026quot; ) load_level(filename); End End  Both methods result in the same, but the second one is less code.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/glob/","title":"glob()"},{"contents":" Definition glyph_get ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/glyph_get/","title":"glyph_get()"},{"contents":" Definition glyph_set ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/glyph_set/","title":"glyph_set()"},{"contents":" Definition INT graph = 0  graph is a predefined local variable which holds the GraphID of the process. A graphic can be assigned to the process by assigning the GraphID of that graphic to graph.\nAssign 0 to the local variable graph to have the process display no graph. Keep in mind that this doesn\u0026rsquo;t free the memory used by the graphic; to free it, use map_unload().\nExample Process cyan_graphic() Begin graph = map_new(100,100,8); // create a new 100x100x8 map. map_clear(0,graph,rgb(0,255,255)); // clear it cyan-colored x = 100; //Position the graphic 100 pixels y = 100; //from the top and left of the screen Repeat frame; Until(key(_ESC)) End  Used in example: map_new(), map_clear(), key(), graph, x, y\n","permalink":"https://divhub.github.io/bennugd-website/docs/variables/graph/","title":"graph"},{"contents":" Definition INT graphic_info ( \u0026lt;INT fileID\u0026gt; , \u0026lt;INT graphID\u0026gt; , \u0026lt;INT infotype\u0026gt; )  Gets some information about the graph specified.\nThis function is also known as map_info() and map_info_get().\nParameters  INT fileID - The file that holds the graph. INT graphID - The graph to get information from. INT infotype - What type of information you want. Refer to Graphical Infotypes.  Returns INT : Returns the information you want.\n If the specified graph was invalid it returns 0. If the specified infotype was not recognized it returns 1.  Example Program keuken; Local gxc; gyc; Begin set_mode(640,480,16); graph=new_map(rand(50,150),rand(50,150),16); //makes a randomly proportioned red rectangle map_clear(0,graph,rgb(255,0,0)); x=320; y=240; gxc=graphic_info(0,graph,G_X_CENTER); gyc=graphic_info(0,graph,G_Y_CENTER); //finds the graphic's center coordinates map_put_pixel(0,graph,gxc,gyc,rgb(255,255,255)); //puts a white pixel in the center of the graphic Loop frame; End End  Used in example: set_mode(), map_new(), map_clear(), map_put_pixel().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/graphic_info/","title":"graphic_info()"},{"contents":" Definition graphic_set ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/graphic_set/","title":"graphic_set()"},{"contents":" Definition grayscale ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/grayscale/","title":"grayscale()"},{"contents":" Definition is_playing_song ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/is_playing_song/","title":"is_playing_song()"},{"contents":" Definition is_playing_wav ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/is_playing_wav/","title":"is_playing_wav()"},{"contents":" Definition INT isinf ( \u0026lt;FLOAT number\u0026gt; )  Checks if a given value is an infinity. This function is the opposite of the finite() function.\nIt does not check for Not-A-Numbers. Use the isnan() function for that.\nParameters  FLOAT number - The value to check.  Returns INT : The result of the check\n 0 (false) - The value is a not an infinity. !0 (true) - The value is a positive or negative infinity.  See also Wikipedia page about the mathematical subject infinity.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/isinf/","title":"isinf()"},{"contents":" Definition INT isnan ( \u0026lt;FLOAT number\u0026gt; )  Checks if a given value is a number.\nIt does not check for infinties, use the isinf() function for that.\nParameters  FLOAT number - The value to check.  Returns INT : The result of the check\n 0 (false) - The value is a number. !0 (true) - The value is NOT a number.  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/isnan/","title":"isnan()"},{"contents":" Definition STRING itoa ( \u0026lt;INT value\u0026gt; )  Returns a string containing a certain int value.\nParameters INT value - The value the returned string will contain.\nReturns STRING : The string containing the specified value, including sign.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/itoa/","title":"itoa()"},{"contents":" Definition join ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/join/","title":"join()"},{"contents":" Definition joy_axes ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_axes/","title":"joy_axes()"},{"contents":" Definition joy_buttons ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_buttons/","title":"joy_buttons()"},{"contents":" Definition joy_getaxis ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_getaxis/","title":"joy_getaxis()"},{"contents":" Definition joy_getball ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_getball/","title":"joy_getball()"},{"contents":" Definition joy_getbutton ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_getbutton/","title":"joy_getbutton()"},{"contents":" Definition joy_gethat ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_gethat/","title":"joy_gethat()"},{"contents":" Definition joy_name ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_name/","title":"joy_name()"},{"contents":" Definition joy_numaxes ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_numaxes/","title":"joy_numaxes()"},{"contents":" Definition joy_numballs ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_numballs/","title":"joy_numballs()"},{"contents":" Definition joy_number ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_number/","title":"joy_number()"},{"contents":" Definition joy_numbuttons ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_numbuttons/","title":"joy_numbuttons()"},{"contents":" Definition joy_numhats ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_numhats/","title":"joy_numhats()"},{"contents":" Definition joy_numjoysticks ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_numjoysticks/","title":"joy_numjoysticks()"},{"contents":" Definition joy_select ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/joy_select/","title":"joy_select()"},{"contents":" Definition INT key( \u0026lt;INT scancode\u0026gt; )  Checks if a certain key is being pressed.\nParameters  INT scancode - The scancode of the key to be checked.  Returns INT : true/false: Whether the key is being pressed.\nNotes Take a look at the scancodes for a complete list.\nExample This will output the words LEFT or RIGHT according to the keys you press, or it will quit the program once ESCAPE is pressed.\nProgram input_test; Begin While( !key(_esc) ) delete_text(ALL_TEXT); if( key(_left) \u0026amp;\u0026amp; !key(_right) ) write(0,160,120,4, \u0026quot;LEFT\u0026quot;); end; if( key(_right) \u0026amp;\u0026amp; !key(_left) ) write(0,160,120,4, \u0026quot;RIGHT\u0026quot;); end; frame; End; exit(); End  Used in example: delete_text(), write(), exit(), ALL_TEXT\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/key/","title":"key()"},{"contents":" Definition ksort ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ksort/","title":"ksort()"},{"contents":" Definition STRING lcase ( \u0026lt;STRING str\u0026gt; )  Returns a string identical to a certain string, with the exception that all uppercase characters are replaced by their lowercase counterparts.\nParameters  STRING str - The string in \u0026ldquo;normal\u0026rdquo;-form.  Returns STRING : The string in \u0026ldquo;lowercase\u0026rdquo;-form.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcase/","title":"lcase()"},{"contents":" Definition lcd_about ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_about/","title":"lcd_about()"},{"contents":" Definition lcd_close ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_close/","title":"lcd_close()"},{"contents":" Definition lcd_devices ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_devices/","title":"lcd_devices()"},{"contents":" Definition lcd_getdepth ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_getdepth/","title":"lcd_getdepth()"},{"contents":" Definition lcd_getheight ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_getheight/","title":"lcd_getheight()"},{"contents":" Definition lcd_getnumbuttons ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_getnumbuttons/","title":"lcd_getnumbuttons()"},{"contents":" Definition lcd_getwidth ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_getwidth/","title":"lcd_getwidth()"},{"contents":" Definition lcd_init ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_init/","title":"lcd_init()"},{"contents":" Definition lcd_intversion ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_intversion/","title":"lcd_intversion()"},{"contents":" Definition lcd_open ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_open/","title":"lcd_open()"},{"contents":" Definition lcd_quit ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_quit/","title":"lcd_quit()"},{"contents":" Definition lcd_readbutton ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_readbutton/","title":"lcd_readbutton()"},{"contents":" Definition lcd_readbuttons ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_readbuttons/","title":"lcd_readbuttons()"},{"contents":" Definition lcd_setbitmap ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_setbitmap/","title":"lcd_setbitmap()"},{"contents":" Definition lcd_version ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lcd_version/","title":"lcd_version()"},{"contents":" Definition INT len ( \u0026lt;STRING str\u0026gt; )  Returns the length, the number of characters, of a certain string.\nAlso called strlen().\nParameters  STRING str - The string of which the length will be returned.  Returns INT : The length of the specified string.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/len/","title":"len()"},{"contents":" Definition INT let_me_alone ( )  Kills all processes except the calling one.\nTo kill only one process, use signal().\nReturns INT: true\nExample Const screen_width = 320; screen_height = 200; screen_depth = 8; End /** * Description * Generates an error. Puts the error in the console and stdout.txt and shows it onscreen * for certain time. Immediately kills all other processes and quits the program after a * certain time. * * Parameters * String message - The error message. * int delay - The time to display the error onscreen and after which the program will quit. * In 1/100seconds. * * Returns * 0 - Success. */ Process error(String message,int delay) Begin // Put the error message in the console and in stdout.txt say(\u0026quot;[ERROR] \u0026quot; + message); // Show the error message onscreen, the size adjust for the screen width set_text_color(rgb(255,0,0)); graph = write_in_map(0,message,4); size = 100*(screen_width-10)/graphic_info(0,graph,G_WIDTH); x = screen_width/2; y = screen_height/2; // Kill all other processes let_me_alone(); // Wait the specified time timer[0] = 0; Repeat frame; Until(timer[0]\u0026gt;delay) // Unload the used graph unload_map(0,graph); return 0; End Process Main(); Begin // Set the screen mode set_mode(screen_width,screen_height,screen_depth); // Generate an error error(\u0026quot;ERROR, QUITTING IN 2 SECONDS\u0026quot;,200); Repeat frame; Until(key(_esc)) End  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/let_me_alone/","title":"let_me_alone()"},{"contents":" Definition ln ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ln/","title":"ln()"},{"contents":" Definition load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/load/","title":"load()"},{"contents":" Definition load_song ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/load_song/","title":"load_song()"},{"contents":" Definition load_wav ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/load_wav/","title":"load_wav()"},{"contents":" Definition log ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/log/","title":"log()"},{"contents":" Definition log2 ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/log2/","title":"log2()"},{"contents":" Definition STRING lpad( \u0026lt;STRING str\u0026gt; , \u0026lt;INT length\u0026gt; )  Returns the string str, padding (adding spaces to) the front of the string if needed to make str of length length. The original string will remain unchanged.\nIf length is smaller or equal to the length of str, the returned string is str.\nParameters  STRING str - The string to pad (add spaces to). INT length - The minimal length of the returned string.  Returns STRING: padded string\nExample import \u0026quot;mod_string\u0026quot; import \u0026quot;mod_say\u0026quot; Process Main() Private string ABC = \u0026quot;ABC\u0026quot;; string _ABC; string ABC__; Begin ABC = lpad(ABC,2); _ABC = lpad(ABC,4); ABC__ = rpad(ABC,5); say('ABC = \u0026quot;' + ABC + '\u0026quot;'); say('_ABC = \u0026quot;' + _ABC + '\u0026quot;'); say('ABC__ = \u0026quot;' + ABC__ + '\u0026quot;'); End  Result:\nABC = \u0026quot;ABC\u0026quot; _ABC = \u0026quot; ABC\u0026quot; ABC__ = \u0026quot;ABC \u0026quot;  Used in example: say(), lpad(), rpad()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/lpad/","title":"lpad()"},{"contents":" Definition map_block_copy ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_block_copy/","title":"map_block_copy()"},{"contents":" Definition map_buffer ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_buffer/","title":"map_buffer()"},{"contents":" Definition map_clear ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_clear/","title":"map_clear()"},{"contents":" Definition map_clone ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_clone/","title":"map_clone()"},{"contents":" Definition map_del ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_del/","title":"map_del()"},{"contents":" Definition map_exists ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_exists/","title":"map_exists()"},{"contents":" Definition map_get_pixel ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_get_pixel/","title":"map_get_pixel()"},{"contents":" Definition map_info ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_info/","title":"map_info()"},{"contents":" Definition map_info_get ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_info_get/","title":"map_info_get()"},{"contents":" Definition map_info_set ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_info_set/","title":"map_info_set()"},{"contents":" Definition map_load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_load/","title":"map_load()"},{"contents":" Definition map_name ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_name/","title":"map_name()"},{"contents":" Definition map_new ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_new/","title":"map_new()"},{"contents":" Definition map_put ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_put/","title":"map_put()"},{"contents":" Definition map_put_pixel ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_put_pixel/","title":"map_put_pixel()"},{"contents":" Definition map_save ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_save/","title":"map_save()"},{"contents":" Definition map_set_name ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_set_name/","title":"map_set_name()"},{"contents":" Definition map_unload ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_unload/","title":"map_unload()"},{"contents":" Definition map_xput ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_xput/","title":"map_xput()"},{"contents":" Definition map_xputnp ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/map_xputnp/","title":"map_xputnp()"},{"contents":" Definition mem_alloc ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_alloc/","title":"mem_alloc()"},{"contents":" Definition mem_available ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_available/","title":"mem_available()"},{"contents":" Definition mem_calloc ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_calloc/","title":"mem_calloc()"},{"contents":" Definition mem_cmp ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_cmp/","title":"mem_cmp()"},{"contents":" Definition mem_copy ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_copy/","title":"mem_copy()"},{"contents":" Definition mem_free ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_free/","title":"mem_free()"},{"contents":" Definition mem_move ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_move/","title":"mem_move()"},{"contents":" Definition mem_realloc ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_realloc/","title":"mem_realloc()"},{"contents":" Definition mem_set ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_set/","title":"mem_set()"},{"contents":" Definition mem_seti ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_seti/","title":"mem_seti()"},{"contents":" Definition mem_setw ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_setw/","title":"mem_setw()"},{"contents":" Definition mem_total ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mem_total/","title":"mem_total()"},{"contents":" Definition memcmp ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/memcmp/","title":"memcmp()"},{"contents":" Definition memcopy ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/memcopy/","title":"memcopy()"},{"contents":" Definition memmove ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/memmove/","title":"memmove()"},{"contents":" Definition memory_free ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/memory_free/","title":"memory_free()"},{"contents":" Definition memory_total ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/memory_total/","title":"memory_total()"},{"contents":" Definition memset ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/memset/","title":"memset()"},{"contents":" Definition memseti ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/memseti/","title":"memseti()"},{"contents":" Definition memsetw ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/memsetw/","title":"memsetw()"},{"contents":" Definition minimize ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/minimize/","title":"minimize()"},{"contents":" Definition INT mkdir ( \u0026lt;STRING directoryname\u0026gt; )  Creates a new directory in the current path of execution with a certain name.\nParameters  STRING directoryname - The name of the directory to be created.  Returns INT : Success\n 0 (false) - Creating a new directory with the specified name failed. !0 (true) - Creating a new directory with the specified name succeeded.  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mkdir/","title":"mkdir()"},{"contents":"Blend Operation module, to blend target and source graphics when drawn.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_blendop/","title":"mod_blendop"},{"contents":"CD module, adding audio CD playback functionality.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_cd/","title":"mod_cd"},{"contents":"Encryption/decryption module for the encryption and decryption of data.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_crypt/","title":"mod_crypt"},{"contents":"Debug module. Adds the capacity to open the Bennu console.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_debug/","title":"mod_debug"},{"contents":"Directory module, adding control over the current working directory and the file system.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_dir/","title":"mod_dir"},{"contents":"Primitive drawing module, adding drawing of primitive and pixels.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_draw/","title":"mod_draw"},{"contents":"Graphical effects module, adding effects applicable to graphics.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_effects/","title":"mod_effects"},{"contents":"Foreign Function Interface library, offering a way of interfacing with functions from another language, for example DLLs.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_ffi/","title":"mod_ffi"},{"contents":"Files module, adding control over individual files (reading, writing, etc).\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_file/","title":"mod_file"},{"contents":"FLIC module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_flic/","title":"mod_flic"},{"contents":"Graphical processes module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_grproc/","title":"mod_grproc"},{"contents":"Joystick module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_joy/","title":"mod_joy"},{"contents":"Keyboard module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_key/","title":"mod_key"},{"contents":"Mode7 module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_m7/","title":"mod_m7"},{"contents":"Maps module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_map/","title":"mod_map"},{"contents":"Math module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_math/","title":"mod_math"},{"contents":"Memory module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_mem/","title":"mod_mem"},{"contents":"Mouse module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_mouse/","title":"mod_mouse"},{"contents":"Pathfind module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_path/","title":"mod_path"},{"contents":"Process interaction and manipulation module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_proc/","title":"mod_proc"},{"contents":"Random number generator module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_rand/","title":"mod_rand"},{"contents":"Regular expressions module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_regex/","title":"mod_regex"},{"contents":"Say (printf) module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_say/","title":"mod_say"},{"contents":"Screen module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_screen/","title":"mod_screen"},{"contents":"Scroll module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_scroll/","title":"mod_scroll"},{"contents":"Sorting module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_sort/","title":"mod_sort"},{"contents":"Sound module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_sound/","title":"mod_sound"},{"contents":"String manipulation module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_string/","title":"mod_string"},{"contents":"System communication module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_sys/","title":"mod_sys"},{"contents":"Text module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_text/","title":"mod_text"},{"contents":"Time module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_time/","title":"mod_time"},{"contents":"Timers module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_timers/","title":"mod_timers"},{"contents":"Video module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_video/","title":"mod_video"},{"contents":"Window Manager module.\n","permalink":"https://divhub.github.io/bennugd-website/docs/modules/mod_wm/","title":"mod_wm"},{"contents":" Definition mode7_start ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mode7_start/","title":"mode7_start()"},{"contents":" Definition mode7_stop ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mode7_stop/","title":"mode7_stop()"},{"contents":" Definition mode_is_ok ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/mode_is_ok/","title":"mode_is_ok()"},{"contents":" Definition move_draw ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/move_draw/","title":"move_draw()"},{"contents":" Definition move_scroll ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/move_scroll/","title":"move_scroll()"},{"contents":" Definition INT move_text ( \u0026lt;INT TextID\u0026gt; , \u0026lt;INT x\u0026gt; , \u0026lt;INT y\u0026gt;, \u0026lt;INT z\u0026gt;)  Moves an existing text to another place on the screen. The alignment of the text is defined by it\u0026rsquo;s alignment mode\nParameters  INT TextID - Identifier of the text you want to move. This identifier should have been appointed to a text earlier on. INT x - The new horizontal coordinate (of the control point) of your text. INT y - The new vertical coordinate (of the control point) of your text. INT z - The new depthplane (of the control point) of your text. (introduced in version r282)  Returns INT: true\nExample Program test; Global My_text; Begin My_text=write(0,320/2,200/2,4,\u0026quot;Press space to move this.\u0026quot;); Loop If (key(_space)) Move_text(My_text,rand(0,319),rand(0,199)); End Frame; End End  Used in example: write(), key(), rand().\nExample 2 import \u0026quot;mod_text\u0026quot;; import \u0026quot;mod_mouse\u0026quot;; import \u0026quot;mod_key\u0026quot;; import \u0026quot;mod_video\u0026quot;; import \u0026quot;mod_rand\u0026quot;; import \u0026quot;mod_map\u0026quot;; private txt[10]; counter; tz; begin set_mode(640,480,32); txt[0]=write_int(0,10,10,10,0,\u0026amp;counter); txt[1]=write_int(0,10,20,-5,0,\u0026amp;tz); txt[2]=write(0,10,10,0,0,\u0026quot;hello world\u0026quot;); set_text_color(txt[1], rgb(255,0,0)); while(!key(_ESC)) counter++; move_text(txt[2], mouse.x, mouse.y, tz ); set_text_color(txt[0], rand(0101010h, 0ffffffh)); if ( key( _DOWN ) ) tz--; end if ( key( _UP ) ) tz++; end frame; end end  Used in example: write(), write_int(), key(), rand(), set_mode(), set_text_color().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/move_text/","title":"move_text()"},{"contents":" Definition move_window ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/move_window/","title":"move_window()"},{"contents":" Definition INT near_angle ( \u0026lt;INT angle\u0026gt; , \u0026lt;INT final angle\u0026gt; , \u0026lt;INT increment\u0026gt; )  Returns an angle closer to another angle, with the indicated increment.\nIt is used for aiming the original angle and it gradually changes into the final angle. The increment controls the rate in wich the final angle is added or subtracted from the orginal angle.\nThe returned angle will be ranging from 0 to 360000 (0-360º).\nParameters  INT angle - The original angle. INT final angle - The new angle. INT increment - The addition or subtraction rate between the two angles.  Returns  INT : An angle nearer the final angle.  Notes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.\nExample /* Modified example converted from bennupack, fenix test section, 2 Medium\\fenix test\\Fenix Test3\\Test_NEAR_ANGLE.prg */ // import modules IMPORT \u0026quot;mod_say\u0026quot;; IMPORT \u0026quot;mod_debug\u0026quot;; //IMPORT \u0026quot;mod_math\u0026quot;; IMPORT \u0026quot;mod_mathi\u0026quot;; IMPORT \u0026quot;mod_map\u0026quot;; IMPORT \u0026quot;mod_key\u0026quot;; IMPORT \u0026quot;mod_video\u0026quot;; IMPORT \u0026quot;mod_screen\u0026quot;; IMPORT \u0026quot;mod_mouse\u0026quot;; IMPORT \u0026quot;mod_proc\u0026quot;; IMPORT \u0026quot;mod_grproc\u0026quot;; GLOBAL int fpg; int ang; //int increment=5000; int increment=10000; //int increment=25000; //int increment=50000; PROCESS main(); BEGIN full_screen=false; fpg=load_fpg(\u0026quot;Fpg.fpg\u0026quot;); say(\u0026quot;Test near_angle...\u0026quot;); say(\u0026quot;Press ESC to quit, and use mouse to move triangle.\u0026quot;); put_screen(fpg,2); // set the mouse cursor mouse.graph=200; mouse.x=0; mouse.y=0; graph=101; REPEAT // Returns the angle between two certain points. The returned angle will be ranging from 0 to 360000 (0-360º). ang=fget_angle(x,y,mouse.x,mouse.y); // int near_angle (int \u0026lt;angle\u0026gt;, int \u0026lt;final angle\u0026gt;, int \u0026lt;increment\u0026gt;) angle=near_angle(angle,ang,increment); say(\u0026quot;angle: \u0026quot;+angle); say(\u0026quot;ang: \u0026quot;+ang); say(\u0026quot;increment: \u0026quot;+increment); advance(5); FRAME; UNTIL(key(_esc)) END  Used in example: say(), fget_angle(), key(), Advance(), mouse, graph, x, y, angle.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/near_angle/","title":"near_angle()"},{"contents":" Definition net_about ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_about/","title":"net_about()"},{"contents":" Definition net_accept ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_accept/","title":"net_accept()"},{"contents":" Definition net_connect ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_connect/","title":"net_connect()"},{"contents":" Definition net_disconnect ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_disconnect/","title":"net_disconnect()"},{"contents":" Definition net_disconnectall ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_disconnectall/","title":"net_disconnectall()"},{"contents":" Definition net_geterror ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_geterror/","title":"net_geterror()"},{"contents":" Definition net_getseparator ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_getseparator/","title":"net_getseparator()"},{"contents":" Definition net_getseparatorlength ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_getseparatorlength/","title":"net_getseparatorlength()"},{"contents":" Definition net_hostname ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_hostname/","title":"net_hostname()"},{"contents":" Definition net_incoming_accept ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_incoming_accept/","title":"net_incoming_accept()"},{"contents":" Definition net_init ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_init/","title":"net_init()"},{"contents":" Definition net_inttoip ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_inttoip/","title":"net_inttoip()"},{"contents":" Definition net_intversion ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_intversion/","title":"net_intversion()"},{"contents":" Definition net_ipaddress ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_ipaddress/","title":"net_ipaddress()"},{"contents":" Definition net_iptoint ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_iptoint/","title":"net_iptoint()"},{"contents":" Definition net_listen ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_listen/","title":"net_listen()"},{"contents":" Definition net_port ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_port/","title":"net_port()"},{"contents":" Definition net_quit ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_quit/","title":"net_quit()"},{"contents":" Definition net_recv ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_recv/","title":"net_recv()"},{"contents":" Definition net_recvfile ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_recvfile/","title":"net_recvfile()"},{"contents":" Definition net_recvgraph ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_recvgraph/","title":"net_recvgraph()"},{"contents":" Definition net_recvvar ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_recvvar/","title":"net_recvvar()"},{"contents":" Definition net_resolve ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_resolve/","title":"net_resolve()"},{"contents":" Definition net_send ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_send/","title":"net_send()"},{"contents":" Definition net_sendfile ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_sendfile/","title":"net_sendfile()"},{"contents":" Definition net_sendgraph ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_sendgraph/","title":"net_sendgraph()"},{"contents":" Definition net_sendrn ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_sendrn/","title":"net_sendrn()"},{"contents":" Definition net_sendvar ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_sendvar/","title":"net_sendvar()"},{"contents":" Definition net_separator ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_separator/","title":"net_separator()"},{"contents":" Definition net_stat_buffer ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_stat_buffer/","title":"net_stat_buffer()"},{"contents":" Definition net_version ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/net_version/","title":"net_version()"},{"contents":" Definition pal_clone ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_clone/","title":"pal_clone()"},{"contents":" Definition pal_del ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_del/","title":"pal_del()"},{"contents":" Definition pal_get ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_get/","title":"pal_get()"},{"contents":" Definition pal_load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_load/","title":"pal_load()"},{"contents":" Definition pal_map_assign ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_map_assign/","title":"pal_map_assign()"},{"contents":" Definition pal_map_getid ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_map_getid/","title":"pal_map_getid()"},{"contents":" Definition pal_map_remove ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_map_remove/","title":"pal_map_remove()"},{"contents":" Definition pal_new ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_new/","title":"pal_new()"},{"contents":" Definition pal_refresh ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_refresh/","title":"pal_refresh()"},{"contents":" Definition pal_save ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_save/","title":"pal_save()"},{"contents":" Definition pal_set ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_set/","title":"pal_set()"},{"contents":" Definition pal_unload ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pal_unload/","title":"pal_unload()"},{"contents":" Definition palette_convert ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/palette_convert/","title":"palette_convert()"},{"contents":" Definition palette_roll ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/palette_roll/","title":"palette_roll()"},{"contents":" Definition pango_render ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pango_render/","title":"pango_render()"},{"contents":" Definition path_find ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/path_find/","title":"path_find()"},{"contents":" Definition path_getxy ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/path_getxy/","title":"path_getxy()"},{"contents":" Definition path_wall ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/path_wall/","title":"path_wall()"},{"contents":" Definition pause_song ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pause_song/","title":"pause_song()"},{"contents":" Definition pause_wav ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pause_wav/","title":"pause_wav()"},{"contents":" Definition pcx_load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pcx_load/","title":"pcx_load()"},{"contents":" Definition play_song ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/play_song/","title":"play_song()"},{"contents":" Definition play_wav ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/play_wav/","title":"play_wav()"},{"contents":" Definition png_load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/png_load/","title":"png_load()"},{"contents":" Definition png_save ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/png_save/","title":"png_save()"},{"contents":" Definition point_get ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/point_get/","title":"point_get()"},{"contents":" Definition point_set ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/point_set/","title":"point_set()"},{"contents":" Definition FLOAT pow ( \u0026lt;FLOAT base\u0026gt; , \u0026lt;FLOAT power\u0026gt; )  Returns base to the power of power (base^power).\nParameters  FLOAT base - The base. FLOAT power - The power.  Returns FLOAT : base to the power of power (base^power).\nExample Program powerful; Global float value1; int value2; Begin write_float(0,0, 0,0,\u0026amp;value1); write_int (0,0,10,0,\u0026amp;value2); value1 = pow(2.3,4.6); value2 = pow(2 ,3 ); Repeat frame; Until(key(_ESC)) End  Used in example: write_float(), write_int(), pow(), key().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/pow/","title":"pow()"},{"contents":" Definition INT put ( \u0026lt;INT fileID\u0026gt; , \u0026lt;INT graphID\u0026gt; , \u0026lt;INT x\u0026gt; , \u0026lt;INT y\u0026gt; )  Draws (blits) a graph onto the background.\nFor more advanced blitting, see:\n xput() map_put() map_xput() map_xputnp()  Parameters  INT fileID - The file that holds the graph. INT graphID - The graph to draw with. INT x - Where on the background\u0026rsquo;s x-axis to put the graph. INT y - Where on the background\u0026rsquo;s y-axis to put the graph.  Returns INT true\nNotes The x and y parameters denote where to draw the graph, that is, where the center of the to be drawn graph will be.\nErrors Unsupported color depth - The origin graph\u0026rsquo;s color depth is greater than the destination graph\u0026rsquo;s.\nExample import \u0026quot;mod_map\u0026quot; import \u0026quot;mod_screen\u0026quot; import \u0026quot;mod_key\u0026quot; Process Main() Private int map; Begin // Create a new graph of size 100x100 and color depth of 8bit map = map_new(100,100,8); // Clear the map red map_clear(0,map,rgb(255,0,0)); // Put it in the center of the screen put(0,map,160,100); Repeat frame; Until(key(_ESC)) End  Used in example: map_new(), map_clear(), put(), key().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/put/","title":"put()"},{"contents":" Definition put_pixel ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/put_pixel/","title":"put_pixel()"},{"contents":" Definition quicksort ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/quicksort/","title":"quicksort()"},{"contents":" Definition INT rand ( \u0026lt;INT lowerlimit\u0026gt; , \u0026lt;INT upperlimit\u0026gt; )  Returns a random number, ranging from a certain lower limit to a certain upper limit. The limits are within the range.\nMake sure the difference between lowerlimit and upperlimit does not exceed 32767 (2^15-1). If that is needed, the function rand2() below can be used.\nParameters  INT lowerlimit - The lower limit for the random value. INT upperlimit - The upper limit for the random value.  Returns INT : A random value: lowerlimit \u0026lt;= result \u0026lt;= upperlimit\nNotes To synchronize rand() on different computers, the function rand_seed() can be used.\nrand() is not a very good function on itself. To counter this, the following rand2() can be used:\n#define RAND_MAX 32767 #define DRAND_RANGE (1.0/((RAND_MAX + 1)*(RAND_MAX + 1))) #define irand(x) ((unsigned int) ((x) * drand ())) Function float drand () Private float f; Begin Repeat f = (rand (0,RAND_MAX) * (RAND_MAX + 1.0) + rand (0,RAND_MAX)) * DRAND_RANGE; Until (f \u0026lt; 1); /* Round off */ return f; End Function int rand2(int lowerlimit, int upperlimit) Begin return (lowerlimit+irand(upperlimit-lowerlimit+1)); End  To understand this code, one can read its source.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rand/","title":"rand()"},{"contents":" Definition INT rand_seed ( \u0026lt;INT seed\u0026gt; )  Seeds the random generator, used in rand().\nThis is useful for synchronizing the random generator on multiple machines, as when the same seed is used, calls to rand() with the same limits will return values in the same order on all the machines.\nTo reset the seeding to its original state, meaning the state before any call to rand() or rand_seed(), set seed to 1.\nParameters  INT seed - The seed for the random generator used in rand(); 1 to reset.  Returns INT: true\nExample import \u0026quot;mod_rand\u0026quot; import \u0026quot;mod_say\u0026quot; import \u0026quot;mod_time\u0026quot; Process Main() Begin say(\u0026quot;First number: \u0026quot; + (rand(0,1000)%100)); rand_seed(time()); say(\u0026quot;Random number: \u0026quot; + (rand(0,1000)%100)); rand_seed(1); say(\u0026quot;Again the first number: \u0026quot; + (rand(0,1000)%100)); End  Used in example: say(), rand(), rand_seed()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rand_seed/","title":"rand_seed()"},{"contents":" Definition realloc ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/realloc/","title":"realloc()"},{"contents":" Definition regex ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/regex/","title":"regex()"},{"contents":" Definition regex_replace ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/regex_replace/","title":"regex_replace()"},{"contents":" Definition region_define ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/region_define/","title":"region_define()"},{"contents":" Definition region_out ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/region_out/","title":"region_out()"},{"contents":" Definition reserve_channels ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/reserve_channels/","title":"reserve_channels()"},{"contents":" Definition reset_fli ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/reset_fli/","title":"reset_fli()"},{"contents":" Definition resume_song ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/resume_song/","title":"resume_song()"},{"contents":" Definition resume_wav ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/resume_wav/","title":"resume_wav()"},{"contents":" Definition reverse_stereo ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/reverse_stereo/","title":"reverse_stereo()"},{"contents":" Definition rgb ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rgb/","title":"rgb()"},{"contents":" Definition rgb_get ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rgb_get/","title":"rgb_get()"},{"contents":" Definition rgba ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rgba/","title":"rgba()"},{"contents":" Definition rgba_get ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rgba_get/","title":"rgba_get()"},{"contents":" Definition rgbscale ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rgbscale/","title":"rgbscale()"},{"contents":" Definition INT rm ( \u0026lt;STRING filename\u0026gt; )  Removes (deletes) the file specified with filename.\nParameters  STRING filename - The name of the file to be removed (deleted).  Returns INT : Success\n 0 (false) - Removing the file with the specified name failed. !0 (true) - Removing the file with the specified name succeeded.  Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rm/","title":"rm()"},{"contents":" Definition INT rmdir ( \u0026lt;STRING directoryname\u0026gt; )  Removes (deletes) the directory in the current path of execution with a certain name.\nParameters  STRING directoryname - The name of the directory to be removed (deleted).  Returns INT : Success\n 0 (false) - Removing the directory with the specified name failed. !0 (true) - Removing the directory with the specified name succeeded.  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rmdir/","title":"rmdir()"},{"contents":" Definition STRING rpad( \u0026lt;STRING str\u0026gt; , \u0026lt;INT length\u0026gt; )  Returns the string str, padding (adding spaces to) the back of the string if needed to make str of length length. The original string will remain unchanged.\nIf length is smaller or equal to the length of str, the returned string is str.\nParameters  STRING str - The string to pad (add spaces to). INT length - The minimal length of the returned string.  Returns STRING: padded string\nExample import \u0026quot;mod_string\u0026quot; import \u0026quot;mod_say\u0026quot; Process Main() Private string ABC = \u0026quot;ABC\u0026quot;; string _ABC; string ABC__; Begin ABC = lpad(ABC,2); _ABC = lpad(ABC,4); ABC__ = rpad(ABC,5); say('ABC = \u0026quot;' + ABC + '\u0026quot;'); say('_ABC = \u0026quot;' + _ABC + '\u0026quot;'); say('ABC__ = \u0026quot;' + ABC__ + '\u0026quot;'); End  Result:\nABC = \u0026quot;ABC\u0026quot; _ABC = \u0026quot; ABC\u0026quot; ABC__ = \u0026quot;ABC \u0026quot;  Used in example: say(), lpad(), rpad()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/rpad/","title":"rpad()"},{"contents":" Definition save ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/save/","title":"save()"},{"contents":" Definition INT say ( \u0026lt;STRING message\u0026gt; )  Prints message to stdout (console).\n Similar to System.out.println(message) in Java. Similar to printf(\u0026quot;%s\\n\u0026quot;,message) in C  Parameters  STRING message - The message to print to stdout  Returns INT - true\nExample import \u0026quot;mod_say\u0026quot; Process Main() Begin Say(\u0026quot;Hello World!\u0026quot;); End  This will result in the output on console:\n Hello World!\n ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/say/","title":"say()"},{"contents":" Definition INT say_fast ( \u0026lt;STRING message\u0026gt; )  Prints message to stdout (console).\nThis function is the same as the say() function, but with the difference that the debugging information isn\u0026rsquo;t flushed (buffered) into the standard output.\nAs you can see in the bennu source code mod_say.c, the difference is only 1 instruction, so it\u0026rsquo;s slightly faster.\n Similar to System.out.println(message) in Java. Similar to printf(\u0026quot;%s\\n\u0026quot;,message) in C  Parameters  STRING message - The message to print on to the console  Returns INT - true\nExample // import modules IMPORT \u0026quot;mod_say\u0026quot;; IMPORT \u0026quot;mod_debug\u0026quot;; GLOBAL int count; PROCESS main(); BEGIN say(\u0026quot;hello world.\u0026quot;); say(\u0026quot;\u0026quot;); say(\u0026quot;\u0026quot;); FOR (count=0; count\u0026lt;5000; count+=1) say_fast(\u0026quot;count: \u0026quot;+count); END END  This will result in the output on console:\n Hello World!\n ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/say_fast/","title":"say_fast()"},{"contents":" Definition INT scan_code  scan_code is defined in the mod_key module and, in contrast to ascii, it contains the last key pressed, not the last character.\nThat means “A” and “a” will have the same scan_code, but different ascii value.\nNotes Take a look at the scancodes for a complete list.\nExample import \u0026quot;mod_text\u0026quot; import \u0026quot;mod_key\u0026quot; import \u0026quot;mod_video\u0026quot; process main() begin set_mode(640,320); write( 0, 60, 10, 0, \u0026quot;Use lower and upper case characters to see the difference\u0026quot;); write( 0, 60, 20, 0, \u0026quot;between ascii and scan_code. (ESC to exit) \u0026quot;); write( 0, 60, 40, 0, \u0026quot;ascii: \u0026quot;); write_var( 0, 110, 40, 0, ascii); write( 0, 26, 50, 0, \u0026quot;scan_code: \u0026quot;); write_var( 0, 110, 50, 0, scan_code); while ( !key(_esc)) frame; end end  Used in example: write(), key(), set_mode(), .\n","permalink":"https://divhub.github.io/bennugd-website/docs/variables/scan_code/","title":"scan_code"},{"contents":" Definition screen_clear ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/screen_clear/","title":"screen_clear()"},{"contents":" Definition screen_get ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/screen_get/","title":"screen_get()"},{"contents":" Definition screen_put ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/screen_put/","title":"screen_put()"},{"contents":" Definition set_channel_volume ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_channel_volume/","title":"set_channel_volume()"},{"contents":" Definition set_distance ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_distance/","title":"set_distance()"},{"contents":" Definition set_fps ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_fps/","title":"set_fps()"},{"contents":" Definition set_icon ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_icon/","title":"set_icon()"},{"contents":" Definition set_mode ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_mode/","title":"set_mode()"},{"contents":" Definition set_music_position ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_music_position/","title":"set_music_position()"},{"contents":" Definition set_panning ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_panning/","title":"set_panning()"},{"contents":" Definition set_position ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_position/","title":"set_position()"},{"contents":" Definition set_song_volume ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_song_volume/","title":"set_song_volume()"},{"contents":" Definition INT set_text_color ( [INT \u0026lt; textID\u0026gt;] , \u0026lt;WORD color\u0026gt; )  Sets the current text color (the color where texts will be written in). This only affects 1 bit (2 color) fonts, which can be loaded with load_font() or load_bdf(). 8 bit and 16 bit fonts already contain color information themselves and thus aren\u0026rsquo;t affected.\nParameters  INT textID - TextID of the text (optional). WORD color - The color to use for text.  Returns (Needs confirmation.)\nINT: Result.\n true if successful false if failed.   VOID: in version rc282 this function returns nothing.\n Notes Be warned that values returned by the rgb() function differ with the video card. So, directly filling out color numbers as color parameter in 16 bit color mode without using rgb() is a bad idea, as rgb() returns the correct color code for every video card\nThe optional argument textID is fairly new. It is introduced in version rc282.\nExample Program awesome; Global byte red=0; byte green=255; byte blue=0; Begin set_text_color(rgb(red,green,blue)); write(0,1,1,0,\u0026quot;Mijn potlood is bruin\u0026quot;); //this text will be green as an Irishman's ejecta set_text_color(rgb(255,0,0)); write(0,1,11,0,\u0026quot;Je moeder\u0026quot;); //this text will be red Loop frame; End End  Used in example: write(), rgb().\nExample 2 import \u0026quot;mod_text\u0026quot;; import \u0026quot;mod_mouse\u0026quot;; import \u0026quot;mod_key\u0026quot;; import \u0026quot;mod_video\u0026quot;; import \u0026quot;mod_rand\u0026quot;; import \u0026quot;mod_map\u0026quot;; private txt[10]; counter; tz; begin set_mode(640,480,32); txt[0]=write_int(0,10,10,10,0,\u0026amp;counter); txt[1]=write_int(0,10,20,-5,0,\u0026amp;tz); txt[2]=write(0,10,10,0,0,\u0026quot;hello world\u0026quot;); set_text_color(txt[1], rgb(255,0,0)); while(!key(_ESC)) counter++; move_text(txt[2], mouse.x, mouse.y, tz ); set_text_color(txt[0], rand(0101010h, 0ffffffh)); if ( key( _DOWN ) ) tz--; end if ( key( _UP ) ) tz++; end frame; end end  Used in example: write(), write_int(), rgb(), key(), set_mode(), move_text().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_text_color/","title":"set_text_color()"},{"contents":" Definition set_title ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_title/","title":"set_title()"},{"contents":" Definition set_wav_volume ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_wav_volume/","title":"set_wav_volume()"},{"contents":" Definition set_window_pos ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/set_window_pos/","title":"set_window_pos()"},{"contents":" Definition INT shift_status  shift_status is defined in the mod_key module and indicates whether a modifier key is being pressed. If more than a modifier key is pressed at the same time shift_status will return the sum.\nList    Key Value     Right Control 20 *   Left Control 36   Right Alt 72 *   Left Alt 136   NUM LOCK 256   CAPS LOCK 512   Right Shift 1025   Left Shift 1026     *Note: At the time of the writing of this article, right alt and right control didn\u0026rsquo;t return anything. It is unknown whether it is a bug or just deprecated.\n ","permalink":"https://divhub.github.io/bennugd-website/docs/variables/shift_status/","title":"shift_status"},{"contents":" Definition INT signal ( \u0026lt;INT processID|processTypeID\u0026gt; , \u0026lt;INT signal\u0026gt; )  Allows a process/function or a range of processes/functions of certain processType to be controlled in a limited number of ways, by sending signals.\nParameters  INT processID|processTypeID - The ProcessID of the process or the ProcessTypeID of the type of processes to send the signal to. INT signal - The signal that is to be sent to the target process(es).  Returns INT :\n false - The specified processID|processTypeID was ALL_PROCESS or a processTypeID. true - The specified processID|processTypeID was a processID.  Errors Invalid signal - The specified signal is invalid.\nNotes To obtain the processType of a function, the operator Type can be used. For a process to send a signal to itself, the local variable id can be used. The parameter signal is passed by way of a set of signals which denote the signal to be sent. The parameter signal is one of the listed signals. To kill all processes at once, except the calling one, use let_me_alone().\nTo send a signal to all processes at once, except the calling one, use signal(ALL_PROCESS,signal).\nTo specify how a process reacts on an incoming signal, use signal_action().\nA signal is carried out immediately, but this does not mean execution of processes is switched to the process, if you just woke it up. This can be achieved by using frame(0); after the signal. A frame will cause Bennu to continue execution with the process having the lowest frame-percentage done and it will only continue execution with the current process after all other processes have had their turn. Moreover, using a frame-percentage of 0 will make sure there is nothing added to the done frame-percentage of the process, meaning it doesn\u0026rsquo;t affect the framerate of the process.\nExample signal( get_id(type enemy) , s_kill ); // Kills a process of type enemy. // Becareful! If there is no enemy process alive, // get_id() will return 0, which means signal() // will signal all processes. signal( id , s_kill_tree ); // Kills the process that calls it, and all of its descendants signal( Type player , s_freeze ); // Freezes all processes of type player so that they are // still displayed, but do not execute any code. signal(ALL_PROCESS,s_freeze); // Freezes all processes except the one that called it. // Can be used to pause a game. signal( someID , S_WAKEUP ); frame(0); // Wake up the process someID and let it execute once // (if not done this frame) before continuing.  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/signal/","title":"signal()"},{"contents":" Definition INT signal_action ( [\u0026lt;INT processID|processTypeID\u0026gt; , ] INT signal , INT action )  Sets the reaction of one or more processes when they receive a certain nonforceful-signal. Only existing processes are affected, processes created afterwards are not.\nParameters INT processID|processTypeID - A ProcessID,ProcessTypeID or ALL_PROCESS. INT signal - The code of a nonforceful-signal for which a reaction is to be specified. INT action - The reaction of the process when it receives a signal. (S_DFL/S_IGN)\nReturns INT : true\nNotes The reaction to an incoming forced signal (S_KILL_FORCE, S_SLEEP_FORCE, etc) cannot be changed and is S_DFL by default.\nExample // The current process ignores the kill signal from now on signal_action(S_KILL,S_IGN); // All currently existing processes ignore the kill signal from now on signal_action(ALL_PROCESS,S_KILL,S_IGN); // All currently existing processes of type 'Player' ignore the freeze signal from now on signal_action(type Player,S_FREEZE,S_IGN);  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/signal_action/","title":"signal_action()"},{"contents":" Definition FLOAT sin ( \u0026lt;FLOAT angle\u0026gt; )  Returns the sine of the specified angle.\nThis function performs a sine calculation on a certain angle and returns a value between -1 and 1.\nParameters FLOAT angle - Angle, in thousandths of degrees. i.e. 75000 = 75º\nReturns FLOAT : The sine result of the specified angle.\nNotes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.\nTo read about all aspects of trigonometry, you can visit Wikipedia\u0026rsquo;s Trigonometric function page.\nExample Const screen_width = 320; screen_height = 200; screen_border = 15; End Global float value; End Process Main() Begin // Modes set_title(\u0026quot;Sine Graph\u0026quot;); set_mode(screen_width,screen_height); // X axis for(x=1;x\u0026lt;=8;x++) write( 0, screen_border+x*(screen_width-screen_border)/8+3, screen_height-1, 8, itoa(x*360/8 )+\u0026quot;^\u0026quot; ); end draw_line(1,screen_height-screen_border,screen_width,screen_height-screen_border); // Y axis write(0,screen_border-1,20,5,\u0026quot;1\u0026quot;); write(0,screen_border-1,screen_height/2,5,\u0026quot;0\u0026quot;); write(0,screen_border-1,screen_height-20,5,\u0026quot;-1\u0026quot;); draw_line(screen_border,1,screen_border,screen_height-1); // Draw tangent for(angle=0;angle\u0026lt;360;angle++) value=sin(angle*1000)*(screen_height/2-20); put_pixel( screen_border+angle*(screen_width-screen_border)/360, screen_height/2-value, rgb(255,255,255) ); // screen_height/2-value because the screen's origin (0,0) is topleft instead of downleft. end Repeat frame; Until(key(_ESC)) End  Used in example: set_title(), set_mode(), write(), draw_line(), sin(), put_pixel(), key().\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/sin/","title":"sin()"},{"contents":" Definition sort ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/sort/","title":"sort()"},{"contents":" Definition sound_close ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/sound_close/","title":"sound_close()"},{"contents":" Definition sound_init ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/sound_init/","title":"sound_init()"},{"contents":" Definition split ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/split/","title":"split()"},{"contents":" Definition FLOAT sqrt ( \u0026lt;FLOAT value\u0026gt; )  Parameters  FLOAT value - The value of which the square root will be returned.  Returns FLOAT : The square root of value.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/sqrt/","title":"sqrt()"},{"contents":" Definition start_fli ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/start_fli/","title":"start_fli()"},{"contents":" Definition start_scroll ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/start_scroll/","title":"start_scroll()"},{"contents":" Definition stop_scroll ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/stop_scroll/","title":"stop_scroll()"},{"contents":" Definition stop_song ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/stop_song/","title":"stop_song()"},{"contents":" Definition stop_wav ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/stop_wav/","title":"stop_wav()"},{"contents":" Definition INT strcasecmp( \u0026lt;STRING str1\u0026gt; , \u0026lt;STRING str2\u0026gt; )  Compares two strings case-insensitive and returns the result.\nParameters  STRING str1 - The first string. STRING str2 - The second string, to compare with the first string.  Returns INT: difference\n 0 - The strings are equal. \u0026gt;0 - The ASCII value of the first differing characters is higher for str1. \u0026lt;0 - The ASCII value of the first differing characters is higher for str2.  Notes If the strings differ, the ASCII difference between the first differing characters of the strings is actually returned. Let i be the index of the differing characters, then what is returned: str1[i]-str2[i].\nExample import \u0026quot;mod_string\u0026quot; import \u0026quot;mod_say\u0026quot; Const AB = \u0026quot;AB\u0026quot;; ABC = \u0026quot;ABC\u0026quot;; CD = \u0026quot;CD\u0026quot;; CD2 = \u0026quot;CD\u0026quot;; End Process Main() Begin say(\u0026quot;strcasecmp(AB,ABC) = \u0026quot; + strcasecmp(AB,ABC)); say(\u0026quot;strcasecmp(AB,CD) = \u0026quot; + strcasecmp(AB,CD)); say(\u0026quot;strcasecmp(CD,AB) = \u0026quot; + strcasecmp(CD,AB)); say(\u0026quot;strcasecmp(CD,CD2) = \u0026quot; + strcasecmp(CD,CD2)); End  Result:\nstrcasecmp(AB,ABC) = -67 strcasecmp(AB,CD) = -2 strcasecmp(CD,AB) = 2 strcasecmp(CD,CD2) = 0  Used in example: say(), strcasecmp()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/strcasecmp/","title":"strcasecmp()"},{"contents":" Definition STRING strrev ( \u0026lt;STRING str\u0026gt; )  Returns a reversed version of a certain string, meaning the characters are in reversed order.\nParameters  STRING str - The non reversed string.  Returns STRING : The reversed string.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/strrev/","title":"strrev()"},{"contents":" Definition INT substr ( \u0026lt;STRING str\u0026gt; , \u0026lt;INT startposition\u0026gt; , [\u0026lt;INT characters\u0026gt;] )  Returns a subsection of a certain string.\nParameters  STRING str - The string of which a subsection will be returned. INT startposition - The position of the first character to be in the subsection. [INT characters] - The number of characters the subsection will hold. Negative values are special; see Notes.  Returns STRING : The subsection.\nNotes If the number of characters is a negative value, the following applies: the start of the subsection will be startposition; the end of the subsection will be the length of the string minus the absolute value of characters.\nExample Private String str = \u0026quot;This is my string.\u0026quot;; Begin // No specified number of characters say( substr(str,2) + \u0026quot;\u0026lt;\u0026quot; ); // \u0026quot;is is my string.\u0026quot; say( substr(str,-7) + \u0026quot;\u0026lt;\u0026quot; ); // \u0026quot;string.\u0026quot; // Specified number of characters say( substr(str,5,2) + \u0026quot;\u0026lt;\u0026quot; ); // \u0026quot;is\u0026quot; // Number of characters greater than length of string say( substr(str,2,50) + \u0026quot;\u0026lt;\u0026quot; ); // \u0026quot;is my string.\u0026quot; say( substr(str,-7,50) + \u0026quot;\u0026lt;\u0026quot; ); // \u0026quot;string.\u0026quot; // Negative number of characters say( substr(str,5,-5) + \u0026quot;\u0026lt;\u0026quot; ); // \u0026quot;is my st\u0026quot; // Special case say( substr(str,0,0) + \u0026quot;\u0026lt;\u0026quot; ); // \u0026quot;\u0026quot;, but pre 0.92: \u0026quot;This is my string.\u0026quot; Repeat frame; Until(key(_ESC)) End  Used in example: say(), key()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/substr/","title":"substr()"},{"contents":" Definition FLOAT tan ( \u0026lt;FLOAT angle\u0026gt; )  Returns the tangent of a certain angle.\nThis function performs a tangent calculation on a certain angle and returns a value.\nParameters FLOAT angle - Angle, in thousandths of degrees. i.e. 75000 = 75º\nReturns FLOAT : The tangent result of the specified angle.\nNotes The angle value returned by this function is in thousandths of degrees, as most angles within Bennu are.\nTo read about all aspects of trigonometry, you can visit Wikipedia\u0026rsquo;s Trigonometric function page.\nExample Const screen_width = 320; screen_height = 200; screen_border = 15; End Global float value; End Process Main() Begin // Modes set_title(\u0026quot;Tangent Graph\u0026quot;); set_mode(screen_width,screen_height); // X axis for(x=1;x\u0026lt;=8;x++) write( 0, screen_border+x*(screen_width-screen_border)/8+3, screen_height-1, 8, itoa(x*360/8 )+\u0026quot;^\u0026quot; ); end draw_line(1,screen_height-screen_border,screen_width,screen_height-screen_border); // Y axis write(0,screen_border-1,20,5,\u0026quot;1\u0026quot;); write(0,screen_border-1,screen_height/2,5,\u0026quot;0\u0026quot;); write(0,screen_border-1,screen_height-20,5,\u0026quot;-1\u0026quot;); draw_line(screen_border,1,screen_border,screen_height-1); // Draw tangent for(angle=0;angle\u0026lt;360;angle++) value=tan(angle*1000)*(screen_height/2-20); put_pixel( screen_border+angle*(screen_width-screen_border)/360, screen_height/2-value, rgb(255,255,255) ); // screen_height/2-value because the screen's origin (0,0) is topleft instead of downleft. end Repeat frame; Until(key(_ESC)) End  Used in example: set_title(), set_mode(), write(), draw_line(), tan(), put_pixel(), key()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/tan/","title":"tan()"},{"contents":" Definition INT text_height ( \u0026lt;INT fontID\u0026gt; , \u0026lt;STRING text\u0026gt; )  Calculates the height in pixels of the specified text in the specified font.\nParameters  INT FontID - FontID of the font for which the height of the text will be the calculated. STRING text - The text of which the height will be calculated.  Returns INT: The height in pixels of the text in the font.\n 0 - Invalid or no text; invalid font. \u0026gt;0 - The height in pixels of the text in the font.  See Also  text_width()  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/text_height/","title":"text_height()"},{"contents":" Definition INT text_width ( \u0026lt;INT fontID\u0026gt; , \u0026lt;STRING text\u0026gt; )  Calculates the width in pixels of the specified text in the specified font.\nParameters  INT FontID - FontID of the font for which the width of the text will be the calculated. STRING text - The text of which the width will be calculated.  Returns INT: The width in pixels of the text in the font.\n 0 - Invalid or no text; invalid font. \u0026gt;0 - The width in pixels of the text in the font.  See Also  text_height()  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/text_width/","title":"text_width()"},{"contents":" Definition time ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/time/","title":"time()"},{"contents":" Definition STRING trim ( \u0026lt;STRING str\u0026gt; )  Returns a copy of str without leading or ending whitespace (spaces, tabs, linefeeds, carriage returns).\nParameters  STRING str - The string to trim.  Returns STRING: trimmed string\nExample import \u0026quot;mod_string\u0026quot; import \u0026quot;mod_say\u0026quot; Const _ABC_ = \u0026quot; ABC \u0026quot;; End Process Main() Private string ABC; Begin ABC = trim(_ABC_); say('_ABC_ = \u0026quot;' + _ABC_ + '\u0026quot;'); say('ABC = \u0026quot;' + ABC + '\u0026quot;'); End  Result:\n_ABC_ = \u0026quot; ABC \u0026quot; ABC = \u0026quot;ABC\u0026quot;  Used in example: say(), trim()\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/trim/","title":"trim()"},{"contents":" Definition ttf_load ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ttf_load/","title":"ttf_load()"},{"contents":" Definition ttf_loadaa ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ttf_loadaa/","title":"ttf_loadaa()"},{"contents":" Definition ttf_loadx ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ttf_loadx/","title":"ttf_loadx()"},{"contents":" Definition STRING ucase ( \u0026lt;STRING str\u0026gt; )  Returns a string identical to a certain string, with the exception that all lowercase characters are replaced by their uppercase counterparts.\nParameters  STRING str - The string in \u0026ldquo;normal\u0026rdquo;-form.  Returns STRING : The string in \u0026ldquo;uppercase\u0026rdquo;-form.\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/ucase/","title":"ucase()"},{"contents":" Definition unload_song ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/unload_song/","title":"unload_song()"},{"contents":" Definition unload_wav ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/unload_wav/","title":"unload_wav()"},{"contents":" Definition wpad_info ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/wpad_info/","title":"wpad_info()"},{"contents":" Definition wpad_info_bb ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/wpad_info_bb/","title":"wpad_info_bb()"},{"contents":" Definition wpad_is_ready ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/wpad_is_ready/","title":"wpad_is_ready()"},{"contents":" Definition wpad_rumble ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/wpad_rumble/","title":"wpad_rumble()"},{"contents":" Definition INT write ( \u0026lt;INT fontID\u0026gt; , \u0026lt;INT x\u0026gt; , \u0026lt;INT y\u0026gt; , [\u0026lt;INT z\u0026gt;] , \u0026lt;INT alignment\u0026gt; , \u0026lt;STRING text\u0026gt;)  Puts a dynamic text with a certain font on certain coordinates on the screen with a certain alignment.\nParameters  INT fontID - The FontID of the font to be used for the text. INT x - The X coordinate of the text. INT y - The Y coordinate of the text. INT z - The depthplane of the text (optional, introduced in version rc282). INT alignment - The type of alignment. STRING text - The text to be used.  Returns INT: TextID\n -1 - Error. The text could not be obtained or was empty. \u0026gt;=0 - The TextID of the text.  Notes There is a limit of 511 texts to simultaneously exist on the screen. The program will crash with an error when this number is reached.\nThe text depth can be changed by adjusting the global variable text_z.\nTo write variables to the screen, rather use write_int(), write_string(), write_float() or write_var() than this command.\nTo write text on a map you can use the command write_in_map().\nIf you write texts with a font and you change any symbol of this font after, all written texts will be updated using the new changed symbols.\nExample Program texts; Const maxtexts = 10; Private int textid[maxtexts-1]; string str; float flt; Begin // Set FPS set_fps(60,0); // Write some texts textid[0] = write(0,0,0,0,\u0026quot;FPS:\u0026quot;); textid[1] = write_int(0,30,0,0,\u0026amp;fps); textid[2] = write_string(0,160,95,1,\u0026amp;str); textid[3] = write_float(0,160,105,0,\u0026amp;flt); // Update the texts until ESC is pressed Repeat // Notice the texts get updated as the values of str and flt changes. // The same goes for the value of fps. str = \u0026quot;This program is running for \u0026quot; + timer/100 + \u0026quot; seconds.\u0026quot;; flt = (float)timer/100; frame; Until(key(_esc)); // Delete the texts for(x=0; x\u0026lt;maxtexts; x++) if(textid[x]!=0) delete_text(textid[x]); end end End  Used in example: set_fps(), write(), write_int(), write_string(), write_float(), key(), delete_text(), array, fps, TextID\n","permalink":"https://divhub.github.io/bennugd-website/docs/functions/write/","title":"write()"},{"contents":" Definition write_float ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/write_float/","title":"write_float()"},{"contents":" Definition write_in_map ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/write_in_map/","title":"write_in_map()"},{"contents":" Definition write_int ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/write_int/","title":"write_int()"},{"contents":" Definition write_string ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/write_string/","title":"write_string()"},{"contents":" Definition write_var ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/write_var/","title":"write_var()"},{"contents":" Definition INT xadvance ( \u0026lt;INT angle\u0026gt; , \u0026lt;INT distance\u0026gt; )  Moves a process a certain distance in a certain direction.\nParameters  INT angle - The angle in which to move the process, in thousandths of a degree. INT distance - The distance to move the process, in pixels.  Returns INT : Successrate\n false - Error. true - Success.  Example Program example; Global myproc; Begin myproc=proc(); Loop frame; End End Process proc(); Begin x=100; y=100; Loop xadvance(90000,10); //moves the process vertically (90 degrees) 10 pixels frame; End End  ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/xadvance/","title":"xadvance()"},{"contents":" Definition xput ( )  Parameters Returns Example ","permalink":"https://divhub.github.io/bennugd-website/docs/functions/xput/","title":"xput()"}]